{
  "language": "Solidity",
  "sources": {
    "contracts/mock/MockPublicResolver.sol": {
      "content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract MockPublicResolver {\r\n    \r\n    mapping (bytes32 => address) private _nodeToAddress;\r\n\r\n    function setAddr(bytes32 node, address address_) external {\r\n        _nodeToAddress[node] = address_;\r\n    }\r\n\r\n    function addr(bytes32 node) public view returns (address) {\r\n        return _nodeToAddress[node];\r\n    }\r\n}"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": true,
      "runs": 50
    },
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    }
  }
}