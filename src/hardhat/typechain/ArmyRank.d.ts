/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface ArmyRankInterface extends ethers.utils.Interface {
  functions: {
    "branchPrefix(address)": FunctionFragment;
    "changeJsonNames(string[5])": FunctionFragment;
    "changePowerLevels(int256[5])": FunctionFragment;
    "jsonNames(uint256)": FunctionFragment;
    "owner()": FunctionFragment;
    "powerLevels(uint256)": FunctionFragment;
    "query(address,int256)": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
    "updateBranchPrefix(address,string)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "branchPrefix",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "changeJsonNames",
    values: [[string, string, string, string, string]]
  ): string;
  encodeFunctionData(
    functionFragment: "changePowerLevels",
    values: [
      [BigNumberish, BigNumberish, BigNumberish, BigNumberish, BigNumberish]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "jsonNames",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "powerLevels",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "query",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "updateBranchPrefix",
    values: [string, string]
  ): string;

  decodeFunctionResult(
    functionFragment: "branchPrefix",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "changeJsonNames",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "changePowerLevels",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "jsonNames", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "powerLevels",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "query", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateBranchPrefix",
    data: BytesLike
  ): Result;

  events: {
    "OwnershipTransferred(address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
}

export class ArmyRank extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: ArmyRankInterface;

  functions: {
    branchPrefix(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "branchPrefix(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    changeJsonNames(
      jsonNames_: [string, string, string, string, string],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "changeJsonNames(string[5])"(
      jsonNames_: [string, string, string, string, string],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    changePowerLevels(
      powerLevels_: [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "changePowerLevels(int256[5])"(
      powerLevels_: [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    jsonNames(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "jsonNames(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    owner(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "owner()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    powerLevels(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "powerLevels(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    query(
      branchAddr: string,
      power: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      uriPrefix: string;
      0: string;
    }>;

    "query(address,int256)"(
      branchAddr: string,
      power: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      uriPrefix: string;
      0: string;
    }>;

    renounceOwnership(overrides?: Overrides): Promise<ContractTransaction>;

    "renounceOwnership()"(overrides?: Overrides): Promise<ContractTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    updateBranchPrefix(
      branchAddr: string,
      prefix: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "updateBranchPrefix(address,string)"(
      branchAddr: string,
      prefix: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  branchPrefix(arg0: string, overrides?: CallOverrides): Promise<string>;

  "branchPrefix(address)"(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<string>;

  changeJsonNames(
    jsonNames_: [string, string, string, string, string],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "changeJsonNames(string[5])"(
    jsonNames_: [string, string, string, string, string],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  changePowerLevels(
    powerLevels_: [
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "changePowerLevels(int256[5])"(
    powerLevels_: [
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  jsonNames(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

  "jsonNames(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  owner(overrides?: CallOverrides): Promise<string>;

  "owner()"(overrides?: CallOverrides): Promise<string>;

  powerLevels(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "powerLevels(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  query(
    branchAddr: string,
    power: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "query(address,int256)"(
    branchAddr: string,
    power: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  renounceOwnership(overrides?: Overrides): Promise<ContractTransaction>;

  "renounceOwnership()"(overrides?: Overrides): Promise<ContractTransaction>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferOwnership(address)"(
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  updateBranchPrefix(
    branchAddr: string,
    prefix: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "updateBranchPrefix(address,string)"(
    branchAddr: string,
    prefix: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    branchPrefix(arg0: string, overrides?: CallOverrides): Promise<string>;

    "branchPrefix(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<string>;

    changeJsonNames(
      jsonNames_: [string, string, string, string, string],
      overrides?: CallOverrides
    ): Promise<void>;

    "changeJsonNames(string[5])"(
      jsonNames_: [string, string, string, string, string],
      overrides?: CallOverrides
    ): Promise<void>;

    changePowerLevels(
      powerLevels_: [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ],
      overrides?: CallOverrides
    ): Promise<void>;

    "changePowerLevels(int256[5])"(
      powerLevels_: [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ],
      overrides?: CallOverrides
    ): Promise<void>;

    jsonNames(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

    "jsonNames(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    owner(overrides?: CallOverrides): Promise<string>;

    "owner()"(overrides?: CallOverrides): Promise<string>;

    powerLevels(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "powerLevels(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    query(
      branchAddr: string,
      power: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "query(address,int256)"(
      branchAddr: string,
      power: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    "renounceOwnership()"(overrides?: CallOverrides): Promise<void>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    updateBranchPrefix(
      branchAddr: string,
      prefix: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "updateBranchPrefix(address,string)"(
      branchAddr: string,
      prefix: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    OwnershipTransferred(
      previousOwner: string | null,
      newOwner: string | null
    ): EventFilter;
  };

  estimateGas: {
    branchPrefix(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    "branchPrefix(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    changeJsonNames(
      jsonNames_: [string, string, string, string, string],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "changeJsonNames(string[5])"(
      jsonNames_: [string, string, string, string, string],
      overrides?: Overrides
    ): Promise<BigNumber>;

    changePowerLevels(
      powerLevels_: [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "changePowerLevels(int256[5])"(
      powerLevels_: [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ],
      overrides?: Overrides
    ): Promise<BigNumber>;

    jsonNames(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "jsonNames(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    "owner()"(overrides?: CallOverrides): Promise<BigNumber>;

    powerLevels(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "powerLevels(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    query(
      branchAddr: string,
      power: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "query(address,int256)"(
      branchAddr: string,
      power: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    renounceOwnership(overrides?: Overrides): Promise<BigNumber>;

    "renounceOwnership()"(overrides?: Overrides): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    updateBranchPrefix(
      branchAddr: string,
      prefix: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "updateBranchPrefix(address,string)"(
      branchAddr: string,
      prefix: string,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    branchPrefix(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "branchPrefix(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    changeJsonNames(
      jsonNames_: [string, string, string, string, string],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "changeJsonNames(string[5])"(
      jsonNames_: [string, string, string, string, string],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    changePowerLevels(
      powerLevels_: [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "changePowerLevels(int256[5])"(
      powerLevels_: [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    jsonNames(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "jsonNames(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    powerLevels(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "powerLevels(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    query(
      branchAddr: string,
      power: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "query(address,int256)"(
      branchAddr: string,
      power: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    renounceOwnership(overrides?: Overrides): Promise<PopulatedTransaction>;

    "renounceOwnership()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    updateBranchPrefix(
      branchAddr: string,
      prefix: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "updateBranchPrefix(address,string)"(
      branchAddr: string,
      prefix: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
