/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { MockEnsRegistry } from "../MockEnsRegistry";

export class MockEnsRegistry__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<MockEnsRegistry> {
    return super.deploy(overrides || {}) as Promise<MockEnsRegistry>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockEnsRegistry {
    return super.attach(address) as MockEnsRegistry;
  }
  connect(signer: Signer): MockEnsRegistry__factory {
    return super.connect(signer) as MockEnsRegistry__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockEnsRegistry {
    return new Contract(address, _abi, signerOrProvider) as MockEnsRegistry;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "resolver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "resolverAddr",
        type: "address",
      },
    ],
    name: "setResolver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610146806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80630178b8bf1461003b5780631896f70a14610080575b600080fd5b6100646100493660046100be565b6000908152602081905260409020546001600160a01b031690565b6040516001600160a01b03909116815260200160405180910390f35b6100bc61008e3660046100d6565b60009182526020829052604090912080546001600160a01b0319166001600160a01b03909216919091179055565b005b6000602082840312156100cf578081fd5b5035919050565b600080604083850312156100e8578081fd5b8235915060208301356001600160a01b0381168114610105578182fd5b80915050925092905056fea26469706673582212201c1a4d8134a6dce30c4e164ba5e62209aca90b9019d1dc487170217552b73cb964736f6c63430008040033";
