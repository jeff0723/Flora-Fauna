/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { ArmyEnhancer } from "../ArmyEnhancer";

export class ArmyEnhancer__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    name: string,
    symbol: string,
    overrides?: Overrides
  ): Promise<ArmyEnhancer> {
    return super.deploy(name, symbol, overrides || {}) as Promise<ArmyEnhancer>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  attach(address: string): ArmyEnhancer {
    return super.attach(address) as ArmyEnhancer;
  }
  connect(signer: Signer): ArmyEnhancer__factory {
    return super.connect(signer) as ArmyEnhancer__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArmyEnhancer {
    return new Contract(address, _abi, signerOrProvider) as ArmyEnhancer;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "commander",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "consume",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "commander",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "produce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620011ab380380620011ab833981016040819052620000349162000237565b8151829082906200004d906003906020850190620000de565b50805162000063906004906020840190620000de565b505050620000806200007a6200008860201b60201c565b6200008c565b5050620002f1565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000ec906200029e565b90600052602060002090601f0160209004810192826200011057600085556200015b565b82601f106200012b57805160ff19168380011785556200015b565b828001600101855582156200015b579182015b828111156200015b5782518255916020019190600101906200013e565b50620001699291506200016d565b5090565b5b808211156200016957600081556001016200016e565b600082601f83011262000195578081fd5b81516001600160401b0380821115620001b257620001b2620002db565b604051601f8301601f19908116603f01168101908282118183101715620001dd57620001dd620002db565b81604052838152602092508683858801011115620001f9578485fd5b8491505b838210156200021c5785820183015181830184015290820190620001fd565b838211156200022d57848385830101525b9695505050505050565b600080604083850312156200024a578182fd5b82516001600160401b038082111562000261578384fd5b6200026f8683870162000184565b9350602085015191508082111562000285578283fd5b50620002948582860162000184565b9150509250929050565b600181811c90821680620002b357607f821691505b60208210811415620002d557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610eaa80620003016000396000f3fe608060405234801561001057600080fd5b50600436106100e05760003560e01c806370a082311161008757806370a0823114610195578063715018a6146101be5780638da5cb5b146101c657806395d89b41146101e6578063a457c2d7146101ee578063a9059cbb14610201578063dd62ed3e14610214578063f2fde38b1461024d57600080fd5b806306fdde03146100e5578063095ea7b31461010357806318160ddd14610126578063224b5c721461013857806323b872dd1461014d578063313ce56714610160578063395093511461016f57806366ca10ca14610182575b600080fd5b6100ed610260565b6040516100fa9190610c3f565b60405180910390f35b610116610111366004610c16565b6102f2565b60405190151581526020016100fa565b6002545b6040519081526020016100fa565b61014b610146366004610c16565b610309565b005b61011661015b366004610bdb565b610364565b604051601281526020016100fa565b61011661017d366004610c16565b61040e565b61014b610190366004610c16565b61044a565b61012a6101a3366004610b88565b6001600160a01b031660009081526020819052604090205490565b61014b610498565b6101ce6104d3565b6040516001600160a01b0390911681526020016100fa565b6100ed6104e2565b6101166101fc366004610c16565b6104f1565b61011661020f366004610c16565b61058a565b61012a610222366004610ba9565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61014b61025b366004610b88565b610597565b60606003805461026f90610e03565b80601f016020809104026020016040519081016040528092919081815260200182805461029b90610e03565b80156102e85780601f106102bd576101008083540402835291602001916102e8565b820191906000526020600020905b8154815290600101906020018083116102cb57829003601f168201915b5050505050905090565b60006102ff338484610637565b5060015b92915050565b336103126104d3565b6001600160a01b0316146103415760405162461bcd60e51b815260040161033890610c92565b60405180910390fd5b610360826103516012600a610d22565b61035b9084610dcd565b61075c565b5050565b6000610371848484610890565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103f65760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b6064820152608401610338565b6104038533858403610637565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102ff918590610445908690610cc7565b610637565b336104536104d3565b6001600160a01b0316146104795760405162461bcd60e51b815260040161033890610c92565b610360826104896012600a610d22565b6104939084610dcd565b610a4d565b336104a16104d3565b6001600160a01b0316146104c75760405162461bcd60e51b815260040161033890610c92565b6104d16000610b1a565b565b6005546001600160a01b031690565b60606004805461026f90610e03565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156105735760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610338565b6105803385858403610637565b5060019392505050565b60006102ff338484610890565b336105a06104d3565b6001600160a01b0316146105c65760405162461bcd60e51b815260040161033890610c92565b6001600160a01b03811661062b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610338565b61063481610b1a565b50565b6001600160a01b0383166106995760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610338565b6001600160a01b0382166106fa5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610338565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0382166107bc5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610338565b6001600160a01b038216600090815260208190526040902054818110156108305760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610338565b6001600160a01b038316600090815260208190526040812083830390556002805484929061085f908490610dec565b90915550506040518281526000906001600160a01b03851690600080516020610e558339815191529060200161074f565b6001600160a01b0383166108f45760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610338565b6001600160a01b0382166109565760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610338565b6001600160a01b038316600090815260208190526040902054818110156109ce5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610338565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610a05908490610cc7565b92505081905550826001600160a01b0316846001600160a01b0316600080516020610e5583398151915284604051610a3f91815260200190565b60405180910390a350505050565b6001600160a01b038216610aa35760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610338565b8060026000828254610ab59190610cc7565b90915550506001600160a01b03821660009081526020819052604081208054839290610ae2908490610cc7565b90915550506040518181526001600160a01b03831690600090600080516020610e558339815191529060200160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80356001600160a01b0381168114610b8357600080fd5b919050565b600060208284031215610b99578081fd5b610ba282610b6c565b9392505050565b60008060408385031215610bbb578081fd5b610bc483610b6c565b9150610bd260208401610b6c565b90509250929050565b600080600060608486031215610bef578081fd5b610bf884610b6c565b9250610c0660208501610b6c565b9150604084013590509250925092565b60008060408385031215610c28578182fd5b610c3183610b6c565b946020939093013593505050565b6000602080835283518082850152825b81811015610c6b57858101830151858201604001528201610c4f565b81811115610c7c5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610cda57610cda610e3e565b500190565b600181815b80851115610d1a578160001904821115610d0057610d00610e3e565b80851615610d0d57918102915b93841c9390800290610ce4565b509250929050565b6000610ba260ff841683600082610d3b57506001610303565b81610d4857506000610303565b8160018114610d5e5760028114610d6857610d84565b6001915050610303565b60ff841115610d7957610d79610e3e565b50506001821b610303565b5060208310610133831016604e8410600b8410161715610da7575081810a610303565b610db18383610cdf565b8060001904821115610dc557610dc5610e3e565b029392505050565b6000816000190483118215151615610de757610de7610e3e565b500290565b600082821015610dfe57610dfe610e3e565b500390565b600181811c90821680610e1757607f821691505b60208210811415610e3857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212203f57b1b029e4157f2fb50911adfe476e8080375ad2fcece8f2544b4c33eeca0564736f6c63430008040033";
