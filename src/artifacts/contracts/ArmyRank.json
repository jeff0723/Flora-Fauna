{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "int256[5]",
          "name": "powerLevels_",
          "type": "int256[5]"
        },
        {
          "internalType": "string[5]",
          "name": "jsonNames_",
          "type": "string[5]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "branchPrefix",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string[5]",
          "name": "jsonNames_",
          "type": "string[5]"
        }
      ],
      "name": "changeJsonNames",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256[5]",
          "name": "powerLevels_",
          "type": "int256[5]"
        }
      ],
      "name": "changePowerLevels",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "jsonNames",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "powerLevels",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "branchAddr",
          "type": "address"
        },
        {
          "internalType": "int256",
          "name": "power",
          "type": "int256"
        }
      ],
      "name": "query",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "branchAddr",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "prefix",
          "type": "string"
        }
      ],
      "name": "updateBranchPrefix",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/JustaJunk/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/access/Ownable.sol",
    "10": "/Users/JustaJunk/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/Context.sol",
    "19": "contracts/ArmyRank.sol"
  },
  "ast": {
    "absolutePath": "contracts/ArmyRank.sol",
    "exportedSymbols": {
      "ArmyRank": [
        961
      ],
      "Context": [
        5516
      ],
      "Ownable": [
        4046
      ],
      "RANK": [
        744
      ]
    },
    "id": 962,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 727,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:19"
      },
      {
        "absolutePath": "/Users/JustaJunk/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 728,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 962,
        "sourceUnit": 4047,
        "src": "57:52:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 729,
          "nodeType": "StructuredDocumentation",
          "src": "111:60:19",
          "text": " @notice Methods called by FloraArmy and FaunaArmy"
        },
        "fullyImplemented": false,
        "id": 744,
        "linearizedBaseContracts": [
          744
        ],
        "name": "RANK",
        "nameLocation": "182:4:19",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "f2fde38b",
            "id": 734,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnership",
            "nameLocation": "202:17:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 731,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 734,
                  "src": "220:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 730,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "220:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "219:9:19"
            },
            "returnParameters": {
              "id": 733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "237:0:19"
            },
            "scope": 744,
            "src": "193:45:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "bc209516",
            "id": 743,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "query",
            "nameLocation": "252:5:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 736,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 743,
                  "src": "258:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 735,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "258:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 738,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 743,
                  "src": "267:3:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 737,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "267:3:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "257:14:19"
            },
            "returnParameters": {
              "id": 742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 741,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 743,
                  "src": "295:13:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 740,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "295:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "294:15:19"
            },
            "scope": 744,
            "src": "243:67:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 962,
        "src": "172:140:19"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 746,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4046,
              "src": "418:7:19"
            },
            "id": 747,
            "nodeType": "InheritanceSpecifier",
            "src": "418:7:19"
          }
        ],
        "contractDependencies": [
          4046,
          5516
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 745,
          "nodeType": "StructuredDocumentation",
          "src": "314:82:19",
          "text": " @title Ranking system of FloraArmy and FaunaArmy\n @author Justa Liang"
        },
        "fullyImplemented": true,
        "id": 961,
        "linearizedBaseContracts": [
          961,
          4046,
          5516
        ],
        "name": "ArmyRank",
        "nameLocation": "406:8:19",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 748,
              "nodeType": "StructuredDocumentation",
              "src": "433:40:19",
              "text": "@notice URI prefix of certain branch"
            },
            "functionSelector": "a323d456",
            "id": 752,
            "mutability": "mutable",
            "name": "branchPrefix",
            "nameLocation": "513:12:19",
            "nodeType": "VariableDeclaration",
            "scope": 961,
            "src": "478:47:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
              "typeString": "mapping(address => string)"
            },
            "typeName": {
              "id": 751,
              "keyType": {
                "id": 749,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "487:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "478:27:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                "typeString": "mapping(address => string)"
              },
              "valueType": {
                "id": 750,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "498:6:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 753,
              "nodeType": "StructuredDocumentation",
              "src": "532:54:19",
              "text": "@notice Level of power to reach to upgrade minions"
            },
            "functionSelector": "76034ca9",
            "id": 757,
            "mutability": "mutable",
            "name": "powerLevels",
            "nameLocation": "605:11:19",
            "nodeType": "VariableDeclaration",
            "scope": 961,
            "src": "591:25:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_int256_$5_storage",
              "typeString": "int256[5]"
            },
            "typeName": {
              "baseType": {
                "id": 754,
                "name": "int",
                "nodeType": "ElementaryTypeName",
                "src": "591:3:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                }
              },
              "id": 756,
              "length": {
                "hexValue": "35",
                "id": 755,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "595:1:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_5_by_1",
                  "typeString": "int_const 5"
                },
                "value": "5"
              },
              "nodeType": "ArrayTypeName",
              "src": "591:6:19",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_int256_$5_storage_ptr",
                "typeString": "int256[5]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 758,
              "nodeType": "StructuredDocumentation",
              "src": "623:30:19",
              "text": "@notice Metadata filenames"
            },
            "functionSelector": "8ebc87c3",
            "id": 762,
            "mutability": "mutable",
            "name": "jsonNames",
            "nameLocation": "675:9:19",
            "nodeType": "VariableDeclaration",
            "scope": 961,
            "src": "658:26:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$5_storage",
              "typeString": "string[5]"
            },
            "typeName": {
              "baseType": {
                "id": 759,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "658:6:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 761,
              "length": {
                "hexValue": "35",
                "id": 760,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "665:1:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_5_by_1",
                  "typeString": "int_const 5"
                },
                "value": "5"
              },
              "nodeType": "ArrayTypeName",
              "src": "658:9:19",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$5_storage_ptr",
                "typeString": "string[5]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 802,
              "nodeType": "Block",
              "src": "971:144:19",
              "statements": [
                {
                  "body": {
                    "id": 800,
                    "nodeType": "Block",
                    "src": "1010:99:19",
                    "statements": [
                      {
                        "expression": {
                          "id": 790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 784,
                              "name": "powerLevels",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 757,
                              "src": "1024:11:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_int256_$5_storage",
                                "typeString": "int256[5] storage ref"
                              }
                            },
                            "id": 786,
                            "indexExpression": {
                              "id": 785,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 775,
                              "src": "1036:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1024:14:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 787,
                              "name": "powerLevels_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 767,
                              "src": "1041:12:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_int256_$5_memory_ptr",
                                "typeString": "int256[5] memory"
                              }
                            },
                            "id": 789,
                            "indexExpression": {
                              "id": 788,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 775,
                              "src": "1054:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1041:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "1024:32:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 791,
                        "nodeType": "ExpressionStatement",
                        "src": "1024:32:19"
                      },
                      {
                        "expression": {
                          "id": 798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 792,
                              "name": "jsonNames",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 762,
                              "src": "1070:9:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$5_storage",
                                "typeString": "string storage ref[5] storage ref"
                              }
                            },
                            "id": 794,
                            "indexExpression": {
                              "id": 793,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 775,
                              "src": "1080:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1070:12:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 795,
                              "name": "jsonNames_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 771,
                              "src": "1085:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_memory_ptr_$5_memory_ptr",
                                "typeString": "string memory[5] memory"
                              }
                            },
                            "id": 797,
                            "indexExpression": {
                              "id": 796,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 775,
                              "src": "1096:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1085:13:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1070:28:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 799,
                        "nodeType": "ExpressionStatement",
                        "src": "1070:28:19"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 778,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 775,
                      "src": "998:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "35",
                      "id": 779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1002:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "src": "998:5:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 801,
                  "initializationExpression": {
                    "assignments": [
                      775
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 775,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "991:1:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 801,
                        "src": "986:6:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 774,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "986:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 777,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "995:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "986:10:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1005:3:19",
                      "subExpression": {
                        "id": 781,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 775,
                        "src": "1005:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 783,
                    "nodeType": "ExpressionStatement",
                    "src": "1005:3:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "981:128:19"
                }
              ]
            },
            "documentation": {
              "id": 763,
              "nodeType": "StructuredDocumentation",
              "src": "691:206:19",
              "text": " @dev Set power levels and metadata filenames\n @param powerLevels_ Array with length 5, from low level to high\n @param jsonNames_ Array with length 5, from low level URI to high"
            },
            "id": 803,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 772,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 767,
                  "mutability": "mutable",
                  "name": "powerLevels_",
                  "nameLocation": "928:12:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "914:26:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_int256_$5_memory_ptr",
                    "typeString": "int256[5]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 764,
                      "name": "int",
                      "nodeType": "ElementaryTypeName",
                      "src": "914:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "id": 766,
                    "length": {
                      "hexValue": "35",
                      "id": 765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "918:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "914:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_int256_$5_storage_ptr",
                      "typeString": "int256[5]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 771,
                  "mutability": "mutable",
                  "name": "jsonNames_",
                  "nameLocation": "959:10:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "942:27:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$5_memory_ptr",
                    "typeString": "string[5]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 768,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "942:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 770,
                    "length": {
                      "hexValue": "35",
                      "id": 769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "949:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "942:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$5_storage_ptr",
                      "typeString": "string[5]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "913:57:19"
            },
            "returnParameters": {
              "id": 773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "971:0:19"
            },
            "scope": 961,
            "src": "902:213:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 880,
              "nodeType": "Block",
              "src": "1378:492:19",
              "statements": [
                {
                  "body": {
                    "id": 878,
                    "nodeType": "Block",
                    "src": "1437:427:19",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 826,
                            "name": "power",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 808,
                            "src": "1455:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 827,
                              "name": "powerLevels",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 757,
                              "src": "1464:11:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_int256_$5_storage",
                                "typeString": "int256[5] storage ref"
                              }
                            },
                            "id": 829,
                            "indexExpression": {
                              "id": 828,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 814,
                              "src": "1476:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1464:14:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "1455:23:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 877,
                        "nodeType": "IfStatement",
                        "src": "1451:403:19",
                        "trueBody": {
                          "id": 876,
                          "nodeType": "Block",
                          "src": "1480:374:19",
                          "statements": [
                            {
                              "assignments": [
                                832
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 832,
                                  "mutability": "mutable",
                                  "name": "prefix",
                                  "nameLocation": "1512:6:19",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 876,
                                  "src": "1498:20:19",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string"
                                  },
                                  "typeName": {
                                    "id": 831,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1498:6:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage_ptr",
                                      "typeString": "string"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 836,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 833,
                                  "name": "branchPrefix",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 752,
                                  "src": "1521:12:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                                    "typeString": "mapping(address => string storage ref)"
                                  }
                                },
                                "id": 835,
                                "indexExpression": {
                                  "id": 834,
                                  "name": "branchAddr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 806,
                                  "src": "1534:10:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1521:24:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "1498:47:19"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 843,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 839,
                                        "name": "prefix",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 832,
                                        "src": "1573:6:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "id": 838,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1567:5:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                        "typeString": "type(bytes storage pointer)"
                                      },
                                      "typeName": {
                                        "id": 837,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1567:5:19",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 840,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1567:13:19",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 841,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "1567:20:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 842,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1591:1:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "1567:25:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 874,
                                "nodeType": "Block",
                                "src": "1728:112:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "baseExpression": {
                                                "id": 865,
                                                "name": "branchPrefix",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 752,
                                                "src": "1781:12:19",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                                                  "typeString": "mapping(address => string storage ref)"
                                                }
                                              },
                                              "id": 867,
                                              "indexExpression": {
                                                "id": 866,
                                                "name": "branchAddr",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 806,
                                                "src": "1794:10:19",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "1781:24:19",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_string_storage",
                                                "typeString": "string storage ref"
                                              }
                                            },
                                            {
                                              "baseExpression": {
                                                "id": 868,
                                                "name": "jsonNames",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 762,
                                                "src": "1807:9:19",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_string_storage_$5_storage",
                                                  "typeString": "string storage ref[5] storage ref"
                                                }
                                              },
                                              "id": 870,
                                              "indexExpression": {
                                                "id": 869,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 814,
                                                "src": "1817:1:19",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "1807:12:19",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_string_storage",
                                                "typeString": "string storage ref"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_string_storage",
                                                "typeString": "string storage ref"
                                              },
                                              {
                                                "typeIdentifier": "t_string_storage",
                                                "typeString": "string storage ref"
                                              }
                                            ],
                                            "expression": {
                                              "id": 863,
                                              "name": "abi",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -1,
                                              "src": "1764:3:19",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_abi",
                                                "typeString": "abi"
                                              }
                                            },
                                            "id": 864,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "encodePacked",
                                            "nodeType": "MemberAccess",
                                            "src": "1764:16:19",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                              "typeString": "function () pure returns (bytes memory)"
                                            }
                                          },
                                          "id": 871,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "1764:56:19",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        ],
                                        "id": 862,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "1757:6:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                          "typeString": "type(string storage pointer)"
                                        },
                                        "typeName": {
                                          "id": 861,
                                          "name": "string",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "1757:6:19",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 872,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1757:64:19",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    },
                                    "functionReturnParameters": 812,
                                    "id": 873,
                                    "nodeType": "Return",
                                    "src": "1750:71:19"
                                  }
                                ]
                              },
                              "id": 875,
                              "nodeType": "IfStatement",
                              "src": "1563:277:19",
                              "trueBody": {
                                "id": 860,
                                "nodeType": "Block",
                                "src": "1594:112:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "baseExpression": {
                                                "id": 848,
                                                "name": "branchPrefix",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 752,
                                                "src": "1647:12:19",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                                                  "typeString": "mapping(address => string storage ref)"
                                                }
                                              },
                                              "id": 853,
                                              "indexExpression": {
                                                "arguments": [
                                                  {
                                                    "hexValue": "30",
                                                    "id": 851,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "1668:1:19",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_0_by_1",
                                                      "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_rational_0_by_1",
                                                      "typeString": "int_const 0"
                                                    }
                                                  ],
                                                  "id": 850,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "nodeType": "ElementaryTypeNameExpression",
                                                  "src": "1660:7:19",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_address_$",
                                                    "typeString": "type(address)"
                                                  },
                                                  "typeName": {
                                                    "id": 849,
                                                    "name": "address",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "1660:7:19",
                                                    "typeDescriptions": {}
                                                  }
                                                },
                                                "id": 852,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1660:10:19",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "1647:24:19",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_string_storage",
                                                "typeString": "string storage ref"
                                              }
                                            },
                                            {
                                              "baseExpression": {
                                                "id": 854,
                                                "name": "jsonNames",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 762,
                                                "src": "1673:9:19",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_string_storage_$5_storage",
                                                  "typeString": "string storage ref[5] storage ref"
                                                }
                                              },
                                              "id": 856,
                                              "indexExpression": {
                                                "id": 855,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 814,
                                                "src": "1683:1:19",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "1673:12:19",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_string_storage",
                                                "typeString": "string storage ref"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_string_storage",
                                                "typeString": "string storage ref"
                                              },
                                              {
                                                "typeIdentifier": "t_string_storage",
                                                "typeString": "string storage ref"
                                              }
                                            ],
                                            "expression": {
                                              "id": 846,
                                              "name": "abi",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -1,
                                              "src": "1630:3:19",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_abi",
                                                "typeString": "abi"
                                              }
                                            },
                                            "id": 847,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "encodePacked",
                                            "nodeType": "MemberAccess",
                                            "src": "1630:16:19",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                              "typeString": "function () pure returns (bytes memory)"
                                            }
                                          },
                                          "id": 857,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "1630:56:19",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        ],
                                        "id": 845,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "1623:6:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                          "typeString": "type(string storage pointer)"
                                        },
                                        "typeName": {
                                          "id": 844,
                                          "name": "string",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "1623:6:19",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 858,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1623:64:19",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    },
                                    "functionReturnParameters": 812,
                                    "id": 859,
                                    "nodeType": "Return",
                                    "src": "1616:71:19"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 820,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 814,
                      "src": "1424:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1429:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1424:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 879,
                  "initializationExpression": {
                    "assignments": [
                      814
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 814,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1398:1:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 879,
                        "src": "1393:6:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 813,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1393:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 819,
                    "initialValue": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 818,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 815,
                          "name": "powerLevels",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 757,
                          "src": "1402:11:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_int256_$5_storage",
                            "typeString": "int256[5] storage ref"
                          }
                        },
                        "id": 816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1402:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1421:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1402:20:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1393:29:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "--",
                      "prefix": false,
                      "src": "1432:3:19",
                      "subExpression": {
                        "id": 823,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 814,
                        "src": "1432:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 825,
                    "nodeType": "ExpressionStatement",
                    "src": "1432:3:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "1388:476:19"
                }
              ]
            },
            "documentation": {
              "id": 804,
              "nodeType": "StructuredDocumentation",
              "src": "1121:168:19",
              "text": " @dev Call by Army Contract, to dynamically get token URI\n @param branchAddr Branch address of the minion\n @param power Power of the minion"
            },
            "functionSelector": "bc209516",
            "id": 881,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "query",
            "nameLocation": "1303:5:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 806,
                  "mutability": "mutable",
                  "name": "branchAddr",
                  "nameLocation": "1317:10:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 881,
                  "src": "1309:18:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 805,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1309:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 808,
                  "mutability": "mutable",
                  "name": "power",
                  "nameLocation": "1333:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 881,
                  "src": "1329:9:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 807,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "1329:3:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1308:31:19"
            },
            "returnParameters": {
              "id": 812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 811,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 881,
                  "src": "1363:13:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 810,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1363:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1362:15:19"
            },
            "scope": 961,
            "src": "1294:576:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 897,
              "nodeType": "Block",
              "src": "2155:50:19",
              "statements": [
                {
                  "expression": {
                    "id": 895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 891,
                        "name": "branchPrefix",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 752,
                        "src": "2165:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                          "typeString": "mapping(address => string storage ref)"
                        }
                      },
                      "id": 893,
                      "indexExpression": {
                        "id": 892,
                        "name": "branchAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 884,
                        "src": "2178:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2165:24:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 894,
                      "name": "prefix",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 886,
                      "src": "2192:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "2165:33:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 896,
                  "nodeType": "ExpressionStatement",
                  "src": "2165:33:19"
                }
              ]
            },
            "documentation": {
              "id": 882,
              "nodeType": "StructuredDocumentation",
              "src": "1876:183:19",
              "text": " @dev Update branch prefix (give ownership to Battlefield contract in the future)\n @param branchAddr Branch address\n @param prefix Prefix of URI to be set"
            },
            "functionSelector": "6a1805e2",
            "id": 898,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 889,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 888,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3995,
                  "src": "2145:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "2145:9:19"
              }
            ],
            "name": "updateBranchPrefix",
            "nameLocation": "2073:18:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 884,
                  "mutability": "mutable",
                  "name": "branchAddr",
                  "nameLocation": "2100:10:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 898,
                  "src": "2092:18:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 883,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2092:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 886,
                  "mutability": "mutable",
                  "name": "prefix",
                  "nameLocation": "2128:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 898,
                  "src": "2112:22:19",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 885,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2112:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2091:44:19"
            },
            "returnParameters": {
              "id": 890,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2155:0:19"
            },
            "scope": 961,
            "src": "2064:141:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 928,
              "nodeType": "Block",
              "src": "2425:102:19",
              "statements": [
                {
                  "body": {
                    "id": 926,
                    "nodeType": "Block",
                    "src": "2464:57:19",
                    "statements": [
                      {
                        "expression": {
                          "id": 924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 918,
                              "name": "powerLevels",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 757,
                              "src": "2478:11:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_int256_$5_storage",
                                "typeString": "int256[5] storage ref"
                              }
                            },
                            "id": 920,
                            "indexExpression": {
                              "id": 919,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 909,
                              "src": "2490:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2478:14:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 921,
                              "name": "powerLevels_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 903,
                              "src": "2495:12:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_int256_$5_calldata_ptr",
                                "typeString": "int256[5] calldata"
                              }
                            },
                            "id": 923,
                            "indexExpression": {
                              "id": 922,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 909,
                              "src": "2508:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2495:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "2478:32:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 925,
                        "nodeType": "ExpressionStatement",
                        "src": "2478:32:19"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 912,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 909,
                      "src": "2452:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "35",
                      "id": 913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2456:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "src": "2452:5:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 927,
                  "initializationExpression": {
                    "assignments": [
                      909
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 909,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2445:1:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 927,
                        "src": "2440:6:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 908,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2440:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 911,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2449:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2440:10:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2459:3:19",
                      "subExpression": {
                        "id": 915,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 909,
                        "src": "2459:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 917,
                    "nodeType": "ExpressionStatement",
                    "src": "2459:3:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "2435:86:19"
                }
              ]
            },
            "documentation": {
              "id": 899,
              "nodeType": "StructuredDocumentation",
              "src": "2211:133:19",
              "text": " @dev Change power levels (will be discarded)\n @param powerLevels_ Array with length 5, from low level to high"
            },
            "functionSelector": "cdeba622",
            "id": 929,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 906,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 905,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3995,
                  "src": "2415:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "2415:9:19"
              }
            ],
            "name": "changePowerLevels",
            "nameLocation": "2358:17:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 903,
                  "mutability": "mutable",
                  "name": "powerLevels_",
                  "nameLocation": "2392:12:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 929,
                  "src": "2376:28:19",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_int256_$5_calldata_ptr",
                    "typeString": "int256[5]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 900,
                      "name": "int",
                      "nodeType": "ElementaryTypeName",
                      "src": "2376:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "id": 902,
                    "length": {
                      "hexValue": "35",
                      "id": 901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2380:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2376:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_int256_$5_storage_ptr",
                      "typeString": "int256[5]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2375:30:19"
            },
            "returnParameters": {
              "id": 907,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2425:0:19"
            },
            "scope": 961,
            "src": "2349:178:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 959,
              "nodeType": "Block",
              "src": "2752:98:19",
              "statements": [
                {
                  "body": {
                    "id": 957,
                    "nodeType": "Block",
                    "src": "2791:53:19",
                    "statements": [
                      {
                        "expression": {
                          "id": 955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 949,
                              "name": "jsonNames",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 762,
                              "src": "2805:9:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$5_storage",
                                "typeString": "string storage ref[5] storage ref"
                              }
                            },
                            "id": 951,
                            "indexExpression": {
                              "id": 950,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 940,
                              "src": "2815:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2805:12:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 952,
                              "name": "jsonNames_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 934,
                              "src": "2820:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_calldata_ptr_$5_calldata_ptr",
                                "typeString": "string calldata[5] calldata"
                              }
                            },
                            "id": 954,
                            "indexExpression": {
                              "id": 953,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 940,
                              "src": "2831:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2820:13:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "src": "2805:28:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 956,
                        "nodeType": "ExpressionStatement",
                        "src": "2805:28:19"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 943,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 940,
                      "src": "2779:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "35",
                      "id": 944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2783:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "src": "2779:5:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 958,
                  "initializationExpression": {
                    "assignments": [
                      940
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 940,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2772:1:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 958,
                        "src": "2767:6:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 939,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2767:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 942,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2776:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2767:10:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2786:3:19",
                      "subExpression": {
                        "id": 946,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 940,
                        "src": "2786:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 948,
                    "nodeType": "ExpressionStatement",
                    "src": "2786:3:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "2762:82:19"
                }
              ]
            },
            "documentation": {
              "id": 930,
              "nodeType": "StructuredDocumentation",
              "src": "2533:139:19",
              "text": " @dev Change metadat filename (will be discarded)\n @param jsonNames_ Array with length 5, from low level URI to high"
            },
            "functionSelector": "4a6d0f20",
            "id": 960,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 937,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 936,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3995,
                  "src": "2742:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "2742:9:19"
              }
            ],
            "name": "changeJsonNames",
            "nameLocation": "2686:15:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 934,
                  "mutability": "mutable",
                  "name": "jsonNames_",
                  "nameLocation": "2721:10:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 960,
                  "src": "2702:29:19",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_calldata_ptr_$5_calldata_ptr",
                    "typeString": "string[5]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 931,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "2702:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 933,
                    "length": {
                      "hexValue": "35",
                      "id": 932,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2709:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2702:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$5_storage_ptr",
                      "typeString": "string[5]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2701:31:19"
            },
            "returnParameters": {
              "id": 938,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2752:0:19"
            },
            "scope": 961,
            "src": "2677:173:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 962,
        "src": "397:2455:19"
      }
    ],
    "src": "32:2820:19"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162000f8f38038062000f8f8339810160408190526200003491620002d0565b600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35060005b60058110156200014057828160058110620000a357634e487b7160e01b600052603260045260246000fd5b602002015160028260058110620000ca57634e487b7160e01b600052603260045260246000fd5b0155818160058110620000ed57634e487b7160e01b600052603260045260246000fd5b6020020151600782600581106200011457634e487b7160e01b600052603260045260246000fd5b0190805190602001906200012a92919062000149565b5080620001378162000401565b91505062000078565b5050506200043f565b8280546200015790620003c4565b90600052602060002090601f0160209004810192826200017b5760008555620001c6565b82601f106200019657805160ff1916838001178555620001c6565b82800160010185558215620001c6579182015b82811115620001c6578251825591602001919060010190620001a9565b50620001d4929150620001d8565b5090565b5b80821115620001d45760008155600101620001d9565b6000601f838184011262000201578182fd5b6005620002186200021282620003a1565b6200036e565b8085855b84811015620002c35781518801898782011262000237578788fd5b80516001600160401b0381111562000253576200025362000429565b602062000268828a01601f191682016200036e565b8281528c828486010111156200027c578a8bfd5b8a5b838110156200029b5784810183015182820184015282016200027e565b83811115620002ac578b8385840101525b50875295860195939093019250506001016200021c565b5090979650505050505050565b60008060c08385031215620002e3578182fd5b83601f840112620002f2578182fd5b6005620003036200021282620003a1565b808560a087018881111562000316578687fd5b865b858110156200033857825185526020948501949092019160010162000318565b505191955090925050506001600160401b0381111562000356578182fd5b6200036485828601620001ef565b9150509250929050565b604051601f8201601f191681016001600160401b038111828210171562000399576200039962000429565b604052919050565b60006001600160401b03821115620003bd57620003bd62000429565b5060051b90565b600181811c90821680620003d957607f821691505b60208210811415620003fb57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156200042257634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b610b40806200044f6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638ebc87c3116100665780638ebc87c314610114578063a323d45614610134578063bc20951614610147578063cdeba6221461015a578063f2fde38b1461016d5761009e565b80634a6d0f20146100a35780636a1805e2146100b8578063715018a6146100cb57806376034ca9146100d35780638da5cb5b146100f9575b600080fd5b6100b66100b136600461089c565b610180565b005b6100b66100c6366004610803565b610233565b6100b6610286565b6100e66100e13660046108d7565b6102fa565b6040519081526020015b60405180910390f35b6000546040516001600160a01b0390911681526020016100f0565b6101276101223660046108d7565b610311565b6040516100f0919061099c565b6101276101423660046107b9565b6103b1565b6101276101553660046107da565b6103ca565b6100b6610168366004610881565b610579565b6100b661017b3660046107b9565b610609565b6000546001600160a01b031633146101b35760405162461bcd60e51b81526004016101aa906109ef565b60405180910390fd5b60005b600581101561022f578181600581106101df57634e487b7160e01b600052603260045260246000fd5b6020028101906101ef9190610a24565b6007836005811061021057634e487b7160e01b600052603260045260246000fd5b61021c939101916106f3565b508061022781610ad9565b9150506101b6565b5050565b6000546001600160a01b0316331461025d5760405162461bcd60e51b81526004016101aa906109ef565b6001600160a01b03831660009081526001602052604090206102809083836106f3565b50505050565b6000546001600160a01b031633146102b05760405162461bcd60e51b81526004016101aa906109ef565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6002816005811061030a57600080fd5b0154905081565b6007816005811061032157600080fd5b01805490915061033090610a9e565b80601f016020809104026020016040519081016040528092919081815260200182805461035c90610a9e565b80156103a95780601f1061037e576101008083540402835291602001916103a9565b820191906000526020600020905b81548152906001019060200180831161038c57829003601f168201915b505050505081565b6001602052600090815260409020805461033090610a9e565b606060006103da60016005610a70565b90505b600281600581106103fe57634e487b7160e01b600052603260045260246000fd5b01548312610561576001600160a01b0384166000908152600160205260408120805461042990610a9e565b80601f016020809104026020016040519081016040528092919081815260200182805461045590610a9e565b80156104a25780601f10610477576101008083540402835291602001916104a2565b820191906000526020600020905b81548152906001019060200180831161048557829003601f168201915b50505050509050805160001415610528576000805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49600783600581106104fe57634e487b7160e01b600052603260045260246000fd5b01604051602001610510929190610987565b60405160208183030381529060405292505050610573565b6001600160a01b0385166000908152600160205260409020600783600581106104fe57634e487b7160e01b600052603260045260246000fd5b8061056b81610a87565b9150506103dd565b92915050565b6000546001600160a01b031633146105a35760405162461bcd60e51b81526004016101aa906109ef565b60005b600581101561022f578181600581106105cf57634e487b7160e01b600052603260045260246000fd5b6020020135600282600581106105f557634e487b7160e01b600052603260045260246000fd5b01558061060181610ad9565b9150506105a6565b6000546001600160a01b031633146106335760405162461bcd60e51b81526004016101aa906109ef565b6001600160a01b0381166106985760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101aa565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b8280546106ff90610a9e565b90600052602060002090601f0160209004810192826107215760008555610767565b82601f1061073a5782800160ff19823516178555610767565b82800160010185558215610767579182015b8281111561076757823582559160200191906001019061074c565b50610773929150610777565b5090565b5b808211156107735760008155600101610778565b80356001600160a01b03811681146107a357600080fd5b919050565b8060a0810183101561057357600080fd5b6000602082840312156107ca578081fd5b6107d38261078c565b9392505050565b600080604083850312156107ec578081fd5b6107f58361078c565b946020939093013593505050565b600080600060408486031215610817578081fd5b6108208461078c565b9250602084013567ffffffffffffffff8082111561083c578283fd5b818601915086601f83011261084f578283fd5b81358181111561085d578384fd5b87602082850101111561086e578384fd5b6020830194508093505050509250925092565b600060a08284031215610892578081fd5b6107d383836107a8565b6000602082840312156108ad578081fd5b813567ffffffffffffffff8111156108c3578182fd5b6108cf848285016107a8565b949350505050565b6000602082840312156108e8578081fd5b5035919050565b8054600090600181811c908083168061090957607f831692505b602080841082141561092957634e487b7160e01b86526022600452602486fd5b81801561093d576001811461094e5761097b565b60ff1986168952848901965061097b565b60008881526020902060005b868110156109735781548b82015290850190830161095a565b505084890196505b50505050505092915050565b60006108cf61099683866108ef565b846108ef565b6000602080835283518082850152825b818110156109c8578581018301518582016040015282016109ac565b818111156109d95783604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000808335601e19843603018112610a3a578283fd5b83018035915067ffffffffffffffff821115610a54578283fd5b602001915036819003821315610a6957600080fd5b9250929050565b600082821015610a8257610a82610af4565b500390565b600081610a9657610a96610af4565b506000190190565b600181811c90821680610ab257607f821691505b60208210811415610ad357634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415610aed57610aed610af4565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220f715b8846f76a57df9c894cf6a5bf42d322872c19c4aef58d809bacf63f6e64864736f6c63430008030033",
  "bytecodeSha1": "5519f00afd24ba9a556daebb3a53f1487929b5d4",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.3+commit.8d00100c"
  },
  "contractName": "ArmyRank",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "17": [
            2082,
            2104,
            true
          ]
        }
      },
      "10": {},
      "19": {
        "ArmyRank.query": {
          "15": [
            1455,
            1478,
            false
          ],
          "16": [
            1567,
            1592,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable.owner": {
          "0": [
            1133,
            1146
          ]
        },
        "Ownable.renounceOwnership": {
          "5": [
            1764,
            1809
          ],
          "6": [
            1819,
            1838
          ]
        },
        "Ownable.transferOwnership": {
          "12": [
            2074,
            2147
          ],
          "13": [
            2157,
            2200
          ],
          "14": [
            2210,
            2227
          ]
        }
      },
      "10": {
        "Context._msgSender": {
          "1": [
            658,
            675
          ]
        }
      },
      "19": {
        "ArmyRank.changeJsonNames": {
          "2": [
            2805,
            2833
          ],
          "3": [
            2786,
            2789
          ]
        },
        "ArmyRank.changePowerLevels": {
          "10": [
            2478,
            2510
          ],
          "11": [
            2459,
            2462
          ]
        },
        "ArmyRank.query": {
          "7": [
            1616,
            1687
          ],
          "8": [
            1750,
            1821
          ],
          "9": [
            1432,
            1435
          ]
        },
        "ArmyRank.updateBranchPrefix": {
          "4": [
            2165,
            2198
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.0.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061009e5760003560e01c80638ebc87c3116100665780638ebc87c314610114578063a323d45614610134578063bc20951614610147578063cdeba6221461015a578063f2fde38b1461016d5761009e565b80634a6d0f20146100a35780636a1805e2146100b8578063715018a6146100cb57806376034ca9146100d35780638da5cb5b146100f9575b600080fd5b6100b66100b136600461089c565b610180565b005b6100b66100c6366004610803565b610233565b6100b6610286565b6100e66100e13660046108d7565b6102fa565b6040519081526020015b60405180910390f35b6000546040516001600160a01b0390911681526020016100f0565b6101276101223660046108d7565b610311565b6040516100f0919061099c565b6101276101423660046107b9565b6103b1565b6101276101553660046107da565b6103ca565b6100b6610168366004610881565b610579565b6100b661017b3660046107b9565b610609565b6000546001600160a01b031633146101b35760405162461bcd60e51b81526004016101aa906109ef565b60405180910390fd5b60005b600581101561022f578181600581106101df57634e487b7160e01b600052603260045260246000fd5b6020028101906101ef9190610a24565b6007836005811061021057634e487b7160e01b600052603260045260246000fd5b61021c939101916106f3565b508061022781610ad9565b9150506101b6565b5050565b6000546001600160a01b0316331461025d5760405162461bcd60e51b81526004016101aa906109ef565b6001600160a01b03831660009081526001602052604090206102809083836106f3565b50505050565b6000546001600160a01b031633146102b05760405162461bcd60e51b81526004016101aa906109ef565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6002816005811061030a57600080fd5b0154905081565b6007816005811061032157600080fd5b01805490915061033090610a9e565b80601f016020809104026020016040519081016040528092919081815260200182805461035c90610a9e565b80156103a95780601f1061037e576101008083540402835291602001916103a9565b820191906000526020600020905b81548152906001019060200180831161038c57829003601f168201915b505050505081565b6001602052600090815260409020805461033090610a9e565b606060006103da60016005610a70565b90505b600281600581106103fe57634e487b7160e01b600052603260045260246000fd5b01548312610561576001600160a01b0384166000908152600160205260408120805461042990610a9e565b80601f016020809104026020016040519081016040528092919081815260200182805461045590610a9e565b80156104a25780601f10610477576101008083540402835291602001916104a2565b820191906000526020600020905b81548152906001019060200180831161048557829003601f168201915b50505050509050805160001415610528576000805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49600783600581106104fe57634e487b7160e01b600052603260045260246000fd5b01604051602001610510929190610987565b60405160208183030381529060405292505050610573565b6001600160a01b0385166000908152600160205260409020600783600581106104fe57634e487b7160e01b600052603260045260246000fd5b8061056b81610a87565b9150506103dd565b92915050565b6000546001600160a01b031633146105a35760405162461bcd60e51b81526004016101aa906109ef565b60005b600581101561022f578181600581106105cf57634e487b7160e01b600052603260045260246000fd5b6020020135600282600581106105f557634e487b7160e01b600052603260045260246000fd5b01558061060181610ad9565b9150506105a6565b6000546001600160a01b031633146106335760405162461bcd60e51b81526004016101aa906109ef565b6001600160a01b0381166106985760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101aa565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b8280546106ff90610a9e565b90600052602060002090601f0160209004810192826107215760008555610767565b82601f1061073a5782800160ff19823516178555610767565b82800160010185558215610767579182015b8281111561076757823582559160200191906001019061074c565b50610773929150610777565b5090565b5b808211156107735760008155600101610778565b80356001600160a01b03811681146107a357600080fd5b919050565b8060a0810183101561057357600080fd5b6000602082840312156107ca578081fd5b6107d38261078c565b9392505050565b600080604083850312156107ec578081fd5b6107f58361078c565b946020939093013593505050565b600080600060408486031215610817578081fd5b6108208461078c565b9250602084013567ffffffffffffffff8082111561083c578283fd5b818601915086601f83011261084f578283fd5b81358181111561085d578384fd5b87602082850101111561086e578384fd5b6020830194508093505050509250925092565b600060a08284031215610892578081fd5b6107d383836107a8565b6000602082840312156108ad578081fd5b813567ffffffffffffffff8111156108c3578182fd5b6108cf848285016107a8565b949350505050565b6000602082840312156108e8578081fd5b5035919050565b8054600090600181811c908083168061090957607f831692505b602080841082141561092957634e487b7160e01b86526022600452602486fd5b81801561093d576001811461094e5761097b565b60ff1986168952848901965061097b565b60008881526020902060005b868110156109735781548b82015290850190830161095a565b505084890196505b50505050505092915050565b60006108cf61099683866108ef565b846108ef565b6000602080835283518082850152825b818110156109c8578581018301518582016040015282016109ac565b818111156109d95783604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000808335601e19843603018112610a3a578283fd5b83018035915067ffffffffffffffff821115610a54578283fd5b602001915036819003821315610a6957600080fd5b9250929050565b600082821015610a8257610a82610af4565b500390565b600081610a9657610a96610af4565b506000190190565b600181811c90821680610ab257607f821691505b60208210811415610ad357634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415610aed57610aed610af4565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220f715b8846f76a57df9c894cf6a5bf42d322872c19c4aef58d809bacf63f6e64864736f6c63430008030033",
  "deployedSourceMap": "397:2455:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2677:173;;;;;;:::i;:::-;;:::i;:::-;;2064:141;;;;;;:::i;:::-;;:::i;1700:145:0:-;;;:::i;591:25:19:-;;;;;;:::i;:::-;;:::i;:::-;;;3997::28;;;3985:2;3970:18;591:25:19;;;;;;;;1068:85:0;1114:7;1140:6;1068:85;;-1:-1:-1;;;;;1140:6:0;;;3791:51:28;;3779:2;3764:18;1068:85:0;3746:102:28;658:26:19;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;478:47::-;;;;;;:::i;:::-;;:::i;1294:576::-;;;;;;:::i;:::-;;:::i;2349:178::-;;;;;;:::i;:::-;;:::i;1994:240:0:-;;;;;;:::i;:::-;;:::i;2677:173:19:-;1114:7:0;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:10;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;;;;;;;;;2767:6:19::1;2762:82;2783:1;2779;:5;2762:82;;;2820:10;2831:1;2820:13;;;;;-1:-1:-1::0;;;2820:13:19::1;;;;;;;;;;;;;;;;;;:::i;:::-;2805:9;2815:1;2805:12;;;;;-1:-1:-1::0;;;2805:12:19::1;;;;;;;;;:28;::::0;:12;::::1;::::0;:28:::1;:::i;:::-;-1:-1:-1::0;2786:3:19;::::1;::::0;::::1;:::i;:::-;;;;2762:82;;;;2677:173:::0;:::o;2064:141::-;1114:7:0;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:10;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2165:24:19;::::1;;::::0;;;-1:-1:-1;2165:24:19::1;::::0;;;;:33:::1;::::0;2192:6;;2165:33:::1;:::i;:::-;;2064:141:::0;;;:::o;1700:145:0:-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:10;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;1806:1:::1;1790:6:::0;;1769:40:::1;::::0;-1:-1:-1;;;;;1790:6:0;;::::1;::::0;1769:40:::1;::::0;1806:1;;1769:40:::1;1836:1;1819:19:::0;;-1:-1:-1;;;;;;1819:19:0::1;::::0;;1700:145::o;591:25:19:-;;;;;;;;;;;;;;;-1:-1:-1;591:25:19;:::o;658:26::-;;;;;;;;;;;;;;;;;-1:-1:-1;658:26:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;478:47::-;;;;;;;;;;;;;;;;:::i;1294:576::-;1363:13;1393:6;1402:20;1421:1;1402:18;:20;:::i;:::-;1393:29;;1388:476;1464:11;1476:1;1464:14;;;;;-1:-1:-1;;;1464:14:19;;;;;;;;;;;1455:5;:23;1451:403;;-1:-1:-1;;;;;1521:24:19;;1498:20;1521:24;;;-1:-1:-1;1521:24:19;;;;;1498:47;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1573:6;1567:20;1591:1;1567:25;1563:277;;;1647:24;;;:12;:24;;;1673:9;1683:1;1673:12;;;;;-1:-1:-1;;;1673:12:19;;;;;;;;;;1630:56;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1616:71;;;;;;1563:277;-1:-1:-1;;;;;1781:24:19;;;;;;-1:-1:-1;1781:24:19;;;;;1807:9;1817:1;1807:12;;;;;-1:-1:-1;;;1807:12:19;;;;;;;;1451:403;1432:3;;;;:::i;:::-;;;;1388:476;;1294:576;;;;;:::o;2349:178::-;1114:7:0;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:10;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;2440:6:19::1;2435:86;2456:1;2452;:5;2435:86;;;2495:12;2508:1;2495:15;;;;;-1:-1:-1::0;;;2495:15:19::1;;;;;;;;;;;;;2478:11;2490:1;2478:14;;;;;-1:-1:-1::0;;;2478:14:19::1;;;;;;;;;;:32:::0;2459:3;::::1;::::0;::::1;:::i;:::-;;;;2435:86;;1994:240:0::0;1114:7;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:10;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2082:22:0;::::1;2074:73;;;::::0;-1:-1:-1;;;2074:73:0;;4843:2:28;2074:73:0::1;::::0;::::1;4825:21:28::0;4882:2;4862:18;;;4855:30;4921:34;4901:18;;;4894:62;-1:-1:-1;;;4972:18:28;;;4965:36;5018:19;;2074:73:0::1;4815:228:28::0;2074:73:0::1;2183:6;::::0;;2162:38:::1;::::0;-1:-1:-1;;;;;2162:38:0;;::::1;::::0;2183:6;::::1;::::0;2162:38:::1;::::0;::::1;2210:6;:17:::0;;-1:-1:-1;;;;;;2210:17:0::1;-1:-1:-1::0;;;;;2210:17:0;;;::::1;::::0;;;::::1;::::0;;1994:240::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:173:28;82:20;;-1:-1:-1;;;;;131:31:28;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:159::-;285:6;318:3;306:16;;303:25;-1:-1:-1;300:2:28;;;341:1;338;331:12;356:196;;468:2;456:9;447:7;443:23;439:32;436:2;;;489:6;481;474:22;436:2;517:29;536:9;517:29;:::i;:::-;507:39;426:126;-1:-1:-1;;;426:126:28:o;557:263::-;;;685:2;673:9;664:7;660:23;656:32;653:2;;;706:6;698;691:22;653:2;734:29;753:9;734:29;:::i;:::-;724:39;810:2;795:18;;;;782:32;;-1:-1:-1;;;643:177:28:o;825:716::-;;;;974:2;962:9;953:7;949:23;945:32;942:2;;;995:6;987;980:22;942:2;1023:29;1042:9;1023:29;:::i;:::-;1013:39;;1103:2;1092:9;1088:18;1075:32;1126:18;1167:2;1159:6;1156:14;1153:2;;;1188:6;1180;1173:22;1153:2;1231:6;1220:9;1216:22;1206:32;;1276:7;1269:4;1265:2;1261:13;1257:27;1247:2;;1303:6;1295;1288:22;1247:2;1348;1335:16;1374:2;1366:6;1363:14;1360:2;;;1395:6;1387;1380:22;1360:2;1445:7;1440:2;1431:6;1427:2;1423:15;1419:24;1416:37;1413:2;;;1471:6;1463;1456:22;1413:2;1507;1503;1499:11;1489:21;;1529:6;1519:16;;;;;932:609;;;;;:::o;1546:244::-;;1682:3;1670:9;1661:7;1657:23;1653:33;1650:2;;;1704:6;1696;1689:22;1650:2;1732:52;1776:7;1765:9;1732:52;:::i;1795:384::-;;1944:2;1932:9;1923:7;1919:23;1915:32;1912:2;;;1965:6;1957;1950:22;1912:2;2010:9;1997:23;2043:18;2035:6;2032:30;2029:2;;;2080:6;2072;2065:22;2029:2;2108:65;2165:7;2156:6;2145:9;2141:22;2108:65;:::i;:::-;2098:75;1902:277;-1:-1:-1;;;;1902:277:28:o;2184:190::-;;2296:2;2284:9;2275:7;2271:23;2267:32;2264:2;;;2317:6;2309;2302:22;2264:2;-1:-1:-1;2345:23:28;;2254:120;-1:-1:-1;2254:120:28:o;2379:979::-;2464:12;;2379:979;;2521:1;2541:18;;;;2594;;;;2621:2;;2675:4;2667:6;2663:17;2653:27;;2621:2;2701;2749;2741:6;2738:14;2718:18;2715:38;2712:2;;;-1:-1:-1;;;2776:33:28;;2832:4;2829:1;2822:15;2862:4;2776:33;2850:17;2712:2;2893:18;2920:104;;;;3038:1;3033:319;;;;2886:466;;2920:104;-1:-1:-1;;2953:24:28;;2941:37;;2998:16;;;;-1:-1:-1;2920:104:28;;3033:319;5948:127;6014:17;;;6064:4;6048:21;;3127:1;3141:165;3155:6;3152:1;3149:13;3141:165;;;3233:14;;3220:11;;;3213:35;3276:16;;;;3170:10;;3141:165;;;3145:3;;3335:6;3330:3;3326:16;3319:23;;2886:466;;;;;;;2437:921;;;;:::o;3363:277::-;;3561:73;3595:38;3629:3;3621:6;3595:38;:::i;:::-;3587:6;3561:73;:::i;4033:603::-;;4174:2;4203;4192:9;4185:21;4235:6;4229:13;4278:6;4273:2;4262:9;4258:18;4251:34;4303:4;4316:140;4330:6;4327:1;4324:13;4316:140;;;4425:14;;;4421:23;;4415:30;4391:17;;;4410:2;4387:26;4380:66;4345:10;;4316:140;;;4474:6;4471:1;4468:13;4465:2;;;4544:4;4539:2;4530:6;4519:9;4515:22;4511:31;4504:45;4465:2;-1:-1:-1;4620:2:28;4599:15;-1:-1:-1;;4595:29:28;4580:45;;;;4627:2;4576:54;;4154:482;-1:-1:-1;;;4154:482:28:o;5048:356::-;5250:2;5232:21;;;5269:18;;;5262:30;5328:34;5323:2;5308:18;;5301:62;5395:2;5380:18;;5222:182::o;5409:534::-;;;5553:11;5540:25;5647:2;5643:7;5632:8;5616:14;5612:29;5608:43;5588:18;5584:68;5574:2;;5669:4;5663;5656:18;5574:2;5699:33;;5751:20;;;-1:-1:-1;5794:18:28;5783:30;;5780:2;;;5829:4;5823;5816:18;5780:2;5865:4;5853:17;;-1:-1:-1;5896:14:28;5892:27;;;5882:38;;5879:2;;;5933:1;5930;5923:12;5879:2;5504:439;;;;;:::o;6080:125::-;;6148:1;6145;6142:8;6139:2;;;6153:18;;:::i;:::-;-1:-1:-1;6190:9:28;;6129:76::o;6210:136::-;;6277:5;6267:2;;6286:18;;:::i;:::-;-1:-1:-1;;;6322:18:28;;6257:89::o;6351:380::-;6430:1;6426:12;;;;6473;;;6494:2;;6548:4;6540:6;6536:17;6526:27;;6494:2;6601;6593:6;6590:14;6570:18;6567:38;6564:2;;;6647:10;6642:3;6638:20;6635:1;6628:31;6682:4;6679:1;6672:15;6710:4;6707:1;6700:15;6564:2;;6406:325;;;:::o;6736:135::-;;-1:-1:-1;;6796:17:28;;6793:2;;;6816:18;;:::i;:::-;-1:-1:-1;6863:1:28;6852:13;;6783:88::o;6876:127::-;6937:10;6932:3;6928:20;6925:1;6918:31;6968:4;6965:1;6958:15;6992:4;6989:1;6982:15",
  "language": "Solidity",
  "natspec": {
    "author": "Justa Liang",
    "kind": "dev",
    "methods": {
      "branchPrefix(address)": {
        "notice": "URI prefix of certain branch"
      },
      "changeJsonNames(string[5])": {
        "details": "Change metadat filename (will be discarded)",
        "params": {
          "jsonNames_": "Array with length 5, from low level URI to high"
        }
      },
      "changePowerLevels(int256[5])": {
        "details": "Change power levels (will be discarded)",
        "params": {
          "powerLevels_": "Array with length 5, from low level to high"
        }
      },
      "constructor": {
        "details": "Set power levels and metadata filenames",
        "params": {
          "jsonNames_": "Array with length 5, from low level URI to high",
          "powerLevels_": "Array with length 5, from low level to high"
        }
      },
      "jsonNames(uint256)": {
        "notice": "Metadata filenames"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "powerLevels(uint256)": {
        "notice": "Level of power to reach to upgrade minions"
      },
      "query(address,int256)": {
        "details": "Call by Army Contract, to dynamically get token URI",
        "params": {
          "branchAddr": "Branch address of the minion",
          "power": "Power of the minion"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateBranchPrefix(address,string)": {
        "details": "Update branch prefix (give ownership to Battlefield contract in the future)",
        "params": {
          "branchAddr": "Branch address",
          "prefix": "Prefix of URI to be set"
        }
      }
    },
    "title": "Ranking system of FloraArmy and FaunaArmy",
    "version": 1
  },
  "offset": [
    397,
    2852
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8EBC87C3 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8EBC87C3 EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0xA323D456 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0xBC209516 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0xCDEBA622 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x16D JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x4A6D0F20 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x6A1805E2 EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0x76034CA9 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x89C JUMP JUMPDEST PUSH2 0x180 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB6 PUSH2 0xC6 CALLDATASIZE PUSH1 0x4 PUSH2 0x803 JUMP JUMPDEST PUSH2 0x233 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x286 JUMP JUMPDEST PUSH2 0xE6 PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0x8D7 JUMP JUMPDEST PUSH2 0x2FA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF0 JUMP JUMPDEST PUSH2 0x127 PUSH2 0x122 CALLDATASIZE PUSH1 0x4 PUSH2 0x8D7 JUMP JUMPDEST PUSH2 0x311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x99C JUMP JUMPDEST PUSH2 0x127 PUSH2 0x142 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x127 PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0x7DA JUMP JUMPDEST PUSH2 0x3CA JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0x881 JUMP JUMPDEST PUSH2 0x579 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0x7B9 JUMP JUMPDEST PUSH2 0x609 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AA SWAP1 PUSH2 0x9EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x22F JUMPI DUP2 DUP2 PUSH1 0x5 DUP2 LT PUSH2 0x1DF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x7 DUP4 PUSH1 0x5 DUP2 LT PUSH2 0x210 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x21C SWAP4 SWAP2 ADD SWAP2 PUSH2 0x6F3 JUMP JUMPDEST POP DUP1 PUSH2 0x227 DUP2 PUSH2 0xAD9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1B6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x25D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AA SWAP1 PUSH2 0x9EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x280 SWAP1 DUP4 DUP4 PUSH2 0x6F3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AA SWAP1 PUSH2 0x9EF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x5 DUP2 LT PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x7 DUP2 PUSH1 0x5 DUP2 LT PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADD DUP1 SLOAD SWAP1 SWAP2 POP PUSH2 0x330 SWAP1 PUSH2 0xA9E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x35C SWAP1 PUSH2 0xA9E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3A9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x37E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3A9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x38C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x330 SWAP1 PUSH2 0xA9E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x3DA PUSH1 0x1 PUSH1 0x5 PUSH2 0xA70 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x5 DUP2 LT PUSH2 0x3FE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD SLOAD DUP4 SLT PUSH2 0x561 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x429 SWAP1 PUSH2 0xA9E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x455 SWAP1 PUSH2 0xA9E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x477 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x485 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x528 JUMPI PUSH1 0x0 DUP1 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH32 0xA6EEF7E35ABE7026729641147F7915573C7E97B47EFA546F5F6E3230263BCB49 PUSH1 0x7 DUP4 PUSH1 0x5 DUP2 LT PUSH2 0x4FE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x510 SWAP3 SWAP2 SWAP1 PUSH2 0x987 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 DUP4 PUSH1 0x5 DUP2 LT PUSH2 0x4FE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH2 0x56B DUP2 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AA SWAP1 PUSH2 0x9EF JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x22F JUMPI DUP2 DUP2 PUSH1 0x5 DUP2 LT PUSH2 0x5CF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x2 DUP3 PUSH1 0x5 DUP2 LT PUSH2 0x5F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD SSTORE DUP1 PUSH2 0x601 DUP2 PUSH2 0xAD9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5A6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x633 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AA SWAP1 PUSH2 0x9EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x698 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1AA JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x6FF SWAP1 PUSH2 0xA9E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x721 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x767 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x73A JUMPI DUP3 DUP1 ADD PUSH1 0xFF NOT DUP3 CALLDATALOAD AND OR DUP6 SSTORE PUSH2 0x767 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x767 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x767 JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x74C JUMP JUMPDEST POP PUSH2 0x773 SWAP3 SWAP2 POP PUSH2 0x777 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x773 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x778 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0xA0 DUP2 ADD DUP4 LT ISZERO PUSH2 0x573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7CA JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x7D3 DUP3 PUSH2 0x78C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7EC JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x7F5 DUP4 PUSH2 0x78C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x817 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x820 DUP5 PUSH2 0x78C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x83C JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x84F JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x85D JUMPI DUP4 DUP5 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x86E JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x892 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x7D3 DUP4 DUP4 PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8AD JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8C3 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x8CF DUP5 DUP3 DUP6 ADD PUSH2 0x7A8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8E8 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND DUP1 PUSH2 0x909 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x929 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x93D JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x94E JUMPI PUSH2 0x97B JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x97B JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x973 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x95A JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8CF PUSH2 0x996 DUP4 DUP7 PUSH2 0x8EF JUMP JUMPDEST DUP5 PUSH2 0x8EF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9C8 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x9AC JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x9D9 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0xA3A JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA54 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0xA69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xA82 JUMPI PUSH2 0xA82 PUSH2 0xAF4 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xA96 JUMPI PUSH2 0xA96 PUSH2 0xAF4 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xAB2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xAD3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xAED JUMPI PUSH2 0xAED PUSH2 0xAF4 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 ISZERO 0xB8 DUP5 PUSH16 0x76A57DF9C894CF6A5BF42D322872C19C 0x4A 0xEF PC 0xD8 MULMOD 0xBA 0xCF PUSH4 0xF6E64864 PUSH20 0x6F6C634300080300330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        397,
        2852
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "6": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "8": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "12": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "DUP1",
      "path": "19"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "REVERT",
      "path": "19"
    },
    "16": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "17": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "POP",
      "path": "19"
    },
    "18": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "21": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "LT",
      "path": "19"
    },
    "22": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9E"
    },
    "25": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "26": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "29": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "SHR",
      "path": "19"
    },
    "32": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "DUP1",
      "path": "19"
    },
    "33": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x8EBC87C3"
    },
    "38": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "GT",
      "path": "19"
    },
    "39": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "43": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "DUP1",
      "path": "19"
    },
    "44": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x8EBC87C3"
    },
    "49": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "EQ",
      "path": "19"
    },
    "50": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x114"
    },
    "53": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "54": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "DUP1",
      "path": "19"
    },
    "55": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xA323D456"
    },
    "60": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "EQ",
      "path": "19"
    },
    "61": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x134"
    },
    "64": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "65": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "DUP1",
      "path": "19"
    },
    "66": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xBC209516"
    },
    "71": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "EQ",
      "path": "19"
    },
    "72": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x147"
    },
    "75": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "76": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "DUP1",
      "path": "19"
    },
    "77": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xCDEBA622"
    },
    "82": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "EQ",
      "path": "19"
    },
    "83": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x15A"
    },
    "86": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "87": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "DUP1",
      "path": "19"
    },
    "88": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "EQ",
      "path": "19"
    },
    "94": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x16D"
    },
    "97": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "98": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9E"
    },
    "101": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "JUMP",
      "path": "19"
    },
    "102": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "103": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "DUP1",
      "path": "19"
    },
    "104": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x4A6D0F20"
    },
    "109": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "EQ",
      "path": "19"
    },
    "110": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA3"
    },
    "113": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "114": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "DUP1",
      "path": "19"
    },
    "115": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x6A1805E2"
    },
    "120": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "EQ",
      "path": "19"
    },
    "121": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB8"
    },
    "124": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "125": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "DUP1",
      "path": "19"
    },
    "126": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x715018A6"
    },
    "131": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "EQ",
      "path": "19"
    },
    "132": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xCB"
    },
    "135": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "136": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "DUP1",
      "path": "19"
    },
    "137": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x76034CA9"
    },
    "142": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "EQ",
      "path": "19"
    },
    "143": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD3"
    },
    "146": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "147": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "DUP1",
      "path": "19"
    },
    "148": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x8DA5CB5B"
    },
    "153": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "EQ",
      "path": "19"
    },
    "154": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF9"
    },
    "157": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "158": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "159": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "161": {
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "DUP1",
      "path": "19"
    },
    "162": {
      "first_revert": true,
      "fn": null,
      "offset": [
        397,
        2852
      ],
      "op": "REVERT",
      "path": "19"
    },
    "163": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2677,
        2850
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "164": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2677,
        2850
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB6"
    },
    "167": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2677,
        2850
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB1"
    },
    "170": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2677,
        2850
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "171": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2677,
        2850
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "173": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2677,
        2850
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x89C"
    },
    "176": {
      "fn": "ArmyRank.changeJsonNames",
      "jump": "i",
      "offset": [
        2677,
        2850
      ],
      "op": "JUMP",
      "path": "19"
    },
    "177": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2677,
        2850
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "178": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2677,
        2850
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x180"
    },
    "181": {
      "fn": "ArmyRank.changeJsonNames",
      "jump": "i",
      "offset": [
        2677,
        2850
      ],
      "op": "JUMP",
      "path": "19"
    },
    "182": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2677,
        2850
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "183": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2677,
        2850
      ],
      "op": "STOP",
      "path": "19"
    },
    "184": {
      "fn": "ArmyRank.updateBranchPrefix",
      "offset": [
        2064,
        2205
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "185": {
      "fn": "ArmyRank.updateBranchPrefix",
      "offset": [
        2064,
        2205
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB6"
    },
    "188": {
      "fn": "ArmyRank.updateBranchPrefix",
      "offset": [
        2064,
        2205
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC6"
    },
    "191": {
      "fn": "ArmyRank.updateBranchPrefix",
      "offset": [
        2064,
        2205
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "192": {
      "fn": "ArmyRank.updateBranchPrefix",
      "offset": [
        2064,
        2205
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "194": {
      "fn": "ArmyRank.updateBranchPrefix",
      "offset": [
        2064,
        2205
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x803"
    },
    "197": {
      "fn": "ArmyRank.updateBranchPrefix",
      "jump": "i",
      "offset": [
        2064,
        2205
      ],
      "op": "JUMP",
      "path": "19"
    },
    "198": {
      "fn": "ArmyRank.updateBranchPrefix",
      "offset": [
        2064,
        2205
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "199": {
      "fn": "ArmyRank.updateBranchPrefix",
      "offset": [
        2064,
        2205
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x233"
    },
    "202": {
      "fn": "ArmyRank.updateBranchPrefix",
      "jump": "i",
      "offset": [
        2064,
        2205
      ],
      "op": "JUMP",
      "path": "19"
    },
    "203": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "204": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "207": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x286"
    },
    "210": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1700,
        1845
      ],
      "op": "JUMP",
      "path": "0"
    },
    "211": {
      "offset": [
        591,
        616
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "212": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        591,
        616
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE6"
    },
    "215": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        591,
        616
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE1"
    },
    "218": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        591,
        616
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "219": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        591,
        616
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "221": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        591,
        616
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8D7"
    },
    "224": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        591,
        616
      ],
      "op": "JUMP",
      "path": "19"
    },
    "225": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        591,
        616
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "226": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        591,
        616
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2FA"
    },
    "229": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        591,
        616
      ],
      "op": "JUMP",
      "path": "19"
    },
    "230": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        591,
        616
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "231": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        591,
        616
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "233": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        591,
        616
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "234": {
      "op": "SWAP1"
    },
    "235": {
      "op": "DUP2"
    },
    "236": {
      "op": "MSTORE"
    },
    "237": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "239": {
      "op": "ADD"
    },
    "240": {
      "offset": [
        591,
        616
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "241": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        591,
        616
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "243": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        591,
        616
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "244": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        591,
        616
      ],
      "op": "DUP1",
      "path": "19"
    },
    "245": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        591,
        616
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "246": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        591,
        616
      ],
      "op": "SUB",
      "path": "19"
    },
    "247": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        591,
        616
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "248": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        591,
        616
      ],
      "op": "RETURN",
      "path": "19"
    },
    "249": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "250": {
      "fn": "Ownable.owner",
      "offset": [
        1114,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "252": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "253": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "255": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "260": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "262": {
      "op": "SHL"
    },
    "263": {
      "op": "SUB"
    },
    "264": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "265": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "266": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "267": {
      "op": "DUP2"
    },
    "268": {
      "op": "MSTORE"
    },
    "269": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "271": {
      "op": "ADD"
    },
    "272": {
      "fn": "Ownable.owner",
      "offset": [
        1068,
        1153
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF0"
    },
    "275": {
      "op": "JUMP"
    },
    "276": {
      "offset": [
        658,
        684
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "277": {
      "fn": "Ownable.owner",
      "offset": [
        658,
        684
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x127"
    },
    "280": {
      "fn": "Ownable.owner",
      "offset": [
        658,
        684
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x122"
    },
    "283": {
      "fn": "Ownable.owner",
      "offset": [
        658,
        684
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "284": {
      "fn": "Ownable.owner",
      "offset": [
        658,
        684
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "286": {
      "fn": "Ownable.owner",
      "offset": [
        658,
        684
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8D7"
    },
    "289": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        658,
        684
      ],
      "op": "JUMP",
      "path": "19"
    },
    "290": {
      "fn": "Ownable.owner",
      "offset": [
        658,
        684
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "291": {
      "fn": "Ownable.owner",
      "offset": [
        658,
        684
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x311"
    },
    "294": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        658,
        684
      ],
      "op": "JUMP",
      "path": "19"
    },
    "295": {
      "fn": "Ownable.owner",
      "offset": [
        658,
        684
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "296": {
      "fn": "Ownable.owner",
      "offset": [
        658,
        684
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "298": {
      "fn": "Ownable.owner",
      "offset": [
        658,
        684
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "299": {
      "fn": "Ownable.owner",
      "offset": [
        658,
        684
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF0"
    },
    "302": {
      "fn": "Ownable.owner",
      "offset": [
        658,
        684
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "303": {
      "fn": "Ownable.owner",
      "offset": [
        658,
        684
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "304": {
      "fn": "Ownable.owner",
      "offset": [
        658,
        684
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x99C"
    },
    "307": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        658,
        684
      ],
      "op": "JUMP",
      "path": "19"
    },
    "308": {
      "offset": [
        478,
        525
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "309": {
      "fn": "Ownable.owner",
      "offset": [
        478,
        525
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x127"
    },
    "312": {
      "fn": "Ownable.owner",
      "offset": [
        478,
        525
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x142"
    },
    "315": {
      "fn": "Ownable.owner",
      "offset": [
        478,
        525
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "316": {
      "fn": "Ownable.owner",
      "offset": [
        478,
        525
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "318": {
      "fn": "Ownable.owner",
      "offset": [
        478,
        525
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7B9"
    },
    "321": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        478,
        525
      ],
      "op": "JUMP",
      "path": "19"
    },
    "322": {
      "fn": "Ownable.owner",
      "offset": [
        478,
        525
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "323": {
      "fn": "Ownable.owner",
      "offset": [
        478,
        525
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3B1"
    },
    "326": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        478,
        525
      ],
      "op": "JUMP",
      "path": "19"
    },
    "327": {
      "fn": "ArmyRank.query",
      "offset": [
        1294,
        1870
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "328": {
      "fn": "ArmyRank.query",
      "offset": [
        1294,
        1870
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x127"
    },
    "331": {
      "fn": "ArmyRank.query",
      "offset": [
        1294,
        1870
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x155"
    },
    "334": {
      "fn": "ArmyRank.query",
      "offset": [
        1294,
        1870
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "335": {
      "fn": "ArmyRank.query",
      "offset": [
        1294,
        1870
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "337": {
      "fn": "ArmyRank.query",
      "offset": [
        1294,
        1870
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7DA"
    },
    "340": {
      "fn": "ArmyRank.query",
      "jump": "i",
      "offset": [
        1294,
        1870
      ],
      "op": "JUMP",
      "path": "19"
    },
    "341": {
      "fn": "ArmyRank.query",
      "offset": [
        1294,
        1870
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "342": {
      "fn": "ArmyRank.query",
      "offset": [
        1294,
        1870
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3CA"
    },
    "345": {
      "fn": "ArmyRank.query",
      "jump": "i",
      "offset": [
        1294,
        1870
      ],
      "op": "JUMP",
      "path": "19"
    },
    "346": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2349,
        2527
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "347": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2349,
        2527
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB6"
    },
    "350": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2349,
        2527
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x168"
    },
    "353": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2349,
        2527
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "354": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2349,
        2527
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "356": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2349,
        2527
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x881"
    },
    "359": {
      "fn": "ArmyRank.changePowerLevels",
      "jump": "i",
      "offset": [
        2349,
        2527
      ],
      "op": "JUMP",
      "path": "19"
    },
    "360": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2349,
        2527
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "361": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2349,
        2527
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x579"
    },
    "364": {
      "fn": "ArmyRank.changePowerLevels",
      "jump": "i",
      "offset": [
        2349,
        2527
      ],
      "op": "JUMP",
      "path": "19"
    },
    "365": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "366": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "369": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17B"
    },
    "372": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "373": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "375": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B9"
    },
    "378": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMP",
      "path": "0"
    },
    "379": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "380": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x609"
    },
    "383": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMP",
      "path": "0"
    },
    "384": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2677,
        2850
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "385": {
      "fn": "Ownable.owner",
      "offset": [
        1114,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "387": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "392": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "394": {
      "op": "SHL"
    },
    "395": {
      "op": "SUB"
    },
    "396": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "397": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 1
    },
    "398": {
      "offset": [
        1280,
        1303
      ],
      "op": "EQ",
      "path": "0"
    },
    "399": {
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B3"
    },
    "402": {
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "403": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "405": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "406": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "410": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "412": {
      "op": "SHL"
    },
    "413": {
      "offset": [
        1272,
        1340
      ],
      "op": "DUP2",
      "path": "0"
    },
    "414": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "415": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "417": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "ADD",
      "path": "0"
    },
    "418": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AA"
    },
    "421": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "422": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9EF"
    },
    "425": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "426": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "427": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "429": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "430": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "DUP1",
      "path": "0"
    },
    "431": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "432": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "SUB",
      "path": "0"
    },
    "433": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "434": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "435": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "436": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2767,
        2773
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "438": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2762,
        2844
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "439": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2783,
        2784
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "441": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2779,
        2780
      ],
      "op": "DUP2",
      "path": "19"
    },
    "442": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2779,
        2784
      ],
      "op": "LT",
      "path": "19"
    },
    "443": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2762,
        2844
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "444": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2762,
        2844
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x22F"
    },
    "447": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2762,
        2844
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "448": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2820,
        2830
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 2
    },
    "449": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2831,
        2832
      ],
      "op": "DUP2",
      "path": "19"
    },
    "450": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2820,
        2833
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "452": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2820,
        2833
      ],
      "op": "DUP2",
      "path": "19"
    },
    "453": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2820,
        2833
      ],
      "op": "LT",
      "path": "19"
    },
    "454": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2820,
        2833
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1DF"
    },
    "457": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2820,
        2833
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "458": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "463": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "465": {
      "op": "SHL"
    },
    "466": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2820,
        2833
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "468": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2820,
        2833
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "469": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2820,
        2833
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x32"
    },
    "471": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2820,
        2833
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "473": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2820,
        2833
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "474": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2820,
        2833
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "476": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2820,
        2833
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "478": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2820,
        2833
      ],
      "op": "REVERT",
      "path": "19"
    },
    "479": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2820,
        2833
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "480": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2820,
        2833
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "482": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2820,
        2833
      ],
      "op": "MUL",
      "path": "19"
    },
    "483": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2820,
        2833
      ],
      "op": "DUP2",
      "path": "19"
    },
    "484": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2820,
        2833
      ],
      "op": "ADD",
      "path": "19"
    },
    "485": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2820,
        2833
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "486": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2820,
        2833
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1EF"
    },
    "489": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2820,
        2833
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "490": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2820,
        2833
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "491": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2820,
        2833
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA24"
    },
    "494": {
      "fn": "ArmyRank.changeJsonNames",
      "jump": "i",
      "offset": [
        2820,
        2833
      ],
      "op": "JUMP",
      "path": "19"
    },
    "495": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2820,
        2833
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "496": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2805,
        2814
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x7"
    },
    "498": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2815,
        2816
      ],
      "op": "DUP4",
      "path": "19"
    },
    "499": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2805,
        2817
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "501": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2805,
        2817
      ],
      "op": "DUP2",
      "path": "19"
    },
    "502": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2805,
        2817
      ],
      "op": "LT",
      "path": "19"
    },
    "503": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2805,
        2817
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x210"
    },
    "506": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2805,
        2817
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "507": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "512": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "514": {
      "op": "SHL"
    },
    "515": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2805,
        2817
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "517": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2805,
        2817
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "518": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2805,
        2817
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x32"
    },
    "520": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2805,
        2817
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "522": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2805,
        2817
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "523": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2805,
        2817
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "525": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2805,
        2817
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "527": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2805,
        2817
      ],
      "op": "REVERT",
      "path": "19"
    },
    "528": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2805,
        2817
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "529": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2805,
        2833
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x21C"
    },
    "532": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2805,
        2833
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "533": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2805,
        2817
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "534": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2805,
        2817
      ],
      "op": "ADD",
      "path": "19"
    },
    "535": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2805,
        2817
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "536": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2805,
        2833
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6F3"
    },
    "539": {
      "fn": "ArmyRank.changeJsonNames",
      "jump": "i",
      "offset": [
        2805,
        2833
      ],
      "op": "JUMP",
      "path": "19"
    },
    "540": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2805,
        2833
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "541": {
      "op": "POP"
    },
    "542": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2786,
        2789
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 3
    },
    "543": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2786,
        2789
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x227"
    },
    "546": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2786,
        2789
      ],
      "op": "DUP2",
      "path": "19"
    },
    "547": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2786,
        2789
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xAD9"
    },
    "550": {
      "fn": "ArmyRank.changeJsonNames",
      "jump": "i",
      "offset": [
        2786,
        2789
      ],
      "op": "JUMP",
      "path": "19"
    },
    "551": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2786,
        2789
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "552": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2786,
        2789
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "553": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2786,
        2789
      ],
      "op": "POP",
      "path": "19"
    },
    "554": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2786,
        2789
      ],
      "op": "POP",
      "path": "19"
    },
    "555": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2762,
        2844
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1B6"
    },
    "558": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2762,
        2844
      ],
      "op": "JUMP",
      "path": "19"
    },
    "559": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2762,
        2844
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "560": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2762,
        2844
      ],
      "op": "POP",
      "path": "19"
    },
    "561": {
      "fn": "ArmyRank.changeJsonNames",
      "offset": [
        2677,
        2850
      ],
      "op": "POP",
      "path": "19"
    },
    "562": {
      "fn": "ArmyRank.changeJsonNames",
      "jump": "o",
      "offset": [
        2677,
        2850
      ],
      "op": "JUMP",
      "path": "19"
    },
    "563": {
      "fn": "ArmyRank.updateBranchPrefix",
      "offset": [
        2064,
        2205
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "564": {
      "fn": "Ownable.owner",
      "offset": [
        1114,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "566": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "571": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "573": {
      "op": "SHL"
    },
    "574": {
      "op": "SUB"
    },
    "575": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "576": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "10"
    },
    "577": {
      "offset": [
        1280,
        1303
      ],
      "op": "EQ",
      "path": "0"
    },
    "578": {
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25D"
    },
    "581": {
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "582": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "584": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "585": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "589": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "591": {
      "op": "SHL"
    },
    "592": {
      "offset": [
        1272,
        1340
      ],
      "op": "DUP2",
      "path": "0"
    },
    "593": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "594": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "596": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "ADD",
      "path": "0"
    },
    "597": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AA"
    },
    "600": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "601": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9EF"
    },
    "604": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "605": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "610": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "612": {
      "op": "SHL"
    },
    "613": {
      "op": "SUB"
    },
    "614": {
      "fn": "ArmyRank.updateBranchPrefix",
      "offset": [
        2165,
        2189
      ],
      "op": "DUP4",
      "path": "19",
      "statement": 4
    },
    "615": {
      "fn": "ArmyRank.updateBranchPrefix",
      "offset": [
        2165,
        2189
      ],
      "op": "AND",
      "path": "19"
    },
    "616": {
      "fn": "ArmyRank.updateBranchPrefix",
      "offset": [
        2165,
        2189
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "618": {
      "fn": "ArmyRank.updateBranchPrefix",
      "offset": [
        2165,
        2189
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "619": {
      "fn": "ArmyRank.updateBranchPrefix",
      "offset": [
        2165,
        2189
      ],
      "op": "DUP2",
      "path": "19"
    },
    "620": {
      "fn": "ArmyRank.updateBranchPrefix",
      "offset": [
        2165,
        2189
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "623": {
      "fn": "ArmyRank.updateBranchPrefix",
      "offset": [
        2165,
        2189
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "625": {
      "fn": "ArmyRank.updateBranchPrefix",
      "offset": [
        2165,
        2189
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "626": {
      "fn": "ArmyRank.updateBranchPrefix",
      "offset": [
        2165,
        2189
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "628": {
      "fn": "ArmyRank.updateBranchPrefix",
      "offset": [
        2165,
        2189
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "629": {
      "fn": "ArmyRank.updateBranchPrefix",
      "offset": [
        2165,
        2189
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "630": {
      "fn": "ArmyRank.updateBranchPrefix",
      "offset": [
        2165,
        2198
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x280"
    },
    "633": {
      "fn": "ArmyRank.updateBranchPrefix",
      "offset": [
        2165,
        2198
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "634": {
      "fn": "ArmyRank.updateBranchPrefix",
      "offset": [
        2192,
        2198
      ],
      "op": "DUP4",
      "path": "19"
    },
    "635": {
      "fn": "ArmyRank.updateBranchPrefix",
      "offset": [
        2192,
        2198
      ],
      "op": "DUP4",
      "path": "19"
    },
    "636": {
      "fn": "ArmyRank.updateBranchPrefix",
      "offset": [
        2165,
        2198
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6F3"
    },
    "639": {
      "fn": "ArmyRank.updateBranchPrefix",
      "jump": "i",
      "offset": [
        2165,
        2198
      ],
      "op": "JUMP",
      "path": "19"
    },
    "640": {
      "fn": "ArmyRank.updateBranchPrefix",
      "offset": [
        2165,
        2198
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "641": {
      "fn": "ArmyRank.updateBranchPrefix",
      "offset": [
        2165,
        2198
      ],
      "op": "POP",
      "path": "19"
    },
    "642": {
      "fn": "ArmyRank.updateBranchPrefix",
      "offset": [
        2064,
        2205
      ],
      "op": "POP",
      "path": "19"
    },
    "643": {
      "fn": "ArmyRank.updateBranchPrefix",
      "offset": [
        2064,
        2205
      ],
      "op": "POP",
      "path": "19"
    },
    "644": {
      "fn": "ArmyRank.updateBranchPrefix",
      "offset": [
        2064,
        2205
      ],
      "op": "POP",
      "path": "19"
    },
    "645": {
      "fn": "ArmyRank.updateBranchPrefix",
      "jump": "o",
      "offset": [
        2064,
        2205
      ],
      "op": "JUMP",
      "path": "19"
    },
    "646": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1700,
        1845
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "647": {
      "fn": "Ownable.owner",
      "offset": [
        1114,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "649": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "654": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "656": {
      "op": "SHL"
    },
    "657": {
      "op": "SUB"
    },
    "658": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "659": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "10"
    },
    "660": {
      "offset": [
        1280,
        1303
      ],
      "op": "EQ",
      "path": "0"
    },
    "661": {
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B0"
    },
    "664": {
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "665": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "667": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "668": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "672": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "674": {
      "op": "SHL"
    },
    "675": {
      "offset": [
        1272,
        1340
      ],
      "op": "DUP2",
      "path": "0"
    },
    "676": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "677": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "679": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "ADD",
      "path": "0"
    },
    "680": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AA"
    },
    "683": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "684": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9EF"
    },
    "687": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "688": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "689": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1806,
        1807
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x0"
    },
    "691": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1790,
        1796
      ],
      "op": "DUP1",
      "path": "0"
    },
    "692": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1790,
        1796
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "693": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1769,
        1809
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "695": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1769,
        1809
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "700": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "702": {
      "op": "SHL"
    },
    "703": {
      "op": "SUB"
    },
    "704": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1790,
        1796
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "705": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1790,
        1796
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "706": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1790,
        1796
      ],
      "op": "AND",
      "path": "0"
    },
    "707": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1790,
        1796
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "708": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1769,
        1809
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "741": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1769,
        1809
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "742": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1806,
        1807
      ],
      "op": "DUP4",
      "path": "0"
    },
    "743": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1806,
        1807
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "744": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1769,
        1809
      ],
      "op": "LOG3",
      "path": "0"
    },
    "745": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1836,
        1837
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x0"
    },
    "747": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1819,
        1838
      ],
      "op": "DUP1",
      "path": "0"
    },
    "748": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1819,
        1838
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "755": {
      "op": "SHL"
    },
    "756": {
      "op": "SUB"
    },
    "757": {
      "op": "NOT"
    },
    "758": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1819,
        1838
      ],
      "op": "AND",
      "path": "0"
    },
    "759": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1819,
        1838
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "760": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1819,
        1838
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "761": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1700,
        1845
      ],
      "op": "JUMP",
      "path": "0"
    },
    "762": {
      "offset": [
        591,
        616
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "763": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        591,
        616
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "765": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        591,
        616
      ],
      "op": "DUP2",
      "path": "19"
    },
    "766": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        591,
        616
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "768": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        591,
        616
      ],
      "op": "DUP2",
      "path": "19"
    },
    "769": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        591,
        616
      ],
      "op": "LT",
      "path": "19"
    },
    "770": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        591,
        616
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x30A"
    },
    "773": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        591,
        616
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "774": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        591,
        616
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "776": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        591,
        616
      ],
      "op": "DUP1",
      "path": "19"
    },
    "777": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        591,
        616
      ],
      "op": "REVERT",
      "path": "19"
    },
    "778": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        591,
        616
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "779": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        591,
        616
      ],
      "op": "ADD",
      "path": "19"
    },
    "780": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        591,
        616
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "781": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        591,
        616
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "782": {
      "op": "POP"
    },
    "783": {
      "offset": [
        591,
        616
      ],
      "op": "DUP2",
      "path": "19"
    },
    "784": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        591,
        616
      ],
      "op": "JUMP",
      "path": "19"
    },
    "785": {
      "offset": [
        658,
        684
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "786": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x7"
    },
    "788": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "DUP2",
      "path": "19"
    },
    "789": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "791": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "DUP2",
      "path": "19"
    },
    "792": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "LT",
      "path": "19"
    },
    "793": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x321"
    },
    "796": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "797": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "799": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "DUP1",
      "path": "19"
    },
    "800": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "REVERT",
      "path": "19"
    },
    "801": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "802": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "ADD",
      "path": "19"
    },
    "803": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "DUP1",
      "path": "19"
    },
    "804": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "805": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "806": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "807": {
      "op": "POP"
    },
    "808": {
      "offset": [
        658,
        684
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x330"
    },
    "811": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "812": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA9E"
    },
    "815": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        658,
        684
      ],
      "op": "JUMP",
      "path": "19"
    },
    "816": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "817": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "DUP1",
      "path": "19"
    },
    "818": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "820": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "ADD",
      "path": "19"
    },
    "821": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "823": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "DUP1",
      "path": "19"
    },
    "824": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "825": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "DIV",
      "path": "19"
    },
    "826": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "MUL",
      "path": "19"
    },
    "827": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "829": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "ADD",
      "path": "19"
    },
    "830": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "832": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "833": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "834": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "DUP2",
      "path": "19"
    },
    "835": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "ADD",
      "path": "19"
    },
    "836": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "838": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "839": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "DUP1",
      "path": "19"
    },
    "840": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "841": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "842": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "843": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "DUP2",
      "path": "19"
    },
    "844": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "DUP2",
      "path": "19"
    },
    "845": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "846": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "848": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "ADD",
      "path": "19"
    },
    "849": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "DUP3",
      "path": "19"
    },
    "850": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "DUP1",
      "path": "19"
    },
    "851": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "852": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x35C"
    },
    "855": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "856": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA9E"
    },
    "859": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        658,
        684
      ],
      "op": "JUMP",
      "path": "19"
    },
    "860": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "861": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "DUP1",
      "path": "19"
    },
    "862": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "863": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3A9"
    },
    "866": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "867": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "DUP1",
      "path": "19"
    },
    "868": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "870": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "LT",
      "path": "19"
    },
    "871": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x37E"
    },
    "874": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "875": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x100"
    },
    "878": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "DUP1",
      "path": "19"
    },
    "879": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "DUP4",
      "path": "19"
    },
    "880": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "881": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "DIV",
      "path": "19"
    },
    "882": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "MUL",
      "path": "19"
    },
    "883": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "DUP4",
      "path": "19"
    },
    "884": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "885": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "886": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "888": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "ADD",
      "path": "19"
    },
    "889": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "890": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3A9"
    },
    "893": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "JUMP",
      "path": "19"
    },
    "894": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "895": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "DUP3",
      "path": "19"
    },
    "896": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "ADD",
      "path": "19"
    },
    "897": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "898": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "899": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "901": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "902": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "904": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "906": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "907": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "908": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "909": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "DUP2",
      "path": "19"
    },
    "910": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "911": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "DUP2",
      "path": "19"
    },
    "912": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "913": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "914": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "916": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "ADD",
      "path": "19"
    },
    "917": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "918": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "920": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "ADD",
      "path": "19"
    },
    "921": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "DUP1",
      "path": "19"
    },
    "922": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "DUP4",
      "path": "19"
    },
    "923": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "GT",
      "path": "19"
    },
    "924": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x38C"
    },
    "927": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "928": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "DUP3",
      "path": "19"
    },
    "929": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "930": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "SUB",
      "path": "19"
    },
    "931": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "933": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "AND",
      "path": "19"
    },
    "934": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "DUP3",
      "path": "19"
    },
    "935": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "ADD",
      "path": "19"
    },
    "936": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "937": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "938": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "POP",
      "path": "19"
    },
    "939": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "POP",
      "path": "19"
    },
    "940": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "POP",
      "path": "19"
    },
    "941": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "POP",
      "path": "19"
    },
    "942": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "POP",
      "path": "19"
    },
    "943": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        658,
        684
      ],
      "op": "DUP2",
      "path": "19"
    },
    "944": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        658,
        684
      ],
      "op": "JUMP",
      "path": "19"
    },
    "945": {
      "offset": [
        478,
        525
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "946": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        478,
        525
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "948": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        478,
        525
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "950": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        478,
        525
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "951": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        478,
        525
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "953": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        478,
        525
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "954": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        478,
        525
      ],
      "op": "DUP2",
      "path": "19"
    },
    "955": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        478,
        525
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "956": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        478,
        525
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "958": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        478,
        525
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "959": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        478,
        525
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "960": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        478,
        525
      ],
      "op": "DUP1",
      "path": "19"
    },
    "961": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        478,
        525
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "962": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        478,
        525
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x330"
    },
    "965": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        478,
        525
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "966": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        478,
        525
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA9E"
    },
    "969": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        478,
        525
      ],
      "op": "JUMP",
      "path": "19"
    },
    "970": {
      "fn": "ArmyRank.query",
      "offset": [
        1294,
        1870
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "971": {
      "fn": "ArmyRank.query",
      "offset": [
        1363,
        1376
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "973": {
      "fn": "ArmyRank.query",
      "offset": [
        1393,
        1399
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "975": {
      "fn": "ArmyRank.query",
      "offset": [
        1402,
        1422
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3DA"
    },
    "978": {
      "fn": "ArmyRank.query",
      "offset": [
        1421,
        1422
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "980": {
      "fn": "ArmyRank.query",
      "offset": [
        1402,
        1420
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "982": {
      "fn": "ArmyRank.query",
      "offset": [
        1402,
        1422
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA70"
    },
    "985": {
      "fn": "ArmyRank.query",
      "jump": "i",
      "offset": [
        1402,
        1422
      ],
      "op": "JUMP",
      "path": "19"
    },
    "986": {
      "fn": "ArmyRank.query",
      "offset": [
        1402,
        1422
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "987": {
      "fn": "ArmyRank.query",
      "offset": [
        1393,
        1422
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "988": {
      "fn": "ArmyRank.query",
      "offset": [
        1393,
        1422
      ],
      "op": "POP",
      "path": "19"
    },
    "989": {
      "fn": "ArmyRank.query",
      "offset": [
        1388,
        1864
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "990": {
      "fn": "ArmyRank.query",
      "offset": [
        1464,
        1475
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "992": {
      "fn": "ArmyRank.query",
      "offset": [
        1476,
        1477
      ],
      "op": "DUP2",
      "path": "19"
    },
    "993": {
      "fn": "ArmyRank.query",
      "offset": [
        1464,
        1478
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "995": {
      "fn": "ArmyRank.query",
      "offset": [
        1464,
        1478
      ],
      "op": "DUP2",
      "path": "19"
    },
    "996": {
      "fn": "ArmyRank.query",
      "offset": [
        1464,
        1478
      ],
      "op": "LT",
      "path": "19"
    },
    "997": {
      "fn": "ArmyRank.query",
      "offset": [
        1464,
        1478
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3FE"
    },
    "1000": {
      "fn": "ArmyRank.query",
      "offset": [
        1464,
        1478
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1001": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1006": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1008": {
      "op": "SHL"
    },
    "1009": {
      "fn": "ArmyRank.query",
      "offset": [
        1464,
        1478
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1011": {
      "fn": "ArmyRank.query",
      "offset": [
        1464,
        1478
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1012": {
      "fn": "ArmyRank.query",
      "offset": [
        1464,
        1478
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x32"
    },
    "1014": {
      "fn": "ArmyRank.query",
      "offset": [
        1464,
        1478
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1016": {
      "fn": "ArmyRank.query",
      "offset": [
        1464,
        1478
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1017": {
      "fn": "ArmyRank.query",
      "offset": [
        1464,
        1478
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "1019": {
      "fn": "ArmyRank.query",
      "offset": [
        1464,
        1478
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1021": {
      "fn": "ArmyRank.query",
      "offset": [
        1464,
        1478
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1022": {
      "fn": "ArmyRank.query",
      "offset": [
        1464,
        1478
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1023": {
      "fn": "ArmyRank.query",
      "offset": [
        1464,
        1478
      ],
      "op": "ADD",
      "path": "19"
    },
    "1024": {
      "fn": "ArmyRank.query",
      "offset": [
        1464,
        1478
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1025": {
      "fn": "ArmyRank.query",
      "offset": [
        1455,
        1460
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1026": {
      "branch": 15,
      "fn": "ArmyRank.query",
      "offset": [
        1455,
        1478
      ],
      "op": "SLT",
      "path": "19"
    },
    "1027": {
      "fn": "ArmyRank.query",
      "offset": [
        1451,
        1854
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x561"
    },
    "1030": {
      "branch": 15,
      "fn": "ArmyRank.query",
      "offset": [
        1451,
        1854
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1035": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1037": {
      "op": "SHL"
    },
    "1038": {
      "op": "SUB"
    },
    "1039": {
      "fn": "ArmyRank.query",
      "offset": [
        1521,
        1545
      ],
      "op": "DUP5",
      "path": "19"
    },
    "1040": {
      "fn": "ArmyRank.query",
      "offset": [
        1521,
        1545
      ],
      "op": "AND",
      "path": "19"
    },
    "1041": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1518
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1043": {
      "fn": "ArmyRank.query",
      "offset": [
        1521,
        1545
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1044": {
      "fn": "ArmyRank.query",
      "offset": [
        1521,
        1545
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1045": {
      "fn": "ArmyRank.query",
      "offset": [
        1521,
        1545
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1048": {
      "fn": "ArmyRank.query",
      "offset": [
        1521,
        1545
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1050": {
      "fn": "ArmyRank.query",
      "offset": [
        1521,
        1545
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1051": {
      "fn": "ArmyRank.query",
      "offset": [
        1521,
        1545
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1053": {
      "fn": "ArmyRank.query",
      "offset": [
        1521,
        1545
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1054": {
      "fn": "ArmyRank.query",
      "offset": [
        1521,
        1545
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1055": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1056": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1057": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x429"
    },
    "1060": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1061": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA9E"
    },
    "1064": {
      "fn": "ArmyRank.query",
      "jump": "i",
      "offset": [
        1498,
        1545
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1065": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1066": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1067": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "1069": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "ADD",
      "path": "19"
    },
    "1070": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1072": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1073": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1074": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "DIV",
      "path": "19"
    },
    "1075": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "MUL",
      "path": "19"
    },
    "1076": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1078": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "ADD",
      "path": "19"
    },
    "1079": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1081": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1082": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1083": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1084": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "ADD",
      "path": "19"
    },
    "1085": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1087": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1088": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1089": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1090": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1091": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1092": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1093": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1094": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1095": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1097": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "ADD",
      "path": "19"
    },
    "1098": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1099": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1100": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1101": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x455"
    },
    "1104": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1105": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA9E"
    },
    "1108": {
      "fn": "ArmyRank.query",
      "jump": "i",
      "offset": [
        1498,
        1545
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1109": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1110": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1111": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1112": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4A2"
    },
    "1115": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1116": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1117": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "1119": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "LT",
      "path": "19"
    },
    "1120": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x477"
    },
    "1123": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1124": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x100"
    },
    "1127": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1128": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1129": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1130": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "DIV",
      "path": "19"
    },
    "1131": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "MUL",
      "path": "19"
    },
    "1132": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1133": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1134": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1135": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1137": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "ADD",
      "path": "19"
    },
    "1138": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1139": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4A2"
    },
    "1142": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1143": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1144": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1145": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "ADD",
      "path": "19"
    },
    "1146": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1147": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1148": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1150": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1151": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1153": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1155": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1156": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1157": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1158": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1159": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1160": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1161": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1162": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1163": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "1165": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "ADD",
      "path": "19"
    },
    "1166": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1167": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1169": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "ADD",
      "path": "19"
    },
    "1170": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1171": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1172": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "GT",
      "path": "19"
    },
    "1173": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x485"
    },
    "1176": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1177": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1178": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1179": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "SUB",
      "path": "19"
    },
    "1180": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "1182": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "AND",
      "path": "19"
    },
    "1183": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1184": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "ADD",
      "path": "19"
    },
    "1185": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1186": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1187": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "POP",
      "path": "19"
    },
    "1188": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "POP",
      "path": "19"
    },
    "1189": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "POP",
      "path": "19"
    },
    "1190": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "POP",
      "path": "19"
    },
    "1191": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "POP",
      "path": "19"
    },
    "1192": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1193": {
      "fn": "ArmyRank.query",
      "offset": [
        1498,
        1545
      ],
      "op": "POP",
      "path": "19"
    },
    "1194": {
      "fn": "ArmyRank.query",
      "offset": [
        1573,
        1579
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1195": {
      "fn": "ArmyRank.query",
      "offset": [
        1567,
        1587
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1196": {
      "fn": "ArmyRank.query",
      "offset": [
        1591,
        1592
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1198": {
      "branch": 16,
      "fn": "ArmyRank.query",
      "offset": [
        1567,
        1592
      ],
      "op": "EQ",
      "path": "19"
    },
    "1199": {
      "fn": "ArmyRank.query",
      "offset": [
        1563,
        1840
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1200": {
      "fn": "ArmyRank.query",
      "offset": [
        1563,
        1840
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x528"
    },
    "1203": {
      "branch": 16,
      "fn": "ArmyRank.query",
      "offset": [
        1563,
        1840
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1204": {
      "fn": "ArmyRank.query",
      "offset": [
        1647,
        1671
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 7,
      "value": "0x0"
    },
    "1206": {
      "fn": "ArmyRank.query",
      "offset": [
        1647,
        1671
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1207": {
      "fn": "ArmyRank.query",
      "offset": [
        1647,
        1671
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1208": {
      "fn": "ArmyRank.query",
      "offset": [
        1647,
        1659
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "1210": {
      "fn": "ArmyRank.query",
      "offset": [
        1647,
        1671
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1212": {
      "fn": "ArmyRank.query",
      "offset": [
        1647,
        1671
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1213": {
      "fn": "ArmyRank.query",
      "offset": [
        1647,
        1671
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0xA6EEF7E35ABE7026729641147F7915573C7E97B47EFA546F5F6E3230263BCB49"
    },
    "1246": {
      "fn": "ArmyRank.query",
      "offset": [
        1673,
        1682
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x7"
    },
    "1248": {
      "fn": "ArmyRank.query",
      "offset": [
        1683,
        1684
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1249": {
      "fn": "ArmyRank.query",
      "offset": [
        1673,
        1685
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "1251": {
      "fn": "ArmyRank.query",
      "offset": [
        1673,
        1685
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1252": {
      "fn": "ArmyRank.query",
      "offset": [
        1673,
        1685
      ],
      "op": "LT",
      "path": "19"
    },
    "1253": {
      "fn": "ArmyRank.query",
      "offset": [
        1673,
        1685
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4FE"
    },
    "1256": {
      "fn": "ArmyRank.query",
      "offset": [
        1673,
        1685
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1257": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1262": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1264": {
      "op": "SHL"
    },
    "1265": {
      "fn": "ArmyRank.query",
      "offset": [
        1673,
        1685
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1267": {
      "fn": "ArmyRank.query",
      "offset": [
        1673,
        1685
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1268": {
      "fn": "ArmyRank.query",
      "offset": [
        1673,
        1685
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x32"
    },
    "1270": {
      "fn": "ArmyRank.query",
      "offset": [
        1673,
        1685
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1272": {
      "fn": "ArmyRank.query",
      "offset": [
        1673,
        1685
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1273": {
      "fn": "ArmyRank.query",
      "offset": [
        1673,
        1685
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "1275": {
      "fn": "ArmyRank.query",
      "offset": [
        1673,
        1685
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1277": {
      "fn": "ArmyRank.query",
      "offset": [
        1673,
        1685
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1278": {
      "fn": "ArmyRank.query",
      "offset": [
        1673,
        1685
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1279": {
      "fn": "ArmyRank.query",
      "offset": [
        1673,
        1685
      ],
      "op": "ADD",
      "path": "19"
    },
    "1280": {
      "fn": "ArmyRank.query",
      "offset": [
        1630,
        1686
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1282": {
      "fn": "ArmyRank.query",
      "offset": [
        1630,
        1686
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1283": {
      "fn": "ArmyRank.query",
      "offset": [
        1630,
        1686
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1285": {
      "fn": "ArmyRank.query",
      "offset": [
        1630,
        1686
      ],
      "op": "ADD",
      "path": "19"
    },
    "1286": {
      "fn": "ArmyRank.query",
      "offset": [
        1630,
        1686
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x510"
    },
    "1289": {
      "fn": "ArmyRank.query",
      "offset": [
        1630,
        1686
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1290": {
      "fn": "ArmyRank.query",
      "offset": [
        1630,
        1686
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1291": {
      "fn": "ArmyRank.query",
      "offset": [
        1630,
        1686
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1292": {
      "fn": "ArmyRank.query",
      "offset": [
        1630,
        1686
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x987"
    },
    "1295": {
      "fn": "ArmyRank.query",
      "jump": "i",
      "offset": [
        1630,
        1686
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1296": {
      "fn": "ArmyRank.query",
      "offset": [
        1630,
        1686
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1297": {
      "fn": "ArmyRank.query",
      "offset": [
        1630,
        1686
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1299": {
      "fn": "ArmyRank.query",
      "offset": [
        1630,
        1686
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1300": {
      "fn": "ArmyRank.query",
      "offset": [
        1630,
        1686
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1302": {
      "fn": "ArmyRank.query",
      "offset": [
        1630,
        1686
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1303": {
      "fn": "ArmyRank.query",
      "offset": [
        1630,
        1686
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1304": {
      "fn": "ArmyRank.query",
      "offset": [
        1630,
        1686
      ],
      "op": "SUB",
      "path": "19"
    },
    "1305": {
      "fn": "ArmyRank.query",
      "offset": [
        1630,
        1686
      ],
      "op": "SUB",
      "path": "19"
    },
    "1306": {
      "fn": "ArmyRank.query",
      "offset": [
        1630,
        1686
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1307": {
      "fn": "ArmyRank.query",
      "offset": [
        1630,
        1686
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1308": {
      "fn": "ArmyRank.query",
      "offset": [
        1630,
        1686
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1309": {
      "fn": "ArmyRank.query",
      "offset": [
        1630,
        1686
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1311": {
      "fn": "ArmyRank.query",
      "offset": [
        1630,
        1686
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1312": {
      "fn": "ArmyRank.query",
      "offset": [
        1616,
        1687
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1313": {
      "fn": "ArmyRank.query",
      "offset": [
        1616,
        1687
      ],
      "op": "POP",
      "path": "19"
    },
    "1314": {
      "fn": "ArmyRank.query",
      "offset": [
        1616,
        1687
      ],
      "op": "POP",
      "path": "19"
    },
    "1315": {
      "fn": "ArmyRank.query",
      "offset": [
        1616,
        1687
      ],
      "op": "POP",
      "path": "19"
    },
    "1316": {
      "fn": "ArmyRank.query",
      "offset": [
        1616,
        1687
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x573"
    },
    "1319": {
      "fn": "ArmyRank.query",
      "offset": [
        1616,
        1687
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1320": {
      "fn": "ArmyRank.query",
      "offset": [
        1563,
        1840
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1327": {
      "op": "SHL"
    },
    "1328": {
      "op": "SUB"
    },
    "1329": {
      "fn": "ArmyRank.query",
      "offset": [
        1781,
        1805
      ],
      "op": "DUP6",
      "path": "19",
      "statement": 8
    },
    "1330": {
      "fn": "ArmyRank.query",
      "offset": [
        1781,
        1805
      ],
      "op": "AND",
      "path": "19"
    },
    "1331": {
      "fn": "ArmyRank.query",
      "offset": [
        1781,
        1805
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1333": {
      "fn": "ArmyRank.query",
      "offset": [
        1781,
        1805
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1334": {
      "fn": "ArmyRank.query",
      "offset": [
        1781,
        1805
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1335": {
      "fn": "ArmyRank.query",
      "offset": [
        1781,
        1805
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1338": {
      "fn": "ArmyRank.query",
      "offset": [
        1781,
        1805
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1340": {
      "fn": "ArmyRank.query",
      "offset": [
        1781,
        1805
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1341": {
      "fn": "ArmyRank.query",
      "offset": [
        1781,
        1805
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1343": {
      "fn": "ArmyRank.query",
      "offset": [
        1781,
        1805
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1344": {
      "fn": "ArmyRank.query",
      "offset": [
        1781,
        1805
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1345": {
      "fn": "ArmyRank.query",
      "offset": [
        1807,
        1816
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x7"
    },
    "1347": {
      "fn": "ArmyRank.query",
      "offset": [
        1817,
        1818
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1348": {
      "fn": "ArmyRank.query",
      "offset": [
        1807,
        1819
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "1350": {
      "fn": "ArmyRank.query",
      "offset": [
        1807,
        1819
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1351": {
      "fn": "ArmyRank.query",
      "offset": [
        1807,
        1819
      ],
      "op": "LT",
      "path": "19"
    },
    "1352": {
      "fn": "ArmyRank.query",
      "offset": [
        1807,
        1819
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4FE"
    },
    "1355": {
      "fn": "ArmyRank.query",
      "offset": [
        1807,
        1819
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1356": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1361": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1363": {
      "op": "SHL"
    },
    "1364": {
      "fn": "ArmyRank.query",
      "offset": [
        1807,
        1819
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1366": {
      "fn": "ArmyRank.query",
      "offset": [
        1807,
        1819
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1367": {
      "fn": "ArmyRank.query",
      "offset": [
        1807,
        1819
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x32"
    },
    "1369": {
      "fn": "ArmyRank.query",
      "offset": [
        1807,
        1819
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1371": {
      "fn": "ArmyRank.query",
      "offset": [
        1807,
        1819
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1372": {
      "fn": "ArmyRank.query",
      "offset": [
        1807,
        1819
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "1374": {
      "fn": "ArmyRank.query",
      "offset": [
        1807,
        1819
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1376": {
      "fn": "ArmyRank.query",
      "offset": [
        1807,
        1819
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1377": {
      "fn": "ArmyRank.query",
      "offset": [
        1451,
        1854
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1378": {
      "fn": "ArmyRank.query",
      "offset": [
        1432,
        1435
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 9
    },
    "1379": {
      "fn": "ArmyRank.query",
      "offset": [
        1432,
        1435
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x56B"
    },
    "1382": {
      "fn": "ArmyRank.query",
      "offset": [
        1432,
        1435
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1383": {
      "fn": "ArmyRank.query",
      "offset": [
        1432,
        1435
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA87"
    },
    "1386": {
      "fn": "ArmyRank.query",
      "jump": "i",
      "offset": [
        1432,
        1435
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1387": {
      "fn": "ArmyRank.query",
      "offset": [
        1432,
        1435
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1388": {
      "fn": "ArmyRank.query",
      "offset": [
        1432,
        1435
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1389": {
      "fn": "ArmyRank.query",
      "offset": [
        1432,
        1435
      ],
      "op": "POP",
      "path": "19"
    },
    "1390": {
      "fn": "ArmyRank.query",
      "offset": [
        1432,
        1435
      ],
      "op": "POP",
      "path": "19"
    },
    "1391": {
      "fn": "ArmyRank.query",
      "offset": [
        1388,
        1864
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3DD"
    },
    "1394": {
      "fn": "ArmyRank.query",
      "offset": [
        1388,
        1864
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1395": {
      "fn": "ArmyRank.query",
      "offset": [
        1294,
        1870
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1396": {
      "fn": "ArmyRank.query",
      "offset": [
        1294,
        1870
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1397": {
      "fn": "ArmyRank.query",
      "offset": [
        1294,
        1870
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1398": {
      "fn": "ArmyRank.query",
      "offset": [
        1294,
        1870
      ],
      "op": "POP",
      "path": "19"
    },
    "1399": {
      "fn": "ArmyRank.query",
      "offset": [
        1294,
        1870
      ],
      "op": "POP",
      "path": "19"
    },
    "1400": {
      "fn": "ArmyRank.query",
      "jump": "o",
      "offset": [
        1294,
        1870
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1401": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2349,
        2527
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1402": {
      "fn": "Ownable.owner",
      "offset": [
        1114,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1404": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1411": {
      "op": "SHL"
    },
    "1412": {
      "op": "SUB"
    },
    "1413": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "1414": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1415": {
      "offset": [
        1280,
        1303
      ],
      "op": "EQ",
      "path": "0"
    },
    "1416": {
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A3"
    },
    "1419": {
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1420": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1422": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1423": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1427": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1429": {
      "op": "SHL"
    },
    "1430": {
      "offset": [
        1272,
        1340
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1431": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1432": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1434": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "ADD",
      "path": "0"
    },
    "1435": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AA"
    },
    "1438": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1439": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9EF"
    },
    "1442": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1443": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1444": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2440,
        2446
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1446": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2435,
        2521
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1447": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2456,
        2457
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "1449": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2452,
        2453
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1450": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2452,
        2457
      ],
      "op": "LT",
      "path": "19"
    },
    "1451": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2435,
        2521
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1452": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2435,
        2521
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x22F"
    },
    "1455": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2435,
        2521
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1456": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2495,
        2507
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 10
    },
    "1457": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2508,
        2509
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1458": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2495,
        2510
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "1460": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2495,
        2510
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1461": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2495,
        2510
      ],
      "op": "LT",
      "path": "19"
    },
    "1462": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2495,
        2510
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5CF"
    },
    "1465": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2495,
        2510
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1466": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1473": {
      "op": "SHL"
    },
    "1474": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2495,
        2510
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1476": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2495,
        2510
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1477": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2495,
        2510
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x32"
    },
    "1479": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2495,
        2510
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1481": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2495,
        2510
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1482": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2495,
        2510
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "1484": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2495,
        2510
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1486": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2495,
        2510
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1487": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2495,
        2510
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1488": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2495,
        2510
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1490": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2495,
        2510
      ],
      "op": "MUL",
      "path": "19"
    },
    "1491": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2495,
        2510
      ],
      "op": "ADD",
      "path": "19"
    },
    "1492": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2495,
        2510
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "1493": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2478,
        2489
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "1495": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2490,
        2491
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1496": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2478,
        2492
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x5"
    },
    "1498": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2478,
        2492
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1499": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2478,
        2492
      ],
      "op": "LT",
      "path": "19"
    },
    "1500": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2478,
        2492
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5F5"
    },
    "1503": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2478,
        2492
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1504": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1509": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1511": {
      "op": "SHL"
    },
    "1512": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2478,
        2492
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1514": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2478,
        2492
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1515": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2478,
        2492
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x32"
    },
    "1517": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2478,
        2492
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1519": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2478,
        2492
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1520": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2478,
        2492
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "1522": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2478,
        2492
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1524": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2478,
        2492
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1525": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2478,
        2492
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1526": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2478,
        2492
      ],
      "op": "ADD",
      "path": "19"
    },
    "1527": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2478,
        2510
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "1528": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2459,
        2462
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 11
    },
    "1529": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2459,
        2462
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x601"
    },
    "1532": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2459,
        2462
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1533": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2459,
        2462
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xAD9"
    },
    "1536": {
      "fn": "ArmyRank.changePowerLevels",
      "jump": "i",
      "offset": [
        2459,
        2462
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1537": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2459,
        2462
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1538": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2459,
        2462
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1539": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2459,
        2462
      ],
      "op": "POP",
      "path": "19"
    },
    "1540": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2459,
        2462
      ],
      "op": "POP",
      "path": "19"
    },
    "1541": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2435,
        2521
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5A6"
    },
    "1544": {
      "fn": "ArmyRank.changePowerLevels",
      "offset": [
        2435,
        2521
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1545": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1546": {
      "fn": "Ownable.owner",
      "offset": [
        1114,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1548": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1555": {
      "op": "SHL"
    },
    "1556": {
      "op": "SUB"
    },
    "1557": {
      "fn": "Ownable.owner",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "1558": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1559": {
      "offset": [
        1280,
        1303
      ],
      "op": "EQ",
      "path": "0"
    },
    "1560": {
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x633"
    },
    "1563": {
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1564": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1566": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1567": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1571": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1573": {
      "op": "SHL"
    },
    "1574": {
      "offset": [
        1272,
        1340
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1575": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1576": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1578": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "ADD",
      "path": "0"
    },
    "1579": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AA"
    },
    "1582": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1583": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9EF"
    },
    "1586": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1587": {
      "fn": "Context._msgSender",
      "offset": [
        1272,
        1340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1594": {
      "op": "SHL"
    },
    "1595": {
      "op": "SUB"
    },
    "1596": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2082,
        2104
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 12
    },
    "1597": {
      "branch": 17,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2082,
        2104
      ],
      "op": "AND",
      "path": "0"
    },
    "1598": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x698"
    },
    "1601": {
      "branch": 17,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1602": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1604": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1605": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1609": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1611": {
      "op": "SHL"
    },
    "1612": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1613": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1614": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1616": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1618": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1619": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "ADD",
      "path": "0"
    },
    "1620": {
      "op": "MSTORE"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1623": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1625": {
      "op": "DUP3"
    },
    "1626": {
      "op": "ADD"
    },
    "1627": {
      "op": "MSTORE"
    },
    "1628": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "1661": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1663": {
      "op": "DUP3"
    },
    "1664": {
      "op": "ADD"
    },
    "1665": {
      "op": "MSTORE"
    },
    "1666": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "1673": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1675": {
      "op": "SHL"
    },
    "1676": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1678": {
      "op": "DUP3"
    },
    "1679": {
      "op": "ADD"
    },
    "1680": {
      "op": "MSTORE"
    },
    "1681": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1683": {
      "op": "ADD"
    },
    "1684": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AA"
    },
    "1687": {
      "op": "JUMP"
    },
    "1688": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2074,
        2147
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1689": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2183,
        2189
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0x0"
    },
    "1691": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2183,
        2189
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1692": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2183,
        2189
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1693": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1695": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1700": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1702": {
      "op": "SHL"
    },
    "1703": {
      "op": "SUB"
    },
    "1704": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1705": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1706": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "AND",
      "path": "0"
    },
    "1707": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1708": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2183,
        2189
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1709": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2183,
        2189
      ],
      "op": "AND",
      "path": "0"
    },
    "1710": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2183,
        2189
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1711": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1744": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1745": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2162,
        2200
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1746": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2216
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0x0"
    },
    "1748": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1749": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1754": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1756": {
      "op": "SHL"
    },
    "1757": {
      "op": "SUB"
    },
    "1758": {
      "op": "NOT"
    },
    "1759": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "AND",
      "path": "0"
    },
    "1760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1764": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1766": {
      "op": "SHL"
    },
    "1767": {
      "op": "SUB"
    },
    "1768": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1769": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1770": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1771": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "AND",
      "path": "0"
    },
    "1772": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1773": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1774": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1775": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "OR",
      "path": "0"
    },
    "1776": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1777": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2210,
        2227
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1778": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1994,
        2234
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1779": {
      "op": "JUMPDEST"
    },
    "1780": {
      "op": "DUP3"
    },
    "1781": {
      "op": "DUP1"
    },
    "1782": {
      "op": "SLOAD"
    },
    "1783": {
      "op": "PUSH2",
      "value": "0x6FF"
    },
    "1786": {
      "op": "SWAP1"
    },
    "1787": {
      "op": "PUSH2",
      "value": "0xA9E"
    },
    "1790": {
      "jump": "i",
      "op": "JUMP"
    },
    "1791": {
      "op": "JUMPDEST"
    },
    "1792": {
      "op": "SWAP1"
    },
    "1793": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1795": {
      "op": "MSTORE"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1798": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1800": {
      "op": "KECCAK256"
    },
    "1801": {
      "op": "SWAP1"
    },
    "1802": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1804": {
      "op": "ADD"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1807": {
      "op": "SWAP1"
    },
    "1808": {
      "op": "DIV"
    },
    "1809": {
      "op": "DUP2"
    },
    "1810": {
      "op": "ADD"
    },
    "1811": {
      "op": "SWAP3"
    },
    "1812": {
      "op": "DUP3"
    },
    "1813": {
      "op": "PUSH2",
      "value": "0x721"
    },
    "1816": {
      "op": "JUMPI"
    },
    "1817": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1819": {
      "op": "DUP6"
    },
    "1820": {
      "op": "SSTORE"
    },
    "1821": {
      "op": "PUSH2",
      "value": "0x767"
    },
    "1824": {
      "op": "JUMP"
    },
    "1825": {
      "op": "JUMPDEST"
    },
    "1826": {
      "op": "DUP3"
    },
    "1827": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1829": {
      "op": "LT"
    },
    "1830": {
      "op": "PUSH2",
      "value": "0x73A"
    },
    "1833": {
      "op": "JUMPI"
    },
    "1834": {
      "op": "DUP3"
    },
    "1835": {
      "op": "DUP1"
    },
    "1836": {
      "op": "ADD"
    },
    "1837": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1839": {
      "op": "NOT"
    },
    "1840": {
      "op": "DUP3"
    },
    "1841": {
      "op": "CALLDATALOAD"
    },
    "1842": {
      "op": "AND"
    },
    "1843": {
      "op": "OR"
    },
    "1844": {
      "op": "DUP6"
    },
    "1845": {
      "op": "SSTORE"
    },
    "1846": {
      "op": "PUSH2",
      "value": "0x767"
    },
    "1849": {
      "op": "JUMP"
    },
    "1850": {
      "op": "JUMPDEST"
    },
    "1851": {
      "op": "DUP3"
    },
    "1852": {
      "op": "DUP1"
    },
    "1853": {
      "op": "ADD"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1856": {
      "op": "ADD"
    },
    "1857": {
      "op": "DUP6"
    },
    "1858": {
      "op": "SSTORE"
    },
    "1859": {
      "op": "DUP3"
    },
    "1860": {
      "op": "ISZERO"
    },
    "1861": {
      "op": "PUSH2",
      "value": "0x767"
    },
    "1864": {
      "op": "JUMPI"
    },
    "1865": {
      "op": "SWAP2"
    },
    "1866": {
      "op": "DUP3"
    },
    "1867": {
      "op": "ADD"
    },
    "1868": {
      "op": "JUMPDEST"
    },
    "1869": {
      "op": "DUP3"
    },
    "1870": {
      "op": "DUP2"
    },
    "1871": {
      "op": "GT"
    },
    "1872": {
      "op": "ISZERO"
    },
    "1873": {
      "op": "PUSH2",
      "value": "0x767"
    },
    "1876": {
      "op": "JUMPI"
    },
    "1877": {
      "op": "DUP3"
    },
    "1878": {
      "op": "CALLDATALOAD"
    },
    "1879": {
      "op": "DUP3"
    },
    "1880": {
      "op": "SSTORE"
    },
    "1881": {
      "op": "SWAP2"
    },
    "1882": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1884": {
      "op": "ADD"
    },
    "1885": {
      "op": "SWAP2"
    },
    "1886": {
      "op": "SWAP1"
    },
    "1887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1889": {
      "op": "ADD"
    },
    "1890": {
      "op": "SWAP1"
    },
    "1891": {
      "op": "PUSH2",
      "value": "0x74C"
    },
    "1894": {
      "op": "JUMP"
    },
    "1895": {
      "op": "JUMPDEST"
    },
    "1896": {
      "op": "POP"
    },
    "1897": {
      "op": "PUSH2",
      "value": "0x773"
    },
    "1900": {
      "op": "SWAP3"
    },
    "1901": {
      "op": "SWAP2"
    },
    "1902": {
      "op": "POP"
    },
    "1903": {
      "op": "PUSH2",
      "value": "0x777"
    },
    "1906": {
      "jump": "i",
      "op": "JUMP"
    },
    "1907": {
      "op": "JUMPDEST"
    },
    "1908": {
      "op": "POP"
    },
    "1909": {
      "op": "SWAP1"
    },
    "1910": {
      "jump": "o",
      "op": "JUMP"
    },
    "1911": {
      "op": "JUMPDEST"
    },
    "1912": {
      "op": "JUMPDEST"
    },
    "1913": {
      "op": "DUP1"
    },
    "1914": {
      "op": "DUP3"
    },
    "1915": {
      "op": "GT"
    },
    "1916": {
      "op": "ISZERO"
    },
    "1917": {
      "op": "PUSH2",
      "value": "0x773"
    },
    "1920": {
      "op": "JUMPI"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1923": {
      "op": "DUP2"
    },
    "1924": {
      "op": "SSTORE"
    },
    "1925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1927": {
      "op": "ADD"
    },
    "1928": {
      "op": "PUSH2",
      "value": "0x778"
    },
    "1931": {
      "op": "JUMP"
    },
    "1932": {
      "op": "JUMPDEST"
    },
    "1933": {
      "op": "DUP1"
    },
    "1934": {
      "op": "CALLDATALOAD"
    },
    "1935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1939": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1941": {
      "op": "SHL"
    },
    "1942": {
      "op": "SUB"
    },
    "1943": {
      "op": "DUP2"
    },
    "1944": {
      "op": "AND"
    },
    "1945": {
      "op": "DUP2"
    },
    "1946": {
      "op": "EQ"
    },
    "1947": {
      "op": "PUSH2",
      "value": "0x7A3"
    },
    "1950": {
      "op": "JUMPI"
    },
    "1951": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1953": {
      "op": "DUP1"
    },
    "1954": {
      "op": "REVERT"
    },
    "1955": {
      "op": "JUMPDEST"
    },
    "1956": {
      "op": "SWAP2"
    },
    "1957": {
      "op": "SWAP1"
    },
    "1958": {
      "op": "POP"
    },
    "1959": {
      "jump": "o",
      "op": "JUMP"
    },
    "1960": {
      "op": "JUMPDEST"
    },
    "1961": {
      "op": "DUP1"
    },
    "1962": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1964": {
      "op": "DUP2"
    },
    "1965": {
      "op": "ADD"
    },
    "1966": {
      "op": "DUP4"
    },
    "1967": {
      "op": "LT"
    },
    "1968": {
      "op": "ISZERO"
    },
    "1969": {
      "op": "PUSH2",
      "value": "0x573"
    },
    "1972": {
      "op": "JUMPI"
    },
    "1973": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1975": {
      "op": "DUP1"
    },
    "1976": {
      "op": "REVERT"
    },
    "1977": {
      "op": "JUMPDEST"
    },
    "1978": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1980": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1982": {
      "op": "DUP3"
    },
    "1983": {
      "op": "DUP5"
    },
    "1984": {
      "op": "SUB"
    },
    "1985": {
      "op": "SLT"
    },
    "1986": {
      "op": "ISZERO"
    },
    "1987": {
      "op": "PUSH2",
      "value": "0x7CA"
    },
    "1990": {
      "op": "JUMPI"
    },
    "1991": {
      "op": "DUP1"
    },
    "1992": {
      "op": "DUP2"
    },
    "1993": {
      "op": "REVERT"
    },
    "1994": {
      "op": "JUMPDEST"
    },
    "1995": {
      "op": "PUSH2",
      "value": "0x7D3"
    },
    "1998": {
      "op": "DUP3"
    },
    "1999": {
      "op": "PUSH2",
      "value": "0x78C"
    },
    "2002": {
      "jump": "i",
      "op": "JUMP"
    },
    "2003": {
      "op": "JUMPDEST"
    },
    "2004": {
      "op": "SWAP4"
    },
    "2005": {
      "op": "SWAP3"
    },
    "2006": {
      "op": "POP"
    },
    "2007": {
      "op": "POP"
    },
    "2008": {
      "op": "POP"
    },
    "2009": {
      "jump": "o",
      "op": "JUMP"
    },
    "2010": {
      "op": "JUMPDEST"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2013": {
      "op": "DUP1"
    },
    "2014": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2016": {
      "op": "DUP4"
    },
    "2017": {
      "op": "DUP6"
    },
    "2018": {
      "op": "SUB"
    },
    "2019": {
      "op": "SLT"
    },
    "2020": {
      "op": "ISZERO"
    },
    "2021": {
      "op": "PUSH2",
      "value": "0x7EC"
    },
    "2024": {
      "op": "JUMPI"
    },
    "2025": {
      "op": "DUP1"
    },
    "2026": {
      "op": "DUP2"
    },
    "2027": {
      "op": "REVERT"
    },
    "2028": {
      "op": "JUMPDEST"
    },
    "2029": {
      "op": "PUSH2",
      "value": "0x7F5"
    },
    "2032": {
      "op": "DUP4"
    },
    "2033": {
      "op": "PUSH2",
      "value": "0x78C"
    },
    "2036": {
      "jump": "i",
      "op": "JUMP"
    },
    "2037": {
      "op": "JUMPDEST"
    },
    "2038": {
      "op": "SWAP5"
    },
    "2039": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2041": {
      "op": "SWAP4"
    },
    "2042": {
      "op": "SWAP1"
    },
    "2043": {
      "op": "SWAP4"
    },
    "2044": {
      "op": "ADD"
    },
    "2045": {
      "op": "CALLDATALOAD"
    },
    "2046": {
      "op": "SWAP4"
    },
    "2047": {
      "op": "POP"
    },
    "2048": {
      "op": "POP"
    },
    "2049": {
      "op": "POP"
    },
    "2050": {
      "jump": "o",
      "op": "JUMP"
    },
    "2051": {
      "op": "JUMPDEST"
    },
    "2052": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2054": {
      "op": "DUP1"
    },
    "2055": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2057": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2059": {
      "op": "DUP5"
    },
    "2060": {
      "op": "DUP7"
    },
    "2061": {
      "op": "SUB"
    },
    "2062": {
      "op": "SLT"
    },
    "2063": {
      "op": "ISZERO"
    },
    "2064": {
      "op": "PUSH2",
      "value": "0x817"
    },
    "2067": {
      "op": "JUMPI"
    },
    "2068": {
      "op": "DUP1"
    },
    "2069": {
      "op": "DUP2"
    },
    "2070": {
      "op": "REVERT"
    },
    "2071": {
      "op": "JUMPDEST"
    },
    "2072": {
      "op": "PUSH2",
      "value": "0x820"
    },
    "2075": {
      "op": "DUP5"
    },
    "2076": {
      "op": "PUSH2",
      "value": "0x78C"
    },
    "2079": {
      "jump": "i",
      "op": "JUMP"
    },
    "2080": {
      "op": "JUMPDEST"
    },
    "2081": {
      "op": "SWAP3"
    },
    "2082": {
      "op": "POP"
    },
    "2083": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2085": {
      "op": "DUP5"
    },
    "2086": {
      "op": "ADD"
    },
    "2087": {
      "op": "CALLDATALOAD"
    },
    "2088": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2097": {
      "op": "DUP1"
    },
    "2098": {
      "op": "DUP3"
    },
    "2099": {
      "op": "GT"
    },
    "2100": {
      "op": "ISZERO"
    },
    "2101": {
      "op": "PUSH2",
      "value": "0x83C"
    },
    "2104": {
      "op": "JUMPI"
    },
    "2105": {
      "op": "DUP3"
    },
    "2106": {
      "op": "DUP4"
    },
    "2107": {
      "op": "REVERT"
    },
    "2108": {
      "op": "JUMPDEST"
    },
    "2109": {
      "op": "DUP2"
    },
    "2110": {
      "op": "DUP7"
    },
    "2111": {
      "op": "ADD"
    },
    "2112": {
      "op": "SWAP2"
    },
    "2113": {
      "op": "POP"
    },
    "2114": {
      "op": "DUP7"
    },
    "2115": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2117": {
      "op": "DUP4"
    },
    "2118": {
      "op": "ADD"
    },
    "2119": {
      "op": "SLT"
    },
    "2120": {
      "op": "PUSH2",
      "value": "0x84F"
    },
    "2123": {
      "op": "JUMPI"
    },
    "2124": {
      "op": "DUP3"
    },
    "2125": {
      "op": "DUP4"
    },
    "2126": {
      "op": "REVERT"
    },
    "2127": {
      "op": "JUMPDEST"
    },
    "2128": {
      "op": "DUP2"
    },
    "2129": {
      "op": "CALLDATALOAD"
    },
    "2130": {
      "op": "DUP2"
    },
    "2131": {
      "op": "DUP2"
    },
    "2132": {
      "op": "GT"
    },
    "2133": {
      "op": "ISZERO"
    },
    "2134": {
      "op": "PUSH2",
      "value": "0x85D"
    },
    "2137": {
      "op": "JUMPI"
    },
    "2138": {
      "op": "DUP4"
    },
    "2139": {
      "op": "DUP5"
    },
    "2140": {
      "op": "REVERT"
    },
    "2141": {
      "op": "JUMPDEST"
    },
    "2142": {
      "op": "DUP8"
    },
    "2143": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2145": {
      "op": "DUP3"
    },
    "2146": {
      "op": "DUP6"
    },
    "2147": {
      "op": "ADD"
    },
    "2148": {
      "op": "ADD"
    },
    "2149": {
      "op": "GT"
    },
    "2150": {
      "op": "ISZERO"
    },
    "2151": {
      "op": "PUSH2",
      "value": "0x86E"
    },
    "2154": {
      "op": "JUMPI"
    },
    "2155": {
      "op": "DUP4"
    },
    "2156": {
      "op": "DUP5"
    },
    "2157": {
      "op": "REVERT"
    },
    "2158": {
      "op": "JUMPDEST"
    },
    "2159": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2161": {
      "op": "DUP4"
    },
    "2162": {
      "op": "ADD"
    },
    "2163": {
      "op": "SWAP5"
    },
    "2164": {
      "op": "POP"
    },
    "2165": {
      "op": "DUP1"
    },
    "2166": {
      "op": "SWAP4"
    },
    "2167": {
      "op": "POP"
    },
    "2168": {
      "op": "POP"
    },
    "2169": {
      "op": "POP"
    },
    "2170": {
      "op": "POP"
    },
    "2171": {
      "op": "SWAP3"
    },
    "2172": {
      "op": "POP"
    },
    "2173": {
      "op": "SWAP3"
    },
    "2174": {
      "op": "POP"
    },
    "2175": {
      "op": "SWAP3"
    },
    "2176": {
      "jump": "o",
      "op": "JUMP"
    },
    "2177": {
      "op": "JUMPDEST"
    },
    "2178": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2180": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2182": {
      "op": "DUP3"
    },
    "2183": {
      "op": "DUP5"
    },
    "2184": {
      "op": "SUB"
    },
    "2185": {
      "op": "SLT"
    },
    "2186": {
      "op": "ISZERO"
    },
    "2187": {
      "op": "PUSH2",
      "value": "0x892"
    },
    "2190": {
      "op": "JUMPI"
    },
    "2191": {
      "op": "DUP1"
    },
    "2192": {
      "op": "DUP2"
    },
    "2193": {
      "op": "REVERT"
    },
    "2194": {
      "op": "JUMPDEST"
    },
    "2195": {
      "op": "PUSH2",
      "value": "0x7D3"
    },
    "2198": {
      "op": "DUP4"
    },
    "2199": {
      "op": "DUP4"
    },
    "2200": {
      "op": "PUSH2",
      "value": "0x7A8"
    },
    "2203": {
      "jump": "i",
      "op": "JUMP"
    },
    "2204": {
      "op": "JUMPDEST"
    },
    "2205": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2207": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2209": {
      "op": "DUP3"
    },
    "2210": {
      "op": "DUP5"
    },
    "2211": {
      "op": "SUB"
    },
    "2212": {
      "op": "SLT"
    },
    "2213": {
      "op": "ISZERO"
    },
    "2214": {
      "op": "PUSH2",
      "value": "0x8AD"
    },
    "2217": {
      "op": "JUMPI"
    },
    "2218": {
      "op": "DUP1"
    },
    "2219": {
      "op": "DUP2"
    },
    "2220": {
      "op": "REVERT"
    },
    "2221": {
      "op": "JUMPDEST"
    },
    "2222": {
      "op": "DUP2"
    },
    "2223": {
      "op": "CALLDATALOAD"
    },
    "2224": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2233": {
      "op": "DUP2"
    },
    "2234": {
      "op": "GT"
    },
    "2235": {
      "op": "ISZERO"
    },
    "2236": {
      "op": "PUSH2",
      "value": "0x8C3"
    },
    "2239": {
      "op": "JUMPI"
    },
    "2240": {
      "op": "DUP2"
    },
    "2241": {
      "op": "DUP3"
    },
    "2242": {
      "op": "REVERT"
    },
    "2243": {
      "op": "JUMPDEST"
    },
    "2244": {
      "op": "PUSH2",
      "value": "0x8CF"
    },
    "2247": {
      "op": "DUP5"
    },
    "2248": {
      "op": "DUP3"
    },
    "2249": {
      "op": "DUP6"
    },
    "2250": {
      "op": "ADD"
    },
    "2251": {
      "op": "PUSH2",
      "value": "0x7A8"
    },
    "2254": {
      "jump": "i",
      "op": "JUMP"
    },
    "2255": {
      "op": "JUMPDEST"
    },
    "2256": {
      "op": "SWAP5"
    },
    "2257": {
      "op": "SWAP4"
    },
    "2258": {
      "op": "POP"
    },
    "2259": {
      "op": "POP"
    },
    "2260": {
      "op": "POP"
    },
    "2261": {
      "op": "POP"
    },
    "2262": {
      "jump": "o",
      "op": "JUMP"
    },
    "2263": {
      "op": "JUMPDEST"
    },
    "2264": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2266": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2268": {
      "op": "DUP3"
    },
    "2269": {
      "op": "DUP5"
    },
    "2270": {
      "op": "SUB"
    },
    "2271": {
      "op": "SLT"
    },
    "2272": {
      "op": "ISZERO"
    },
    "2273": {
      "op": "PUSH2",
      "value": "0x8E8"
    },
    "2276": {
      "op": "JUMPI"
    },
    "2277": {
      "op": "DUP1"
    },
    "2278": {
      "op": "DUP2"
    },
    "2279": {
      "op": "REVERT"
    },
    "2280": {
      "op": "JUMPDEST"
    },
    "2281": {
      "op": "POP"
    },
    "2282": {
      "op": "CALLDATALOAD"
    },
    "2283": {
      "op": "SWAP2"
    },
    "2284": {
      "op": "SWAP1"
    },
    "2285": {
      "op": "POP"
    },
    "2286": {
      "jump": "o",
      "op": "JUMP"
    },
    "2287": {
      "op": "JUMPDEST"
    },
    "2288": {
      "op": "DUP1"
    },
    "2289": {
      "op": "SLOAD"
    },
    "2290": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2292": {
      "op": "SWAP1"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2295": {
      "op": "DUP2"
    },
    "2296": {
      "op": "DUP2"
    },
    "2297": {
      "op": "SHR"
    },
    "2298": {
      "op": "SWAP1"
    },
    "2299": {
      "op": "DUP1"
    },
    "2300": {
      "op": "DUP4"
    },
    "2301": {
      "op": "AND"
    },
    "2302": {
      "op": "DUP1"
    },
    "2303": {
      "op": "PUSH2",
      "value": "0x909"
    },
    "2306": {
      "op": "JUMPI"
    },
    "2307": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2309": {
      "op": "DUP4"
    },
    "2310": {
      "op": "AND"
    },
    "2311": {
      "op": "SWAP3"
    },
    "2312": {
      "op": "POP"
    },
    "2313": {
      "op": "JUMPDEST"
    },
    "2314": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2316": {
      "op": "DUP1"
    },
    "2317": {
      "op": "DUP5"
    },
    "2318": {
      "op": "LT"
    },
    "2319": {
      "op": "DUP3"
    },
    "2320": {
      "op": "EQ"
    },
    "2321": {
      "op": "ISZERO"
    },
    "2322": {
      "op": "PUSH2",
      "value": "0x929"
    },
    "2325": {
      "op": "JUMPI"
    },
    "2326": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2333": {
      "op": "SHL"
    },
    "2334": {
      "op": "DUP7"
    },
    "2335": {
      "op": "MSTORE"
    },
    "2336": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2338": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2340": {
      "op": "MSTORE"
    },
    "2341": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2343": {
      "op": "DUP7"
    },
    "2344": {
      "op": "REVERT"
    },
    "2345": {
      "op": "JUMPDEST"
    },
    "2346": {
      "op": "DUP2"
    },
    "2347": {
      "op": "DUP1"
    },
    "2348": {
      "op": "ISZERO"
    },
    "2349": {
      "op": "PUSH2",
      "value": "0x93D"
    },
    "2352": {
      "op": "JUMPI"
    },
    "2353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2355": {
      "op": "DUP2"
    },
    "2356": {
      "op": "EQ"
    },
    "2357": {
      "op": "PUSH2",
      "value": "0x94E"
    },
    "2360": {
      "op": "JUMPI"
    },
    "2361": {
      "op": "PUSH2",
      "value": "0x97B"
    },
    "2364": {
      "op": "JUMP"
    },
    "2365": {
      "op": "JUMPDEST"
    },
    "2366": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2368": {
      "op": "NOT"
    },
    "2369": {
      "op": "DUP7"
    },
    "2370": {
      "op": "AND"
    },
    "2371": {
      "op": "DUP10"
    },
    "2372": {
      "op": "MSTORE"
    },
    "2373": {
      "op": "DUP5"
    },
    "2374": {
      "op": "DUP10"
    },
    "2375": {
      "op": "ADD"
    },
    "2376": {
      "op": "SWAP7"
    },
    "2377": {
      "op": "POP"
    },
    "2378": {
      "op": "PUSH2",
      "value": "0x97B"
    },
    "2381": {
      "op": "JUMP"
    },
    "2382": {
      "op": "JUMPDEST"
    },
    "2383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2385": {
      "op": "DUP9"
    },
    "2386": {
      "op": "DUP2"
    },
    "2387": {
      "op": "MSTORE"
    },
    "2388": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2390": {
      "op": "SWAP1"
    },
    "2391": {
      "op": "KECCAK256"
    },
    "2392": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2394": {
      "op": "JUMPDEST"
    },
    "2395": {
      "op": "DUP7"
    },
    "2396": {
      "op": "DUP2"
    },
    "2397": {
      "op": "LT"
    },
    "2398": {
      "op": "ISZERO"
    },
    "2399": {
      "op": "PUSH2",
      "value": "0x973"
    },
    "2402": {
      "op": "JUMPI"
    },
    "2403": {
      "op": "DUP2"
    },
    "2404": {
      "op": "SLOAD"
    },
    "2405": {
      "op": "DUP12"
    },
    "2406": {
      "op": "DUP3"
    },
    "2407": {
      "op": "ADD"
    },
    "2408": {
      "op": "MSTORE"
    },
    "2409": {
      "op": "SWAP1"
    },
    "2410": {
      "op": "DUP6"
    },
    "2411": {
      "op": "ADD"
    },
    "2412": {
      "op": "SWAP1"
    },
    "2413": {
      "op": "DUP4"
    },
    "2414": {
      "op": "ADD"
    },
    "2415": {
      "op": "PUSH2",
      "value": "0x95A"
    },
    "2418": {
      "op": "JUMP"
    },
    "2419": {
      "op": "JUMPDEST"
    },
    "2420": {
      "op": "POP"
    },
    "2421": {
      "op": "POP"
    },
    "2422": {
      "op": "DUP5"
    },
    "2423": {
      "op": "DUP10"
    },
    "2424": {
      "op": "ADD"
    },
    "2425": {
      "op": "SWAP7"
    },
    "2426": {
      "op": "POP"
    },
    "2427": {
      "op": "JUMPDEST"
    },
    "2428": {
      "op": "POP"
    },
    "2429": {
      "op": "POP"
    },
    "2430": {
      "op": "POP"
    },
    "2431": {
      "op": "POP"
    },
    "2432": {
      "op": "POP"
    },
    "2433": {
      "op": "POP"
    },
    "2434": {
      "op": "SWAP3"
    },
    "2435": {
      "op": "SWAP2"
    },
    "2436": {
      "op": "POP"
    },
    "2437": {
      "op": "POP"
    },
    "2438": {
      "jump": "o",
      "op": "JUMP"
    },
    "2439": {
      "op": "JUMPDEST"
    },
    "2440": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2442": {
      "op": "PUSH2",
      "value": "0x8CF"
    },
    "2445": {
      "op": "PUSH2",
      "value": "0x996"
    },
    "2448": {
      "op": "DUP4"
    },
    "2449": {
      "op": "DUP7"
    },
    "2450": {
      "op": "PUSH2",
      "value": "0x8EF"
    },
    "2453": {
      "jump": "i",
      "op": "JUMP"
    },
    "2454": {
      "op": "JUMPDEST"
    },
    "2455": {
      "op": "DUP5"
    },
    "2456": {
      "op": "PUSH2",
      "value": "0x8EF"
    },
    "2459": {
      "jump": "i",
      "op": "JUMP"
    },
    "2460": {
      "op": "JUMPDEST"
    },
    "2461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2463": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2465": {
      "op": "DUP1"
    },
    "2466": {
      "op": "DUP4"
    },
    "2467": {
      "op": "MSTORE"
    },
    "2468": {
      "op": "DUP4"
    },
    "2469": {
      "op": "MLOAD"
    },
    "2470": {
      "op": "DUP1"
    },
    "2471": {
      "op": "DUP3"
    },
    "2472": {
      "op": "DUP6"
    },
    "2473": {
      "op": "ADD"
    },
    "2474": {
      "op": "MSTORE"
    },
    "2475": {
      "op": "DUP3"
    },
    "2476": {
      "op": "JUMPDEST"
    },
    "2477": {
      "op": "DUP2"
    },
    "2478": {
      "op": "DUP2"
    },
    "2479": {
      "op": "LT"
    },
    "2480": {
      "op": "ISZERO"
    },
    "2481": {
      "op": "PUSH2",
      "value": "0x9C8"
    },
    "2484": {
      "op": "JUMPI"
    },
    "2485": {
      "op": "DUP6"
    },
    "2486": {
      "op": "DUP2"
    },
    "2487": {
      "op": "ADD"
    },
    "2488": {
      "op": "DUP4"
    },
    "2489": {
      "op": "ADD"
    },
    "2490": {
      "op": "MLOAD"
    },
    "2491": {
      "op": "DUP6"
    },
    "2492": {
      "op": "DUP3"
    },
    "2493": {
      "op": "ADD"
    },
    "2494": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2496": {
      "op": "ADD"
    },
    "2497": {
      "op": "MSTORE"
    },
    "2498": {
      "op": "DUP3"
    },
    "2499": {
      "op": "ADD"
    },
    "2500": {
      "op": "PUSH2",
      "value": "0x9AC"
    },
    "2503": {
      "op": "JUMP"
    },
    "2504": {
      "op": "JUMPDEST"
    },
    "2505": {
      "op": "DUP2"
    },
    "2506": {
      "op": "DUP2"
    },
    "2507": {
      "op": "GT"
    },
    "2508": {
      "op": "ISZERO"
    },
    "2509": {
      "op": "PUSH2",
      "value": "0x9D9"
    },
    "2512": {
      "op": "JUMPI"
    },
    "2513": {
      "op": "DUP4"
    },
    "2514": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2516": {
      "op": "DUP4"
    },
    "2517": {
      "op": "DUP8"
    },
    "2518": {
      "op": "ADD"
    },
    "2519": {
      "op": "ADD"
    },
    "2520": {
      "op": "MSTORE"
    },
    "2521": {
      "op": "JUMPDEST"
    },
    "2522": {
      "op": "POP"
    },
    "2523": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2525": {
      "op": "ADD"
    },
    "2526": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2528": {
      "op": "NOT"
    },
    "2529": {
      "op": "AND"
    },
    "2530": {
      "op": "SWAP3"
    },
    "2531": {
      "op": "SWAP1"
    },
    "2532": {
      "op": "SWAP3"
    },
    "2533": {
      "op": "ADD"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2536": {
      "op": "ADD"
    },
    "2537": {
      "op": "SWAP4"
    },
    "2538": {
      "op": "SWAP3"
    },
    "2539": {
      "op": "POP"
    },
    "2540": {
      "op": "POP"
    },
    "2541": {
      "op": "POP"
    },
    "2542": {
      "jump": "o",
      "op": "JUMP"
    },
    "2543": {
      "op": "JUMPDEST"
    },
    "2544": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2546": {
      "op": "DUP1"
    },
    "2547": {
      "op": "DUP3"
    },
    "2548": {
      "op": "MSTORE"
    },
    "2549": {
      "op": "DUP2"
    },
    "2550": {
      "op": "DUP2"
    },
    "2551": {
      "op": "ADD"
    },
    "2552": {
      "op": "MSTORE"
    },
    "2553": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "2586": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2588": {
      "op": "DUP3"
    },
    "2589": {
      "op": "ADD"
    },
    "2590": {
      "op": "MSTORE"
    },
    "2591": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2593": {
      "op": "ADD"
    },
    "2594": {
      "op": "SWAP1"
    },
    "2595": {
      "jump": "o",
      "op": "JUMP"
    },
    "2596": {
      "op": "JUMPDEST"
    },
    "2597": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2599": {
      "op": "DUP1"
    },
    "2600": {
      "op": "DUP4"
    },
    "2601": {
      "op": "CALLDATALOAD"
    },
    "2602": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "2604": {
      "op": "NOT"
    },
    "2605": {
      "op": "DUP5"
    },
    "2606": {
      "op": "CALLDATASIZE"
    },
    "2607": {
      "op": "SUB"
    },
    "2608": {
      "op": "ADD"
    },
    "2609": {
      "op": "DUP2"
    },
    "2610": {
      "op": "SLT"
    },
    "2611": {
      "op": "PUSH2",
      "value": "0xA3A"
    },
    "2614": {
      "op": "JUMPI"
    },
    "2615": {
      "op": "DUP3"
    },
    "2616": {
      "op": "DUP4"
    },
    "2617": {
      "op": "REVERT"
    },
    "2618": {
      "op": "JUMPDEST"
    },
    "2619": {
      "op": "DUP4"
    },
    "2620": {
      "op": "ADD"
    },
    "2621": {
      "op": "DUP1"
    },
    "2622": {
      "op": "CALLDATALOAD"
    },
    "2623": {
      "op": "SWAP2"
    },
    "2624": {
      "op": "POP"
    },
    "2625": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2634": {
      "op": "DUP3"
    },
    "2635": {
      "op": "GT"
    },
    "2636": {
      "op": "ISZERO"
    },
    "2637": {
      "op": "PUSH2",
      "value": "0xA54"
    },
    "2640": {
      "op": "JUMPI"
    },
    "2641": {
      "op": "DUP3"
    },
    "2642": {
      "op": "DUP4"
    },
    "2643": {
      "op": "REVERT"
    },
    "2644": {
      "op": "JUMPDEST"
    },
    "2645": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2647": {
      "op": "ADD"
    },
    "2648": {
      "op": "SWAP2"
    },
    "2649": {
      "op": "POP"
    },
    "2650": {
      "op": "CALLDATASIZE"
    },
    "2651": {
      "op": "DUP2"
    },
    "2652": {
      "op": "SWAP1"
    },
    "2653": {
      "op": "SUB"
    },
    "2654": {
      "op": "DUP3"
    },
    "2655": {
      "op": "SGT"
    },
    "2656": {
      "op": "ISZERO"
    },
    "2657": {
      "op": "PUSH2",
      "value": "0xA69"
    },
    "2660": {
      "op": "JUMPI"
    },
    "2661": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2663": {
      "op": "DUP1"
    },
    "2664": {
      "op": "REVERT"
    },
    "2665": {
      "op": "JUMPDEST"
    },
    "2666": {
      "op": "SWAP3"
    },
    "2667": {
      "op": "POP"
    },
    "2668": {
      "op": "SWAP3"
    },
    "2669": {
      "op": "SWAP1"
    },
    "2670": {
      "op": "POP"
    },
    "2671": {
      "jump": "o",
      "op": "JUMP"
    },
    "2672": {
      "op": "JUMPDEST"
    },
    "2673": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2675": {
      "op": "DUP3"
    },
    "2676": {
      "op": "DUP3"
    },
    "2677": {
      "op": "LT"
    },
    "2678": {
      "op": "ISZERO"
    },
    "2679": {
      "op": "PUSH2",
      "value": "0xA82"
    },
    "2682": {
      "op": "JUMPI"
    },
    "2683": {
      "op": "PUSH2",
      "value": "0xA82"
    },
    "2686": {
      "op": "PUSH2",
      "value": "0xAF4"
    },
    "2689": {
      "jump": "i",
      "op": "JUMP"
    },
    "2690": {
      "op": "JUMPDEST"
    },
    "2691": {
      "op": "POP"
    },
    "2692": {
      "op": "SUB"
    },
    "2693": {
      "op": "SWAP1"
    },
    "2694": {
      "jump": "o",
      "op": "JUMP"
    },
    "2695": {
      "op": "JUMPDEST"
    },
    "2696": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2698": {
      "op": "DUP2"
    },
    "2699": {
      "op": "PUSH2",
      "value": "0xA96"
    },
    "2702": {
      "op": "JUMPI"
    },
    "2703": {
      "op": "PUSH2",
      "value": "0xA96"
    },
    "2706": {
      "op": "PUSH2",
      "value": "0xAF4"
    },
    "2709": {
      "jump": "i",
      "op": "JUMP"
    },
    "2710": {
      "op": "JUMPDEST"
    },
    "2711": {
      "op": "POP"
    },
    "2712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2714": {
      "op": "NOT"
    },
    "2715": {
      "op": "ADD"
    },
    "2716": {
      "op": "SWAP1"
    },
    "2717": {
      "jump": "o",
      "op": "JUMP"
    },
    "2718": {
      "op": "JUMPDEST"
    },
    "2719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2721": {
      "op": "DUP2"
    },
    "2722": {
      "op": "DUP2"
    },
    "2723": {
      "op": "SHR"
    },
    "2724": {
      "op": "SWAP1"
    },
    "2725": {
      "op": "DUP3"
    },
    "2726": {
      "op": "AND"
    },
    "2727": {
      "op": "DUP1"
    },
    "2728": {
      "op": "PUSH2",
      "value": "0xAB2"
    },
    "2731": {
      "op": "JUMPI"
    },
    "2732": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2734": {
      "op": "DUP3"
    },
    "2735": {
      "op": "AND"
    },
    "2736": {
      "op": "SWAP2"
    },
    "2737": {
      "op": "POP"
    },
    "2738": {
      "op": "JUMPDEST"
    },
    "2739": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2741": {
      "op": "DUP3"
    },
    "2742": {
      "op": "LT"
    },
    "2743": {
      "op": "DUP2"
    },
    "2744": {
      "op": "EQ"
    },
    "2745": {
      "op": "ISZERO"
    },
    "2746": {
      "op": "PUSH2",
      "value": "0xAD3"
    },
    "2749": {
      "op": "JUMPI"
    },
    "2750": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2755": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2757": {
      "op": "SHL"
    },
    "2758": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2760": {
      "op": "MSTORE"
    },
    "2761": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2763": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2765": {
      "op": "MSTORE"
    },
    "2766": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2768": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2770": {
      "op": "REVERT"
    },
    "2771": {
      "op": "JUMPDEST"
    },
    "2772": {
      "op": "POP"
    },
    "2773": {
      "op": "SWAP2"
    },
    "2774": {
      "op": "SWAP1"
    },
    "2775": {
      "op": "POP"
    },
    "2776": {
      "jump": "o",
      "op": "JUMP"
    },
    "2777": {
      "op": "JUMPDEST"
    },
    "2778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2780": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2782": {
      "op": "NOT"
    },
    "2783": {
      "op": "DUP3"
    },
    "2784": {
      "op": "EQ"
    },
    "2785": {
      "op": "ISZERO"
    },
    "2786": {
      "op": "PUSH2",
      "value": "0xAED"
    },
    "2789": {
      "op": "JUMPI"
    },
    "2790": {
      "op": "PUSH2",
      "value": "0xAED"
    },
    "2793": {
      "op": "PUSH2",
      "value": "0xAF4"
    },
    "2796": {
      "jump": "i",
      "op": "JUMP"
    },
    "2797": {
      "op": "JUMPDEST"
    },
    "2798": {
      "op": "POP"
    },
    "2799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2801": {
      "op": "ADD"
    },
    "2802": {
      "op": "SWAP1"
    },
    "2803": {
      "jump": "o",
      "op": "JUMP"
    },
    "2804": {
      "op": "JUMPDEST"
    },
    "2805": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2810": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2812": {
      "op": "SHL"
    },
    "2813": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2815": {
      "op": "MSTORE"
    },
    "2816": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2818": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2820": {
      "op": "MSTORE"
    },
    "2821": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2823": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2825": {
      "op": "REVERT"
    }
  },
  "sha1": "265e961f04ed59ae4e75d1b68409d0c3898ea3a7",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @notice Methods called by FloraArmy and FaunaArmy\n */\ninterface RANK {\n    function transferOwnership(address) external;\n    function query(address, int) external view returns (string memory);\n}\n\n/**\n * @title Ranking system of FloraArmy and FaunaArmy\n * @author Justa Liang\n */\ncontract ArmyRank is Ownable {\n\n    /// @notice URI prefix of certain branch\n    mapping (address => string) public branchPrefix;\n\n    /// @notice Level of power to reach to upgrade minions\n    int[5] public powerLevels;\n\n    /// @notice Metadata filenames\n    string[5] public jsonNames;\n\n    /**\n     * @dev Set power levels and metadata filenames\n     * @param powerLevels_ Array with length 5, from low level to high\n     * @param jsonNames_ Array with length 5, from low level URI to high\n    */\n    constructor(int[5] memory powerLevels_, string[5] memory jsonNames_) {\n        for (uint i = 0; i < 5; i++) {\n            powerLevels[i] = powerLevels_[i];\n            jsonNames[i] = jsonNames_[i];\n        }\n    }\n\n    /**\n     * @dev Call by Army Contract, to dynamically get token URI\n     * @param branchAddr Branch address of the minion\n     * @param power Power of the minion\n    */\n    function query(address branchAddr, int power) external view returns (string memory) {\n        for (uint i = powerLevels.length-1; i >= 0; i--) {\n            if (power >= powerLevels[i]) {\n                string memory prefix = branchPrefix[branchAddr];\n                if (bytes(prefix).length == 0) {\n                    return string(abi.encodePacked(branchPrefix[address(0)], jsonNames[i]));\n                }\n                else {\n                    return string(abi.encodePacked(branchPrefix[branchAddr], jsonNames[i]));\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Update branch prefix (give ownership to Battlefield contract in the future)\n     * @param branchAddr Branch address\n     * @param prefix Prefix of URI to be set\n    */\n    function updateBranchPrefix(address branchAddr, string calldata prefix) external onlyOwner {\n        branchPrefix[branchAddr] = prefix;\n    }\n\n    /**\n     * @dev Change power levels (will be discarded)\n     * @param powerLevels_ Array with length 5, from low level to high\n    */\n    function changePowerLevels(int[5] calldata powerLevels_) external onlyOwner {\n        for (uint i = 0; i < 5; i++) {\n            powerLevels[i] = powerLevels_[i];\n        }\n    }\n\n    /**\n     * @dev Change metadat filename (will be discarded)\n     * @param jsonNames_ Array with length 5, from low level URI to high\n    */\n    function changeJsonNames(string[5] calldata jsonNames_) external onlyOwner {\n        for (uint i = 0; i < 5; i++) {\n            jsonNames[i] = jsonNames_[i];\n        }\n    }\n}",
  "sourceMap": "397:2455:19:-:0;;;902:213;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:17:0;909:18;;-1:-1:-1;;;;;;909:18:0;665:10:10;909:18:0;;;;;942:43;;665:10:10;;;;942:43:0;;867:17;;942:43;842:150;986:6:19;981:128;1002:1;998;:5;981:128;;;1041:12;1054:1;1041:15;;;;;-1:-1:-1;;;1041:15:19;;;;;;;;;;;;;1024:11;1036:1;1024:14;;;;;-1:-1:-1;;;1024:14:19;;;;;;;;;;:32;1085:10;1096:1;1085:13;;;;;-1:-1:-1;;;1085:13:19;;;;;;;;;;;;;1070:9;1080:1;1070:12;;;;;-1:-1:-1;;;1070:12:19;;;;;;;;;;:28;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1005:3:19;;;;:::i;:::-;;;;981:128;;;;902:213;;397:2455;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;397:2455:19;;;-1:-1:-1;397:2455:19;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:1254:28;;104:4;148:3;143:2;135:6;131:15;127:25;117:2;;170:5;163;156:20;117:2;197:4;221:55;237:38;272:2;237:38;:::i;:::-;221:55;:::i;:::-;298:3;321:6;345:5;359:880;373:2;370:1;367:9;359:880;;;446:3;440:10;432:6;428:23;491:3;486:2;482;478:11;474:21;464:2;;513:5;506;499:20;464:2;544:9;;-1:-1:-1;569:26:28;;566:2;;;598:18;;:::i;:::-;641:4;673:51;697:11;;;-1:-1:-1;;693:25:28;689:34;;673:51;:::i;:::-;753:2;744:7;737:19;797:3;792:2;787;783;779:11;775:20;772:29;769:2;;;818:5;811;804:20;769:2;850:5;868:152;884:2;879:3;876:11;868:152;;;987:12;;;983:21;;977:28;953:17;;;949:26;;942:64;897:12;;868:152;;;1044:2;1039:3;1036:11;1033:2;;;1112:5;1107:2;1102;1093:7;1089:16;1085:25;1078:40;1033:2;-1:-1:-1;1145:20:28;;1185:12;;;;1217;;;;;-1:-1:-1;;391:1:28;384:9;359:880;;;-1:-1:-1;1257:5:28;;84:1184;-1:-1:-1;;;;;;;84:1184:28:o;1273:984::-;;;1468:3;1456:9;1447:7;1443:23;1439:33;1436:2;;;1490:6;1482;1475:22;1436:2;1544:7;1537:4;1526:9;1522:20;1518:34;1508:2;;1571:6;1563;1556:22;1508:2;1599:4;1623:55;1639:38;1674:2;1639:38;:::i;1623:55::-;1700:3;1723:9;1766:3;1755:9;1751:19;1789:7;1785:2;1782:15;1779:2;;;1815:6;1807;1800:22;1779:2;1842:6;1857:183;1871:2;1868:1;1865:9;1857:183;;;1928:10;;1916:23;;1962:4;1986:12;;;;2018;;;;1889:1;1882:9;1857:183;;;-1:-1:-1;2087:9:28;2059:5;;-1:-1:-1;2087:9:28;;-1:-1:-1;;;;2108:30:28;;2105:2;;;2156:6;2148;2141:22;2105:2;2184:67;2243:7;2234:6;2223:9;2219:22;2184:67;:::i;:::-;2174:77;;;1426:831;;;;;:::o;2262:275::-;2333:2;2327:9;-1:-1:-1;2379:13:28;;-1:-1:-1;;2375:27:28;2363:40;;-1:-1:-1;2418:34:28;;2454:22;;;2415:62;2412:2;;;2480:18;;:::i;:::-;2516:2;2509:22;2307:230;;-1:-1:-1;2307:230:28:o;2542:167::-;;-1:-1:-1;2619:30:28;;2616:2;;;2652:18;;:::i;:::-;-1:-1:-1;2693:1:28;2689:14;;2606:103::o;2714:380::-;2793:1;2789:12;;;;2836;;;2857:2;;2911:4;2903:6;2899:17;2889:27;;2857:2;2964;2956:6;2953:14;2933:18;2930:38;2927:2;;;3010:10;3005:3;3001:20;2998:1;2991:31;3045:4;3042:1;3035:15;3073:4;3070:1;3063:15;2927:2;;2769:325;;;:::o;3099:236::-;;-1:-1:-1;;3159:17:28;;3156:2;;;-1:-1:-1;;;3199:33:28;;3255:4;3252:1;3245:15;3285:4;3199:33;3273:17;3156:2;-1:-1:-1;3327:1:28;3316:13;;3146:189::o;3340:127::-;3401:10;3396:3;3392:20;3389:1;3382:31;3432:4;3429:1;3422:15;3456:4;3453:1;3446:15;3372:95;397:2455:19;;;;;;",
  "sourcePath": "contracts/ArmyRank.sol",
  "type": "contract"
}