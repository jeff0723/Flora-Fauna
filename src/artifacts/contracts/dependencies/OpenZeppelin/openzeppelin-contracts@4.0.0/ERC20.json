{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "C:/Users/justa/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC20/ERC20.sol",
    "10": "C:/Users/justa/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/Context.sol",
    "2": "C:/Users/justa/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC20/IERC20.sol"
  },
  "ast": {
    "absolutePath": "C:/Users/justa/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC20/ERC20.sol",
    "exportedSymbols": {
      "Context": [
        4700
      ],
      "ERC20": [
        3731
      ],
      "IERC20": [
        4778
      ]
    },
    "id": 3732,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3232,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:1"
      },
      {
        "absolutePath": "C:/Users/justa/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC20/IERC20.sol",
        "file": "./IERC20.sol",
        "id": 3233,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3732,
        "sourceUnit": 4779,
        "src": "58:22:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/justa/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 3234,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3732,
        "sourceUnit": 4701,
        "src": "81:33:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3236,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4700,
              "src": "1297:7:1"
            },
            "id": 3237,
            "nodeType": "InheritanceSpecifier",
            "src": "1297:7:1"
          },
          {
            "baseName": {
              "id": 3238,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4778,
              "src": "1306:6:1"
            },
            "id": 3239,
            "nodeType": "InheritanceSpecifier",
            "src": "1306:6:1"
          }
        ],
        "contractDependencies": [
          4700,
          4778
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3235,
          "nodeType": "StructuredDocumentation",
          "src": "116:1162:1",
          "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
        },
        "fullyImplemented": true,
        "id": 3731,
        "linearizedBaseContracts": [
          3731,
          4778,
          4700
        ],
        "name": "ERC20",
        "nameLocation": "1288:5:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3243,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1356:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 3731,
            "src": "1319:46:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 3242,
              "keyType": {
                "id": 3240,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1328:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1319:28:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 3241,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1339:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3249,
            "mutability": "mutable",
            "name": "_allowances",
            "nameLocation": "1430:11:1",
            "nodeType": "VariableDeclaration",
            "scope": 3731,
            "src": "1372:69:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 3248,
              "keyType": {
                "id": 3244,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1381:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1372:49:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 3247,
                "keyType": {
                  "id": 3245,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1401:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1392:28:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 3246,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1412:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3251,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "1464:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 3731,
            "src": "1448:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3250,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1448:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3253,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "1498:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 3731,
            "src": "1483:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3252,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1483:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3255,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "1524:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 3731,
            "src": "1509:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3254,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1509:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 3271,
              "nodeType": "Block",
              "src": "1899:57:1",
              "statements": [
                {
                  "expression": {
                    "id": 3265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3263,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3253,
                      "src": "1909:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3264,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3258,
                      "src": "1917:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1909:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3266,
                  "nodeType": "ExpressionStatement",
                  "src": "1909:13:1"
                },
                {
                  "expression": {
                    "id": 3269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3267,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3255,
                      "src": "1932:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3268,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3260,
                      "src": "1942:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1932:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3270,
                  "nodeType": "ExpressionStatement",
                  "src": "1932:17:1"
                }
              ]
            },
            "documentation": {
              "id": 3256,
              "nodeType": "StructuredDocumentation",
              "src": "1538:299:1",
              "text": " @dev Sets the values for {name} and {symbol}.\n The defaut value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All three of these values are immutable: they can only be set once during\n construction."
            },
            "id": 3272,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3258,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1869:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3272,
                  "src": "1855:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3257,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1855:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3260,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1890:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3272,
                  "src": "1876:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3259,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1876:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1854:44:1"
            },
            "returnParameters": {
              "id": 3262,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1899:0:1"
            },
            "scope": 3731,
            "src": "1842:114:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3280,
              "nodeType": "Block",
              "src": "2081:29:1",
              "statements": [
                {
                  "expression": {
                    "id": 3278,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3253,
                    "src": "2098:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 3277,
                  "id": 3279,
                  "nodeType": "Return",
                  "src": "2091:12:1"
                }
              ]
            },
            "documentation": {
              "id": 3273,
              "nodeType": "StructuredDocumentation",
              "src": "1962:54:1",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "id": 3281,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2030:4:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2034:2:1"
            },
            "returnParameters": {
              "id": 3277,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3276,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3281,
                  "src": "2066:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3275,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2066:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2065:15:1"
            },
            "scope": 3731,
            "src": "2021:89:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3289,
              "nodeType": "Block",
              "src": "2285:31:1",
              "statements": [
                {
                  "expression": {
                    "id": 3287,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3255,
                    "src": "2302:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 3286,
                  "id": 3288,
                  "nodeType": "Return",
                  "src": "2295:14:1"
                }
              ]
            },
            "documentation": {
              "id": 3282,
              "nodeType": "StructuredDocumentation",
              "src": "2116:102:1",
              "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
            },
            "functionSelector": "95d89b41",
            "id": 3290,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2232:6:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2238:2:1"
            },
            "returnParameters": {
              "id": 3286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3285,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3290,
                  "src": "2270:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3284,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2270:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2269:15:1"
            },
            "scope": 3731,
            "src": "2223:93:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3298,
              "nodeType": "Block",
              "src": "2996:26:1",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 3296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3013:2:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 3295,
                  "id": 3297,
                  "nodeType": "Return",
                  "src": "3006:9:1"
                }
              ]
            },
            "documentation": {
              "id": 3291,
              "nodeType": "StructuredDocumentation",
              "src": "2322:613:1",
              "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overloaded;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
            },
            "functionSelector": "313ce567",
            "id": 3299,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "2949:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3292,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2957:2:1"
            },
            "returnParameters": {
              "id": 3295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3294,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3299,
                  "src": "2989:5:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3293,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2989:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2988:7:1"
            },
            "scope": 3731,
            "src": "2940:82:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4709
            ],
            "body": {
              "id": 3308,
              "nodeType": "Block",
              "src": "3152:36:1",
              "statements": [
                {
                  "expression": {
                    "id": 3306,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3251,
                    "src": "3169:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3305,
                  "id": 3307,
                  "nodeType": "Return",
                  "src": "3162:19:1"
                }
              ]
            },
            "documentation": {
              "id": 3300,
              "nodeType": "StructuredDocumentation",
              "src": "3028:49:1",
              "text": " @dev See {IERC20-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 3309,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "3091:11:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3302,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3125:8:1"
            },
            "parameters": {
              "id": 3301,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3102:2:1"
            },
            "returnParameters": {
              "id": 3305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3304,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3309,
                  "src": "3143:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3303,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3143:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3142:9:1"
            },
            "scope": 3731,
            "src": "3082:106:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4717
            ],
            "body": {
              "id": 3322,
              "nodeType": "Block",
              "src": "3329:42:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 3318,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3243,
                      "src": "3346:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 3320,
                    "indexExpression": {
                      "id": 3319,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3312,
                      "src": "3356:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3346:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3317,
                  "id": 3321,
                  "nodeType": "Return",
                  "src": "3339:25:1"
                }
              ]
            },
            "documentation": {
              "id": 3310,
              "nodeType": "StructuredDocumentation",
              "src": "3194:47:1",
              "text": " @dev See {IERC20-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 3323,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "3255:9:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3314,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3302:8:1"
            },
            "parameters": {
              "id": 3313,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3312,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3273:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3323,
                  "src": "3265:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3311,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3265:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3264:17:1"
            },
            "returnParameters": {
              "id": 3317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3316,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3323,
                  "src": "3320:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3315,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3320:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3319:9:1"
            },
            "scope": 3731,
            "src": "3246:125:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4727
            ],
            "body": {
              "id": 3343,
              "nodeType": "Block",
              "src": "3666:80:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3335,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4688,
                          "src": "3686:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3686:12:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3337,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3326,
                        "src": "3700:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3338,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3328,
                        "src": "3711:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3334,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3565,
                      "src": "3676:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3676:42:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3340,
                  "nodeType": "ExpressionStatement",
                  "src": "3676:42:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 3341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3735:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3333,
                  "id": 3342,
                  "nodeType": "Return",
                  "src": "3728:11:1"
                }
              ]
            },
            "documentation": {
              "id": 3324,
              "nodeType": "StructuredDocumentation",
              "src": "3377:192:1",
              "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
            },
            "functionSelector": "a9059cbb",
            "id": 3344,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "3583:8:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3330,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3642:8:1"
            },
            "parameters": {
              "id": 3329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3326,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3600:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3344,
                  "src": "3592:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3325,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3592:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3328,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3619:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3344,
                  "src": "3611:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3327,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3611:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3591:35:1"
            },
            "returnParameters": {
              "id": 3333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3332,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3344,
                  "src": "3660:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3331,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3660:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3659:6:1"
            },
            "scope": 3731,
            "src": "3574:172:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4737
            ],
            "body": {
              "id": 3361,
              "nodeType": "Block",
              "src": "3902:51:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 3355,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3249,
                        "src": "3919:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 3357,
                      "indexExpression": {
                        "id": 3356,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3347,
                        "src": "3931:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3919:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 3359,
                    "indexExpression": {
                      "id": 3358,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3349,
                      "src": "3938:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3919:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3354,
                  "id": 3360,
                  "nodeType": "Return",
                  "src": "3912:34:1"
                }
              ]
            },
            "documentation": {
              "id": 3345,
              "nodeType": "StructuredDocumentation",
              "src": "3752:47:1",
              "text": " @dev See {IERC20-allowance}."
            },
            "functionSelector": "dd62ed3e",
            "id": 3362,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "3813:9:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3351,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3875:8:1"
            },
            "parameters": {
              "id": 3350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3347,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3831:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3362,
                  "src": "3823:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3823:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3349,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "3846:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3362,
                  "src": "3838:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3348,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3838:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3822:32:1"
            },
            "returnParameters": {
              "id": 3354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3353,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3362,
                  "src": "3893:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3352,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3893:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3892:9:1"
            },
            "scope": 3731,
            "src": "3804:149:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4747
            ],
            "body": {
              "id": 3382,
              "nodeType": "Block",
              "src": "4180:77:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3374,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4688,
                          "src": "4199:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4199:12:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3376,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3365,
                        "src": "4213:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3377,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3367,
                        "src": "4222:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3373,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3719,
                      "src": "4190:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4190:39:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3379,
                  "nodeType": "ExpressionStatement",
                  "src": "4190:39:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 3380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4246:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3372,
                  "id": 3381,
                  "nodeType": "Return",
                  "src": "4239:11:1"
                }
              ]
            },
            "documentation": {
              "id": 3363,
              "nodeType": "StructuredDocumentation",
              "src": "3959:127:1",
              "text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "095ea7b3",
            "id": 3383,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "4100:7:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3369,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4156:8:1"
            },
            "parameters": {
              "id": 3368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3365,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "4116:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3383,
                  "src": "4108:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3364,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4108:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3367,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4133:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3383,
                  "src": "4125:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3366,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4125:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4107:33:1"
            },
            "returnParameters": {
              "id": 3372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3371,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3383,
                  "src": "4174:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3370,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4174:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4173:6:1"
            },
            "scope": 3731,
            "src": "4091:166:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4759
            ],
            "body": {
              "id": 3429,
              "nodeType": "Block",
              "src": "4836:302:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3397,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3386,
                        "src": "4856:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3398,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3388,
                        "src": "4864:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3399,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3390,
                        "src": "4875:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3396,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3565,
                      "src": "4846:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4846:36:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3401,
                  "nodeType": "ExpressionStatement",
                  "src": "4846:36:1"
                },
                {
                  "assignments": [
                    3403
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3403,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "4901:16:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 3429,
                      "src": "4893:24:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3402,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4893:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3410,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 3404,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3249,
                        "src": "4920:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 3406,
                      "indexExpression": {
                        "id": 3405,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3386,
                        "src": "4932:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4920:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 3409,
                    "indexExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3407,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4688,
                        "src": "4940:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 3408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4940:12:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4920:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4893:60:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3412,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3403,
                          "src": "4971:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 3413,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3390,
                          "src": "4991:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4971:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                        "id": 3415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4999:42:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                        },
                        "value": "ERC20: transfer amount exceeds allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                        }
                      ],
                      "id": 3411,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4963:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4963:79:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3417,
                  "nodeType": "ExpressionStatement",
                  "src": "4963:79:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3419,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3386,
                        "src": "5061:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3420,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4688,
                          "src": "5069:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5069:12:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3422,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3403,
                          "src": "5083:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 3423,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3390,
                          "src": "5102:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5083:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3418,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3719,
                      "src": "5052:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5052:57:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3426,
                  "nodeType": "ExpressionStatement",
                  "src": "5052:57:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 3427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5127:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3395,
                  "id": 3428,
                  "nodeType": "Return",
                  "src": "5120:11:1"
                }
              ]
            },
            "documentation": {
              "id": 3384,
              "nodeType": "StructuredDocumentation",
              "src": "4263:456:1",
              "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
            },
            "functionSelector": "23b872dd",
            "id": 3430,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4733:12:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3392,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4812:8:1"
            },
            "parameters": {
              "id": 3391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3386,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "4754:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3430,
                  "src": "4746:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3385,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4746:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3388,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4770:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3430,
                  "src": "4762:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3387,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4762:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3390,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4789:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3430,
                  "src": "4781:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3389,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4781:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4745:51:1"
            },
            "returnParameters": {
              "id": 3395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3394,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3430,
                  "src": "4830:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3393,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4830:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4829:6:1"
            },
            "scope": 3731,
            "src": "4724:414:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3456,
              "nodeType": "Block",
              "src": "5627:118:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3441,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4688,
                          "src": "5646:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5646:12:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3443,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3433,
                        "src": "5660:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 3444,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3249,
                              "src": "5669:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 3447,
                            "indexExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 3445,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4688,
                                "src": "5681:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 3446,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5681:12:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5669:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3449,
                          "indexExpression": {
                            "id": 3448,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3433,
                            "src": "5695:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5669:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 3450,
                          "name": "addedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3435,
                          "src": "5706:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5669:47:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3440,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3719,
                      "src": "5637:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5637:80:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3453,
                  "nodeType": "ExpressionStatement",
                  "src": "5637:80:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 3454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5734:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3439,
                  "id": 3455,
                  "nodeType": "Return",
                  "src": "5727:11:1"
                }
              ]
            },
            "documentation": {
              "id": 3431,
              "nodeType": "StructuredDocumentation",
              "src": "5144:384:1",
              "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "39509351",
            "id": 3457,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nameLocation": "5542:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3433,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "5568:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3457,
                  "src": "5560:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3432,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5560:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3435,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nameLocation": "5585:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3457,
                  "src": "5577:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3434,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5577:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5559:37:1"
            },
            "returnParameters": {
              "id": 3439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3438,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3457,
                  "src": "5621:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3437,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5621:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5620:6:1"
            },
            "scope": 3731,
            "src": "5533:212:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3494,
              "nodeType": "Block",
              "src": "6331:272:1",
              "statements": [
                {
                  "assignments": [
                    3468
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3468,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "6349:16:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 3494,
                      "src": "6341:24:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3467,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6341:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3475,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 3469,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3249,
                        "src": "6368:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 3472,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3470,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4688,
                          "src": "6380:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6380:12:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6368:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 3474,
                    "indexExpression": {
                      "id": 3473,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3460,
                      "src": "6394:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6368:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6341:61:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3477,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3468,
                          "src": "6420:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 3478,
                          "name": "subtractedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3462,
                          "src": "6440:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6420:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                        "id": 3480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6457:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        },
                        "value": "ERC20: decreased allowance below zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        }
                      ],
                      "id": 3476,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6412:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6412:85:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3482,
                  "nodeType": "ExpressionStatement",
                  "src": "6412:85:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3484,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4688,
                          "src": "6516:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6516:12:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3486,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3460,
                        "src": "6530:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3487,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3468,
                          "src": "6539:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 3488,
                          "name": "subtractedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3462,
                          "src": "6558:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6539:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3483,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3719,
                      "src": "6507:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6507:67:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3491,
                  "nodeType": "ExpressionStatement",
                  "src": "6507:67:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 3492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6592:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3466,
                  "id": 3493,
                  "nodeType": "Return",
                  "src": "6585:11:1"
                }
              ]
            },
            "documentation": {
              "id": 3458,
              "nodeType": "StructuredDocumentation",
              "src": "5751:476:1",
              "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
            },
            "functionSelector": "a457c2d7",
            "id": 3495,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nameLocation": "6241:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3460,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "6267:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3495,
                  "src": "6259:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3459,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6259:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3462,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nameLocation": "6284:15:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3495,
                  "src": "6276:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3461,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6276:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6258:42:1"
            },
            "returnParameters": {
              "id": 3466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3465,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3495,
                  "src": "6325:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3464,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6325:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6324:6:1"
            },
            "scope": 3731,
            "src": "6232:371:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3564,
              "nodeType": "Block",
              "src": "7164:505:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3506,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3498,
                          "src": "7182:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7200:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3508,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7192:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3507,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7192:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7192:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7182:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 3512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7204:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        },
                        "value": "ERC20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        }
                      ],
                      "id": 3505,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7174:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7174:70:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3514,
                  "nodeType": "ExpressionStatement",
                  "src": "7174:70:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3516,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3500,
                          "src": "7262:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3519,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7283:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3518,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7275:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3517,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7275:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7275:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7262:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 3522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7287:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 3515,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7254:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7254:71:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3524,
                  "nodeType": "ExpressionStatement",
                  "src": "7254:71:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3526,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3498,
                        "src": "7357:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3527,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3500,
                        "src": "7365:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3528,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3502,
                        "src": "7376:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3525,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3730,
                      "src": "7336:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7336:47:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3530,
                  "nodeType": "ExpressionStatement",
                  "src": "7336:47:1"
                },
                {
                  "assignments": [
                    3532
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3532,
                      "mutability": "mutable",
                      "name": "senderBalance",
                      "nameLocation": "7402:13:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 3564,
                      "src": "7394:21:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3531,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7394:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3536,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3533,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3243,
                      "src": "7418:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 3535,
                    "indexExpression": {
                      "id": 3534,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3498,
                      "src": "7428:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7418:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7394:41:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3538,
                          "name": "senderBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3532,
                          "src": "7453:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 3539,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3502,
                          "src": "7470:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7453:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                        "id": 3541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7478:40:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        },
                        "value": "ERC20: transfer amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        }
                      ],
                      "id": 3537,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7445:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7445:74:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3543,
                  "nodeType": "ExpressionStatement",
                  "src": "7445:74:1"
                },
                {
                  "expression": {
                    "id": 3550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3544,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3243,
                        "src": "7529:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3546,
                      "indexExpression": {
                        "id": 3545,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3498,
                        "src": "7539:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7529:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3547,
                        "name": "senderBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3532,
                        "src": "7549:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 3548,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3502,
                        "src": "7565:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7549:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7529:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3551,
                  "nodeType": "ExpressionStatement",
                  "src": "7529:42:1"
                },
                {
                  "expression": {
                    "id": 3556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3552,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3243,
                        "src": "7581:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3554,
                      "indexExpression": {
                        "id": 3553,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3500,
                        "src": "7591:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7581:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 3555,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3502,
                      "src": "7605:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7581:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3557,
                  "nodeType": "ExpressionStatement",
                  "src": "7581:30:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3559,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3498,
                        "src": "7636:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3560,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3500,
                        "src": "7644:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3561,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3502,
                        "src": "7655:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3558,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4768,
                      "src": "7627:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7627:35:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3563,
                  "nodeType": "EmitStatement",
                  "src": "7622:40:1"
                }
              ]
            },
            "documentation": {
              "id": 3496,
              "nodeType": "StructuredDocumentation",
              "src": "6609:463:1",
              "text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
            },
            "id": 3565,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "7086:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3498,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "7104:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3565,
                  "src": "7096:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3497,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7096:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3500,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "7120:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3565,
                  "src": "7112:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3499,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7112:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3502,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7139:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3565,
                  "src": "7131:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3501,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7131:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7095:51:1"
            },
            "returnParameters": {
              "id": 3504,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7164:0:1"
            },
            "scope": 3731,
            "src": "7077:592:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3611,
              "nodeType": "Block",
              "src": "8005:265:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3574,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3568,
                          "src": "8023:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3577,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8042:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3576,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8034:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3575,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8034:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8034:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8023:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 3580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8046:33:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        },
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        }
                      ],
                      "id": 3573,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8015:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8015:65:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3582,
                  "nodeType": "ExpressionStatement",
                  "src": "8015:65:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3586,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8120:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8112:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3584,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8112:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8112:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3588,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3568,
                        "src": "8124:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3589,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3570,
                        "src": "8133:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3583,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3730,
                      "src": "8091:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8091:49:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3591,
                  "nodeType": "ExpressionStatement",
                  "src": "8091:49:1"
                },
                {
                  "expression": {
                    "id": 3594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3592,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3251,
                      "src": "8151:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 3593,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3570,
                      "src": "8167:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8151:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3595,
                  "nodeType": "ExpressionStatement",
                  "src": "8151:22:1"
                },
                {
                  "expression": {
                    "id": 3600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3596,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3243,
                        "src": "8183:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3598,
                      "indexExpression": {
                        "id": 3597,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3568,
                        "src": "8193:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8183:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 3599,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3570,
                      "src": "8205:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8183:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3601,
                  "nodeType": "ExpressionStatement",
                  "src": "8183:28:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8243:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8235:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3603,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8235:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8235:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3607,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3568,
                        "src": "8247:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3608,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3570,
                        "src": "8256:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3602,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4768,
                      "src": "8226:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8226:37:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3610,
                  "nodeType": "EmitStatement",
                  "src": "8221:42:1"
                }
              ]
            },
            "documentation": {
              "id": 3566,
              "nodeType": "StructuredDocumentation",
              "src": "7675:260:1",
              "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
            },
            "id": 3612,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "7949:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3568,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7963:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3612,
                  "src": "7955:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3567,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7955:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3570,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7980:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3612,
                  "src": "7972:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3569,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7972:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7954:33:1"
            },
            "returnParameters": {
              "id": 3572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8005:0:1"
            },
            "scope": 3731,
            "src": "7940:330:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3673,
              "nodeType": "Block",
              "src": "8655:418:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3621,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3615,
                          "src": "8673:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3624,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8692:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3623,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8684:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3622,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8684:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8684:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8673:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 3627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8696:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        },
                        "value": "ERC20: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        }
                      ],
                      "id": 3620,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8665:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8665:67:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3629,
                  "nodeType": "ExpressionStatement",
                  "src": "8665:67:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3631,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3615,
                        "src": "8764:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8781:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8773:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3632,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8773:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8773:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3636,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3617,
                        "src": "8785:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3630,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3730,
                      "src": "8743:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8743:49:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3638,
                  "nodeType": "ExpressionStatement",
                  "src": "8743:49:1"
                },
                {
                  "assignments": [
                    3640
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3640,
                      "mutability": "mutable",
                      "name": "accountBalance",
                      "nameLocation": "8811:14:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 3673,
                      "src": "8803:22:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3639,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8803:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3644,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3641,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3243,
                      "src": "8828:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 3643,
                    "indexExpression": {
                      "id": 3642,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3615,
                      "src": "8838:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8828:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8803:43:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3646,
                          "name": "accountBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3640,
                          "src": "8864:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 3647,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3617,
                          "src": "8882:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8864:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 3649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8890:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        },
                        "value": "ERC20: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        }
                      ],
                      "id": 3645,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8856:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8856:71:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3651,
                  "nodeType": "ExpressionStatement",
                  "src": "8856:71:1"
                },
                {
                  "expression": {
                    "id": 3658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3652,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3243,
                        "src": "8937:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3654,
                      "indexExpression": {
                        "id": 3653,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3615,
                        "src": "8947:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8937:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3655,
                        "name": "accountBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3640,
                        "src": "8958:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 3656,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3617,
                        "src": "8975:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8958:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8937:44:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3659,
                  "nodeType": "ExpressionStatement",
                  "src": "8937:44:1"
                },
                {
                  "expression": {
                    "id": 3662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3660,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3251,
                      "src": "8991:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 3661,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3617,
                      "src": "9007:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8991:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3663,
                  "nodeType": "ExpressionStatement",
                  "src": "8991:22:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3665,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3615,
                        "src": "9038:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3668,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9055:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9047:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3666,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9047:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9047:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3670,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3617,
                        "src": "9059:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3664,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4768,
                      "src": "9029:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9029:37:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3672,
                  "nodeType": "EmitStatement",
                  "src": "9024:42:1"
                }
              ]
            },
            "documentation": {
              "id": 3613,
              "nodeType": "StructuredDocumentation",
              "src": "8276:309:1",
              "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
            },
            "id": 3674,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "8599:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3618,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3615,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8613:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3674,
                  "src": "8605:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3614,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8605:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3617,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8630:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3674,
                  "src": "8622:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3616,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8622:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8604:33:1"
            },
            "returnParameters": {
              "id": 3619,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8655:0:1"
            },
            "scope": 3731,
            "src": "8590:483:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3718,
              "nodeType": "Block",
              "src": "9579:257:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3685,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3677,
                          "src": "9597:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3688,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9614:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3687,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9606:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3686,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9606:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9606:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9597:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 3691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9618:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        },
                        "value": "ERC20: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        }
                      ],
                      "id": 3684,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9589:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9589:68:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3693,
                  "nodeType": "ExpressionStatement",
                  "src": "9589:68:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3695,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3679,
                          "src": "9675:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3698,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9694:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9686:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3696,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9686:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9686:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9675:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 3701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9698:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        },
                        "value": "ERC20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        }
                      ],
                      "id": 3694,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9667:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9667:68:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3703,
                  "nodeType": "ExpressionStatement",
                  "src": "9667:68:1"
                },
                {
                  "expression": {
                    "id": 3710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 3704,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3249,
                          "src": "9746:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 3707,
                        "indexExpression": {
                          "id": 3705,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3677,
                          "src": "9758:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9746:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3708,
                      "indexExpression": {
                        "id": 3706,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3679,
                        "src": "9765:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9746:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3709,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3681,
                      "src": "9776:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9746:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3711,
                  "nodeType": "ExpressionStatement",
                  "src": "9746:36:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3713,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3677,
                        "src": "9806:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3714,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3679,
                        "src": "9813:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3715,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3681,
                        "src": "9822:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3712,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4777,
                      "src": "9797:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9797:32:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3717,
                  "nodeType": "EmitStatement",
                  "src": "9792:37:1"
                }
              ]
            },
            "documentation": {
              "id": 3675,
              "nodeType": "StructuredDocumentation",
              "src": "9079:412:1",
              "text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
            },
            "id": 3719,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "9505:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3677,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "9522:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3719,
                  "src": "9514:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3676,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9514:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3679,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "9537:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3719,
                  "src": "9529:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3678,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9529:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3681,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9554:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3719,
                  "src": "9546:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3680,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9546:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9513:48:1"
            },
            "returnParameters": {
              "id": 3683,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9579:0:1"
            },
            "scope": 3731,
            "src": "9496:340:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3729,
              "nodeType": "Block",
              "src": "10512:3:1",
              "statements": []
            },
            "documentation": {
              "id": 3720,
              "nodeType": "StructuredDocumentation",
              "src": "9842:576:1",
              "text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 3730,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "10432:20:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3727,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3722,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10461:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3730,
                  "src": "10453:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3721,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10453:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3724,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10475:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3730,
                  "src": "10467:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3723,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10467:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3726,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10487:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3730,
                  "src": "10479:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3725,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10479:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10452:42:1"
            },
            "returnParameters": {
              "id": 3728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10512:0:1"
            },
            "scope": 3731,
            "src": "10423:92:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 3732,
        "src": "1279:9238:1"
      }
    ],
    "src": "33:10485:1"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162000b7938038062000b798339810160408190526200003491620001c1565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b5050506200027b565b828054620000769062000228565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200011f578081fd5b81516001600160401b03808211156200013c576200013c62000265565b604051601f8301601f19908116603f0116810190828211818310171562000167576200016762000265565b8160405283815260209250868385880101111562000183578485fd5b8491505b83821015620001a6578582018301518183018401529082019062000187565b83821115620001b757848385830101525b9695505050505050565b60008060408385031215620001d4578182fd5b82516001600160401b0380821115620001eb578384fd5b620001f9868387016200010e565b935060208501519150808211156200020f578283fd5b506200021e858286016200010e565b9150509250929050565b600181811c908216806200023d57607f821691505b602082108114156200025f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6108ee806200028b6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b4114610149578063a457c2d714610151578063a9059cbb14610164578063dd62ed3e14610177576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101b0565b6040516100c391906107e5565b60405180910390f35b6100df6100da3660046107bc565b610242565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610781565b610258565b604051601281526020016100c3565b6100df6101313660046107bc565b61030e565b6100f361014436600461072e565b610345565b6100b6610364565b6100df61015f3660046107bc565b610373565b6100df6101723660046107bc565b61040e565b6100f361018536600461074f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101bf90610867565b80601f01602080910402602001604051908101604052809291908181526020018280546101eb90610867565b80156102385780601f1061020d57610100808354040283529160200191610238565b820191906000526020600020905b81548152906001019060200180831161021b57829003601f168201915b5050505050905090565b600061024f33848461041b565b50600192915050565b600061026584848461053f565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156102ef5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61030385336102fe8685610850565b61041b565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161024f9185906102fe908690610838565b6001600160a01b0381166000908152602081905260409020545b919050565b6060600480546101bf90610867565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103f55760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102e6565b61040433856102fe8685610850565b5060019392505050565b600061024f33848461053f565b6001600160a01b03831661047d5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102e6565b6001600160a01b0382166104de5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102e6565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105a35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102e6565b6001600160a01b0382166106055760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102e6565b6001600160a01b0383166000908152602081905260409020548181101561067d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102e6565b6106878282610850565b6001600160a01b0380861660009081526020819052604080822093909355908516815290812080548492906106bd908490610838565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161070991815260200190565b60405180910390a350505050565b80356001600160a01b038116811461035f57600080fd5b60006020828403121561073f578081fd5b61074882610717565b9392505050565b60008060408385031215610761578081fd5b61076a83610717565b915061077860208401610717565b90509250929050565b600080600060608486031215610795578081fd5b61079e84610717565b92506107ac60208501610717565b9150604084013590509250925092565b600080604083850312156107ce578182fd5b6107d783610717565b946020939093013593505050565b6000602080835283518082850152825b81811015610811578581018301518582016040015282016107f5565b818111156108225783604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561084b5761084b6108a2565b500190565b600082821015610862576108626108a2565b500390565b600181811c9082168061087b57607f821691505b6020821081141561089c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220ab1d8c7da450c807c16b8beb04eafc395025bbbfedef1ba24ed1825f69c2196764736f6c63430008030033",
  "bytecodeSha1": "6a8f656d1cc164b2bfb8e8a87f6832492129c924",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.3+commit.8d00100c"
  },
  "contractName": "ERC20",
  "coverageMap": {
    "branches": {
      "1": {
        "ERC20._approve": {
          "30": [
            9597,
            9616,
            true
          ],
          "31": [
            9675,
            9696,
            true
          ]
        },
        "ERC20._transfer": {
          "32": [
            7182,
            7202,
            true
          ],
          "33": [
            7262,
            7285,
            true
          ],
          "34": [
            7453,
            7476,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "29": [
            6420,
            6455,
            true
          ]
        },
        "ERC20.transferFrom": {
          "28": [
            4971,
            4997,
            true
          ]
        }
      },
      "10": {},
      "2": {}
    },
    "statements": {
      "1": {
        "ERC20._approve": {
          "18": [
            9589,
            9657
          ],
          "19": [
            9667,
            9735
          ],
          "20": [
            9746,
            9782
          ],
          "21": [
            9792,
            9829
          ]
        },
        "ERC20._transfer": {
          "22": [
            7174,
            7244
          ],
          "23": [
            7254,
            7325
          ],
          "24": [
            7445,
            7519
          ],
          "25": [
            7529,
            7571
          ],
          "26": [
            7581,
            7611
          ],
          "27": [
            7622,
            7662
          ]
        },
        "ERC20.allowance": {
          "2": [
            3912,
            3946
          ]
        },
        "ERC20.approve": {
          "4": [
            4190,
            4229
          ],
          "6": [
            4239,
            4250
          ]
        },
        "ERC20.balanceOf": {
          "12": [
            3339,
            3364
          ]
        },
        "ERC20.decimals": {
          "1": [
            3006,
            3015
          ]
        },
        "ERC20.decreaseAllowance": {
          "14": [
            6412,
            6497
          ],
          "15": [
            6507,
            6574
          ],
          "16": [
            6585,
            6596
          ]
        },
        "ERC20.increaseAllowance": {
          "11": [
            5637,
            5717
          ]
        },
        "ERC20.name": {
          "3": [
            2091,
            2103
          ]
        },
        "ERC20.symbol": {
          "13": [
            2295,
            2309
          ]
        },
        "ERC20.totalSupply": {
          "0": [
            3162,
            3181
          ]
        },
        "ERC20.transfer": {
          "17": [
            3676,
            3718
          ]
        },
        "ERC20.transferFrom": {
          "7": [
            4846,
            4882
          ],
          "8": [
            4963,
            5042
          ],
          "9": [
            5052,
            5109
          ],
          "10": [
            5120,
            5131
          ]
        }
      },
      "10": {
        "Context._msgSender": {
          "5": [
            658,
            675
          ]
        }
      },
      "2": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.0.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/IERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b4114610149578063a457c2d714610151578063a9059cbb14610164578063dd62ed3e14610177576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101b0565b6040516100c391906107e5565b60405180910390f35b6100df6100da3660046107bc565b610242565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610781565b610258565b604051601281526020016100c3565b6100df6101313660046107bc565b61030e565b6100f361014436600461072e565b610345565b6100b6610364565b6100df61015f3660046107bc565b610373565b6100df6101723660046107bc565b61040e565b6100f361018536600461074f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101bf90610867565b80601f01602080910402602001604051908101604052809291908181526020018280546101eb90610867565b80156102385780601f1061020d57610100808354040283529160200191610238565b820191906000526020600020905b81548152906001019060200180831161021b57829003601f168201915b5050505050905090565b600061024f33848461041b565b50600192915050565b600061026584848461053f565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156102ef5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61030385336102fe8685610850565b61041b565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161024f9185906102fe908690610838565b6001600160a01b0381166000908152602081905260409020545b919050565b6060600480546101bf90610867565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103f55760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102e6565b61040433856102fe8685610850565b5060019392505050565b600061024f33848461053f565b6001600160a01b03831661047d5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102e6565b6001600160a01b0382166104de5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102e6565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105a35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102e6565b6001600160a01b0382166106055760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102e6565b6001600160a01b0383166000908152602081905260409020548181101561067d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102e6565b6106878282610850565b6001600160a01b0380861660009081526020819052604080822093909355908516815290812080548492906106bd908490610838565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161070991815260200190565b60405180910390a350505050565b80356001600160a01b038116811461035f57600080fd5b60006020828403121561073f578081fd5b61074882610717565b9392505050565b60008060408385031215610761578081fd5b61076a83610717565b915061077860208401610717565b90509250929050565b600080600060608486031215610795578081fd5b61079e84610717565b92506107ac60208501610717565b9150604084013590509250925092565b600080604083850312156107ce578182fd5b6107d783610717565b946020939093013593505050565b6000602080835283518082850152825b81811015610811578581018301518582016040015282016107f5565b818111156108225783604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561084b5761084b6108a2565b500190565b600082821015610862576108626108a2565b500390565b600181811c9082168061087b57607f821691505b6020821081141561089c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220ab1d8c7da450c807c16b8beb04eafc395025bbbfedef1ba24ed1825f69c2196764736f6c63430008030033",
  "deployedSourceMap": "1279:9238:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4091:166;;;;;;:::i;:::-;;:::i;:::-;;;1445:14:28;;1438:22;1420:41;;1408:2;1393:18;4091:166:1;1375:92:28;3082:106:1;3169:12;;3082:106;;;5066:25:28;;;5054:2;5039:18;3082:106:1;5021:76:28;4724:414:1;;;;;;:::i;:::-;;:::i;2940:82::-;;;3013:2;5244:36:28;;5232:2;5217:18;2940:82:1;5199:87:28;5533:212:1;;;;;;:::i;:::-;;:::i;3246:125::-;;;;;;:::i;:::-;;:::i;2223:93::-;;;:::i;6232:371::-;;;;;;:::i;:::-;;:::i;3574:172::-;;;;;;:::i;:::-;;:::i;3804:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3919:18:1;;;3893:7;3919:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3804:149;2021:89;2066:13;2098:5;2091:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:89;:::o;4091:166::-;4174:4;4190:39;665:10:10;4213:7:1;4222:6;4190:8;:39::i;:::-;-1:-1:-1;4246:4:1;4091:166;;;;:::o;4724:414::-;4830:4;4846:36;4856:6;4864:9;4875:6;4846:9;:36::i;:::-;-1:-1:-1;;;;;4920:19:1;;4893:24;4920:19;;;:11;:19;;;;;;;;665:10:10;4920:33:1;;;;;;;;4971:26;;;;4963:79;;;;-1:-1:-1;;;4963:79:1;;3496:2:28;4963:79:1;;;3478:21:28;3535:2;3515:18;;;3508:30;3574:34;3554:18;;;3547:62;-1:-1:-1;;;3625:18:28;;;3618:38;3673:19;;4963:79:1;;;;;;;;;5052:57;5061:6;665:10:10;5083:25:1;5102:6;5083:16;:25;:::i;:::-;5052:8;:57::i;:::-;-1:-1:-1;5127:4:1;;4724:414;-1:-1:-1;;;;4724:414:1:o;5533:212::-;665:10:10;5621:4:1;5669:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5669:34:1;;;;;;;;;;5621:4;;5637:80;;5660:7;;5669:47;;5706:10;;5669:47;:::i;3246:125::-;-1:-1:-1;;;;;3346:18:1;;3320:7;3346:18;;;;;;;;;;;3246:125;;;;:::o;2223:93::-;2270:13;2302:7;2295:14;;;;;:::i;6232:371::-;665:10:10;6325:4:1;6368:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6368:34:1;;;;;;;;;;6420:35;;;;6412:85;;;;-1:-1:-1;;;6412:85:1;;4716:2:28;6412:85:1;;;4698:21:28;4755:2;4735:18;;;4728:30;4794:34;4774:18;;;4767:62;-1:-1:-1;;;4845:18:28;;;4838:35;4890:19;;6412:85:1;4688:227:28;6412:85:1;6507:67;665:10:10;6530:7:1;6539:34;6558:15;6539:16;:34;:::i;6507:67::-;-1:-1:-1;6592:4:1;;6232:371;-1:-1:-1;;;6232:371:1:o;3574:172::-;3660:4;3676:42;665:10:10;3700:9:1;3711:6;3676:9;:42::i;9496:340::-;-1:-1:-1;;;;;9597:19:1;;9589:68;;;;-1:-1:-1;;;9589:68:1;;4311:2:28;9589:68:1;;;4293:21:28;4350:2;4330:18;;;4323:30;4389:34;4369:18;;;4362:62;-1:-1:-1;;;4440:18:28;;;4433:34;4484:19;;9589:68:1;4283:226:28;9589:68:1;-1:-1:-1;;;;;9675:21:1;;9667:68;;;;-1:-1:-1;;;9667:68:1;;2686:2:28;9667:68:1;;;2668:21:28;2725:2;2705:18;;;2698:30;2764:34;2744:18;;;2737:62;-1:-1:-1;;;2815:18:28;;;2808:32;2857:19;;9667:68:1;2658:224:28;9667:68:1;-1:-1:-1;;;;;9746:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9797:32;;5066:25:28;;;9797:32:1;;5039:18:28;9797:32:1;;;;;;;9496:340;;;:::o;7077:592::-;-1:-1:-1;;;;;7182:20:1;;7174:70;;;;-1:-1:-1;;;7174:70:1;;3905:2:28;7174:70:1;;;3887:21:28;3944:2;3924:18;;;3917:30;3983:34;3963:18;;;3956:62;-1:-1:-1;;;4034:18:28;;;4027:35;4079:19;;7174:70:1;3877:227:28;7174:70:1;-1:-1:-1;;;;;7262:23:1;;7254:71;;;;-1:-1:-1;;;7254:71:1;;2282:2:28;7254:71:1;;;2264:21:28;2321:2;2301:18;;;2294:30;2360:34;2340:18;;;2333:62;-1:-1:-1;;;2411:18:28;;;2404:33;2454:19;;7254:71:1;2254:225:28;7254:71:1;-1:-1:-1;;;;;7418:17:1;;7394:21;7418:17;;;;;;;;;;;7453:23;;;;7445:74;;;;-1:-1:-1;;;7445:74:1;;3089:2:28;7445:74:1;;;3071:21:28;3128:2;3108:18;;;3101:30;3167:34;3147:18;;;3140:62;-1:-1:-1;;;3218:18:28;;;3211:36;3264:19;;7445:74:1;3061:228:28;7445:74:1;7549:22;7565:6;7549:13;:22;:::i;:::-;-1:-1:-1;;;;;7529:17:1;;;:9;:17;;;;;;;;;;;:42;;;;7581:20;;;;;;;;:30;;7605:6;;7529:9;7581:30;;7605:6;;7581:30;:::i;:::-;;;;;;;;7644:9;-1:-1:-1;;;;;7627:35:1;7636:6;-1:-1:-1;;;;;7627:35:1;;7655:6;7627:35;;;;5066:25:28;;5054:2;5039:18;;5021:76;7627:35:1;;;;;;;;7077:592;;;;:::o;14:173:28:-;82:20;;-1:-1:-1;;;;;131:31:28;;121:42;;111:2;;177:1;174;167:12;192:196;;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;:::-;343:39;262:126;-1:-1:-1;;;262:126:28:o;393:270::-;;;522:2;510:9;501:7;497:23;493:32;490:2;;;543:6;535;528:22;490:2;571:29;590:9;571:29;:::i;:::-;561:39;;619:38;653:2;642:9;638:18;619:38;:::i;:::-;609:48;;480:183;;;;;:::o;668:338::-;;;;814:2;802:9;793:7;789:23;785:32;782:2;;;835:6;827;820:22;782:2;863:29;882:9;863:29;:::i;:::-;853:39;;911:38;945:2;934:9;930:18;911:38;:::i;:::-;901:48;;996:2;985:9;981:18;968:32;958:42;;772:234;;;;;:::o;1011:264::-;;;1140:2;1128:9;1119:7;1115:23;1111:32;1108:2;;;1161:6;1153;1146:22;1108:2;1189:29;1208:9;1189:29;:::i;:::-;1179:39;1265:2;1250:18;;;;1237:32;;-1:-1:-1;;;1098:177:28:o;1472:603::-;;1613:2;1642;1631:9;1624:21;1674:6;1668:13;1717:6;1712:2;1701:9;1697:18;1690:34;1742:4;1755:140;1769:6;1766:1;1763:13;1755:140;;;1864:14;;;1860:23;;1854:30;1830:17;;;1849:2;1826:26;1819:66;1784:10;;1755:140;;;1913:6;1910:1;1907:13;1904:2;;;1983:4;1978:2;1969:6;1958:9;1954:22;1950:31;1943:45;1904:2;-1:-1:-1;2059:2:28;2038:15;-1:-1:-1;;2034:29:28;2019:45;;;;2066:2;2015:54;;1593:482;-1:-1:-1;;;1593:482:28:o;5291:128::-;;5362:1;5358:6;5355:1;5352:13;5349:2;;;5368:18;;:::i;:::-;-1:-1:-1;5404:9:28;;5339:80::o;5424:125::-;;5492:1;5489;5486:8;5483:2;;;5497:18;;:::i;:::-;-1:-1:-1;5534:9:28;;5473:76::o;5554:380::-;5633:1;5629:12;;;;5676;;;5697:2;;5751:4;5743:6;5739:17;5729:27;;5697:2;5804;5796:6;5793:14;5773:18;5770:38;5767:2;;;5850:10;5845:3;5841:20;5838:1;5831:31;5885:4;5882:1;5875:15;5913:4;5910:1;5903:15;5767:2;;5609:325;;;:::o;5939:127::-;6000:10;5995:3;5991:20;5988:1;5981:31;6031:4;6028:1;6021:15;6055:4;6052:1;6045:15",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "constructor": {
        "details": "Sets the values for {name} and {symbol}. The defaut value of {decimals} is 18. To select a different value for {decimals} you should overload it. All three of these values are immutable: they can only be set once during construction."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    1279,
    10517
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x177 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x242 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x781 JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x30E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x72E JUMP JUMPDEST PUSH2 0x345 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x364 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x74F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1BF SWAP1 PUSH2 0x867 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1EB SWAP1 PUSH2 0x867 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x238 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x20D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x238 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x21B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24F CALLER DUP5 DUP5 PUSH2 0x41B JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 DUP5 DUP5 DUP5 PUSH2 0x53F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x2EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x303 DUP6 CALLER PUSH2 0x2FE DUP7 DUP6 PUSH2 0x850 JUMP JUMPDEST PUSH2 0x41B JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x24F SWAP2 DUP6 SWAP1 PUSH2 0x2FE SWAP1 DUP7 SWAP1 PUSH2 0x838 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1BF SWAP1 PUSH2 0x867 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x404 CALLER DUP6 PUSH2 0x2FE DUP7 DUP6 PUSH2 0x850 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24F CALLER DUP5 DUP5 PUSH2 0x53F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x47D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x605 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x67D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x687 DUP3 DUP3 PUSH2 0x850 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6BD SWAP1 DUP5 SWAP1 PUSH2 0x838 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x709 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x73F JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x748 DUP3 PUSH2 0x717 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x761 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x76A DUP4 PUSH2 0x717 JUMP JUMPDEST SWAP2 POP PUSH2 0x778 PUSH1 0x20 DUP5 ADD PUSH2 0x717 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x795 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x79E DUP5 PUSH2 0x717 JUMP JUMPDEST SWAP3 POP PUSH2 0x7AC PUSH1 0x20 DUP6 ADD PUSH2 0x717 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7CE JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x7D7 DUP4 PUSH2 0x717 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x811 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7F5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x822 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84B JUMPI PUSH2 0x84B PUSH2 0x8A2 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x862 JUMPI PUSH2 0x862 PUSH2 0x8A2 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x87B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x89C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB SAR DUP13 PUSH30 0xA450C807C16B8BEB04EAFC395025BBBFEDEF1BA24ED1825F69C219676473 PUSH16 0x6C634300080300330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        1279,
        10517
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "6": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "DUP1",
      "path": "1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "REVERT",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "17": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "POP",
      "path": "1"
    },
    "18": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "21": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "LT",
      "path": "1"
    },
    "22": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA9"
    },
    "25": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "29": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "SHR",
      "path": "1"
    },
    "32": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "DUP1",
      "path": "1"
    },
    "33": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x39509351"
    },
    "38": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "GT",
      "path": "1"
    },
    "39": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "43": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "DUP1",
      "path": "1"
    },
    "44": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x39509351"
    },
    "49": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "EQ",
      "path": "1"
    },
    "50": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x123"
    },
    "53": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "54": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "DUP1",
      "path": "1"
    },
    "55": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x70A08231"
    },
    "60": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "EQ",
      "path": "1"
    },
    "61": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x136"
    },
    "64": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "65": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "DUP1",
      "path": "1"
    },
    "66": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95D89B41"
    },
    "71": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "EQ",
      "path": "1"
    },
    "72": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x149"
    },
    "75": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "76": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "DUP1",
      "path": "1"
    },
    "77": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA457C2D7"
    },
    "82": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "EQ",
      "path": "1"
    },
    "83": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x151"
    },
    "86": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "87": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "DUP1",
      "path": "1"
    },
    "88": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA9059CBB"
    },
    "93": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "EQ",
      "path": "1"
    },
    "94": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x164"
    },
    "97": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "98": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "DUP1",
      "path": "1"
    },
    "99": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xDD62ED3E"
    },
    "104": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "EQ",
      "path": "1"
    },
    "105": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x177"
    },
    "108": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "109": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA9"
    },
    "112": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "JUMP",
      "path": "1"
    },
    "113": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "114": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "DUP1",
      "path": "1"
    },
    "115": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6FDDE03"
    },
    "120": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "EQ",
      "path": "1"
    },
    "121": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAE"
    },
    "124": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "125": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "DUP1",
      "path": "1"
    },
    "126": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95EA7B3"
    },
    "131": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "EQ",
      "path": "1"
    },
    "132": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCC"
    },
    "135": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "136": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "DUP1",
      "path": "1"
    },
    "137": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x18160DDD"
    },
    "142": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "EQ",
      "path": "1"
    },
    "143": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEF"
    },
    "146": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "147": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "DUP1",
      "path": "1"
    },
    "148": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "153": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "EQ",
      "path": "1"
    },
    "154": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x101"
    },
    "157": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "158": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "DUP1",
      "path": "1"
    },
    "159": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x313CE567"
    },
    "164": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "EQ",
      "path": "1"
    },
    "165": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x114"
    },
    "168": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "169": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "170": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "172": {
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "DUP1",
      "path": "1"
    },
    "173": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1279,
        10517
      ],
      "op": "REVERT",
      "path": "1"
    },
    "174": {
      "fn": "ERC20.name",
      "offset": [
        2021,
        2110
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "175": {
      "fn": "ERC20.name",
      "offset": [
        2021,
        2110
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB6"
    },
    "178": {
      "fn": "ERC20.name",
      "offset": [
        2021,
        2110
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B0"
    },
    "181": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2021,
        2110
      ],
      "op": "JUMP",
      "path": "1"
    },
    "182": {
      "fn": "ERC20.name",
      "offset": [
        2021,
        2110
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "183": {
      "fn": "ERC20.name",
      "offset": [
        2021,
        2110
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "185": {
      "fn": "ERC20.name",
      "offset": [
        2021,
        2110
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "186": {
      "fn": "ERC20.name",
      "offset": [
        2021,
        2110
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC3"
    },
    "189": {
      "fn": "ERC20.name",
      "offset": [
        2021,
        2110
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "190": {
      "fn": "ERC20.name",
      "offset": [
        2021,
        2110
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "191": {
      "fn": "ERC20.name",
      "offset": [
        2021,
        2110
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7E5"
    },
    "194": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2021,
        2110
      ],
      "op": "JUMP",
      "path": "1"
    },
    "195": {
      "fn": "ERC20.name",
      "offset": [
        2021,
        2110
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "196": {
      "fn": "ERC20.name",
      "offset": [
        2021,
        2110
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "198": {
      "fn": "ERC20.name",
      "offset": [
        2021,
        2110
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "199": {
      "fn": "ERC20.name",
      "offset": [
        2021,
        2110
      ],
      "op": "DUP1",
      "path": "1"
    },
    "200": {
      "fn": "ERC20.name",
      "offset": [
        2021,
        2110
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "201": {
      "fn": "ERC20.name",
      "offset": [
        2021,
        2110
      ],
      "op": "SUB",
      "path": "1"
    },
    "202": {
      "fn": "ERC20.name",
      "offset": [
        2021,
        2110
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "203": {
      "fn": "ERC20.name",
      "offset": [
        2021,
        2110
      ],
      "op": "RETURN",
      "path": "1"
    },
    "204": {
      "fn": "ERC20.approve",
      "offset": [
        4091,
        4257
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "205": {
      "fn": "ERC20.approve",
      "offset": [
        4091,
        4257
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDF"
    },
    "208": {
      "fn": "ERC20.approve",
      "offset": [
        4091,
        4257
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDA"
    },
    "211": {
      "fn": "ERC20.approve",
      "offset": [
        4091,
        4257
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "212": {
      "fn": "ERC20.approve",
      "offset": [
        4091,
        4257
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "214": {
      "fn": "ERC20.approve",
      "offset": [
        4091,
        4257
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7BC"
    },
    "217": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4091,
        4257
      ],
      "op": "JUMP",
      "path": "1"
    },
    "218": {
      "fn": "ERC20.approve",
      "offset": [
        4091,
        4257
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "219": {
      "fn": "ERC20.approve",
      "offset": [
        4091,
        4257
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x242"
    },
    "222": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4091,
        4257
      ],
      "op": "JUMP",
      "path": "1"
    },
    "223": {
      "fn": "ERC20.approve",
      "offset": [
        4091,
        4257
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "224": {
      "fn": "ERC20.approve",
      "offset": [
        4091,
        4257
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "226": {
      "fn": "ERC20.approve",
      "offset": [
        4091,
        4257
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "227": {
      "op": "SWAP1"
    },
    "228": {
      "op": "ISZERO"
    },
    "229": {
      "op": "ISZERO"
    },
    "230": {
      "op": "DUP2"
    },
    "231": {
      "op": "MSTORE"
    },
    "232": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "234": {
      "op": "ADD"
    },
    "235": {
      "fn": "ERC20.approve",
      "offset": [
        4091,
        4257
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC3"
    },
    "238": {
      "op": "JUMP"
    },
    "239": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3082,
        3188
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "240": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3169,
        3181
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0x2"
    },
    "242": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3169,
        3181
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "243": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3082,
        3188
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "244": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3082,
        3188
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "246": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3082,
        3188
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "247": {
      "op": "SWAP1"
    },
    "248": {
      "op": "DUP2"
    },
    "249": {
      "op": "MSTORE"
    },
    "250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "252": {
      "op": "ADD"
    },
    "253": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3082,
        3188
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC3"
    },
    "256": {
      "op": "JUMP"
    },
    "257": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4724,
        5138
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "258": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4724,
        5138
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDF"
    },
    "261": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4724,
        5138
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10F"
    },
    "264": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4724,
        5138
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "265": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4724,
        5138
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "267": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4724,
        5138
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x781"
    },
    "270": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4724,
        5138
      ],
      "op": "JUMP",
      "path": "1"
    },
    "271": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4724,
        5138
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "272": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4724,
        5138
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x258"
    },
    "275": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4724,
        5138
      ],
      "op": "JUMP",
      "path": "1"
    },
    "276": {
      "fn": "ERC20.decimals",
      "offset": [
        2940,
        3022
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "277": {
      "fn": "ERC20.decimals",
      "offset": [
        2940,
        3022
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "279": {
      "fn": "ERC20.decimals",
      "offset": [
        2940,
        3022
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "280": {
      "fn": "ERC20.decimals",
      "offset": [
        3013,
        3015
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 1,
      "value": "0x12"
    },
    "282": {
      "op": "DUP2"
    },
    "283": {
      "op": "MSTORE"
    },
    "284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "286": {
      "op": "ADD"
    },
    "287": {
      "fn": "ERC20.decimals",
      "offset": [
        2940,
        3022
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC3"
    },
    "290": {
      "op": "JUMP"
    },
    "291": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5533,
        5745
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "292": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5533,
        5745
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDF"
    },
    "295": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5533,
        5745
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x131"
    },
    "298": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5533,
        5745
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "299": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5533,
        5745
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "301": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5533,
        5745
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7BC"
    },
    "304": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5533,
        5745
      ],
      "op": "JUMP",
      "path": "1"
    },
    "305": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5533,
        5745
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "306": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5533,
        5745
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30E"
    },
    "309": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5533,
        5745
      ],
      "op": "JUMP",
      "path": "1"
    },
    "310": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3246,
        3371
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "311": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3246,
        3371
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF3"
    },
    "314": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3246,
        3371
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x144"
    },
    "317": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3246,
        3371
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "318": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3246,
        3371
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "320": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3246,
        3371
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x72E"
    },
    "323": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3246,
        3371
      ],
      "op": "JUMP",
      "path": "1"
    },
    "324": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3246,
        3371
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "325": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3246,
        3371
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x345"
    },
    "328": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3246,
        3371
      ],
      "op": "JUMP",
      "path": "1"
    },
    "329": {
      "fn": "ERC20.symbol",
      "offset": [
        2223,
        2316
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "330": {
      "fn": "ERC20.symbol",
      "offset": [
        2223,
        2316
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB6"
    },
    "333": {
      "fn": "ERC20.symbol",
      "offset": [
        2223,
        2316
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x364"
    },
    "336": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2223,
        2316
      ],
      "op": "JUMP",
      "path": "1"
    },
    "337": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6232,
        6603
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "338": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6232,
        6603
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDF"
    },
    "341": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6232,
        6603
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15F"
    },
    "344": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6232,
        6603
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "345": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6232,
        6603
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "347": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6232,
        6603
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7BC"
    },
    "350": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6232,
        6603
      ],
      "op": "JUMP",
      "path": "1"
    },
    "351": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6232,
        6603
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "352": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6232,
        6603
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x373"
    },
    "355": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6232,
        6603
      ],
      "op": "JUMP",
      "path": "1"
    },
    "356": {
      "fn": "ERC20.transfer",
      "offset": [
        3574,
        3746
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "357": {
      "fn": "ERC20.transfer",
      "offset": [
        3574,
        3746
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDF"
    },
    "360": {
      "fn": "ERC20.transfer",
      "offset": [
        3574,
        3746
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x172"
    },
    "363": {
      "fn": "ERC20.transfer",
      "offset": [
        3574,
        3746
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "364": {
      "fn": "ERC20.transfer",
      "offset": [
        3574,
        3746
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "366": {
      "fn": "ERC20.transfer",
      "offset": [
        3574,
        3746
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7BC"
    },
    "369": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3574,
        3746
      ],
      "op": "JUMP",
      "path": "1"
    },
    "370": {
      "fn": "ERC20.transfer",
      "offset": [
        3574,
        3746
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "371": {
      "fn": "ERC20.transfer",
      "offset": [
        3574,
        3746
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x40E"
    },
    "374": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3574,
        3746
      ],
      "op": "JUMP",
      "path": "1"
    },
    "375": {
      "fn": "ERC20.allowance",
      "offset": [
        3804,
        3953
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "376": {
      "fn": "ERC20.allowance",
      "offset": [
        3804,
        3953
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF3"
    },
    "379": {
      "fn": "ERC20.allowance",
      "offset": [
        3804,
        3953
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x185"
    },
    "382": {
      "fn": "ERC20.allowance",
      "offset": [
        3804,
        3953
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "383": {
      "fn": "ERC20.allowance",
      "offset": [
        3804,
        3953
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "385": {
      "fn": "ERC20.allowance",
      "offset": [
        3804,
        3953
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x74F"
    },
    "388": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3804,
        3953
      ],
      "op": "JUMP",
      "path": "1"
    },
    "389": {
      "fn": "ERC20.allowance",
      "offset": [
        3804,
        3953
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "394": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "396": {
      "op": "SHL"
    },
    "397": {
      "op": "SUB"
    },
    "398": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        3937
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 2
    },
    "399": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        3937
      ],
      "op": "DUP3",
      "path": "1"
    },
    "400": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        3937
      ],
      "op": "AND",
      "path": "1"
    },
    "401": {
      "fn": "ERC20.allowance",
      "offset": [
        3893,
        3900
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "403": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        3937
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "404": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        3937
      ],
      "op": "DUP2",
      "path": "1"
    },
    "405": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        3937
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "406": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        3930
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "408": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        3937
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "410": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        3937
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "411": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        3937
      ],
      "op": "DUP2",
      "path": "1"
    },
    "412": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        3937
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "413": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        3937
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "415": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        3937
      ],
      "op": "DUP1",
      "path": "1"
    },
    "416": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        3937
      ],
      "op": "DUP4",
      "path": "1"
    },
    "417": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        3937
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "418": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        3946
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "419": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        3946
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "420": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        3946
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "421": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        3946
      ],
      "op": "AND",
      "path": "1"
    },
    "422": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        3946
      ],
      "op": "DUP3",
      "path": "1"
    },
    "423": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        3946
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "424": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        3946
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "425": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        3946
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "426": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        3946
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "427": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        3946
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "428": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        3946
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "429": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        3946
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "430": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        3946
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "431": {
      "fn": "ERC20.allowance",
      "offset": [
        3804,
        3953
      ],
      "op": "JUMP",
      "path": "1"
    },
    "432": {
      "fn": "ERC20.name",
      "offset": [
        2021,
        2110
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "433": {
      "fn": "ERC20.name",
      "offset": [
        2066,
        2079
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "435": {
      "fn": "ERC20.name",
      "offset": [
        2098,
        2103
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 3,
      "value": "0x3"
    },
    "437": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "DUP1",
      "path": "1"
    },
    "438": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "439": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1BF"
    },
    "442": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "443": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x867"
    },
    "446": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2091,
        2103
      ],
      "op": "JUMP",
      "path": "1"
    },
    "447": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "448": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "DUP1",
      "path": "1"
    },
    "449": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "451": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "ADD",
      "path": "1"
    },
    "452": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "454": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "DUP1",
      "path": "1"
    },
    "455": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "456": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "DIV",
      "path": "1"
    },
    "457": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "MUL",
      "path": "1"
    },
    "458": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "460": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "ADD",
      "path": "1"
    },
    "461": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "463": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "464": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "465": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "DUP2",
      "path": "1"
    },
    "466": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "ADD",
      "path": "1"
    },
    "467": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "469": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "470": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "DUP1",
      "path": "1"
    },
    "471": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "472": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "473": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "474": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "DUP2",
      "path": "1"
    },
    "475": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "DUP2",
      "path": "1"
    },
    "476": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "477": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "479": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "ADD",
      "path": "1"
    },
    "480": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "DUP3",
      "path": "1"
    },
    "481": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "DUP1",
      "path": "1"
    },
    "482": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "483": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1EB"
    },
    "486": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "487": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x867"
    },
    "490": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2091,
        2103
      ],
      "op": "JUMP",
      "path": "1"
    },
    "491": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "492": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "DUP1",
      "path": "1"
    },
    "493": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "494": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x238"
    },
    "497": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "498": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "DUP1",
      "path": "1"
    },
    "499": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "501": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "LT",
      "path": "1"
    },
    "502": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20D"
    },
    "505": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "506": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "509": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "DUP1",
      "path": "1"
    },
    "510": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "DUP4",
      "path": "1"
    },
    "511": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "512": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "DIV",
      "path": "1"
    },
    "513": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "MUL",
      "path": "1"
    },
    "514": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "DUP4",
      "path": "1"
    },
    "515": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "516": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "517": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "519": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "ADD",
      "path": "1"
    },
    "520": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "521": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x238"
    },
    "524": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "JUMP",
      "path": "1"
    },
    "525": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "526": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "DUP3",
      "path": "1"
    },
    "527": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "ADD",
      "path": "1"
    },
    "528": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "529": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "530": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "532": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "533": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "535": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "537": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "538": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "539": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "540": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "DUP2",
      "path": "1"
    },
    "541": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "542": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "DUP2",
      "path": "1"
    },
    "543": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "544": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "545": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "547": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "ADD",
      "path": "1"
    },
    "548": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "549": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "551": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "ADD",
      "path": "1"
    },
    "552": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "DUP1",
      "path": "1"
    },
    "553": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "DUP4",
      "path": "1"
    },
    "554": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "GT",
      "path": "1"
    },
    "555": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x21B"
    },
    "558": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "559": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "DUP3",
      "path": "1"
    },
    "560": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "561": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "SUB",
      "path": "1"
    },
    "562": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "564": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "AND",
      "path": "1"
    },
    "565": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "DUP3",
      "path": "1"
    },
    "566": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "ADD",
      "path": "1"
    },
    "567": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "568": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "569": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "POP",
      "path": "1"
    },
    "570": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "POP",
      "path": "1"
    },
    "571": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "POP",
      "path": "1"
    },
    "572": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "POP",
      "path": "1"
    },
    "573": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "POP",
      "path": "1"
    },
    "574": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "575": {
      "fn": "ERC20.name",
      "offset": [
        2091,
        2103
      ],
      "op": "POP",
      "path": "1"
    },
    "576": {
      "fn": "ERC20.name",
      "offset": [
        2021,
        2110
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "577": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2021,
        2110
      ],
      "op": "JUMP",
      "path": "1"
    },
    "578": {
      "fn": "ERC20.approve",
      "offset": [
        4091,
        4257
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "579": {
      "fn": "ERC20.approve",
      "offset": [
        4174,
        4178
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "581": {
      "fn": "ERC20.approve",
      "offset": [
        4190,
        4229
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 4,
      "value": "0x24F"
    },
    "584": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 5
    },
    "585": {
      "fn": "ERC20.approve",
      "offset": [
        4213,
        4220
      ],
      "op": "DUP5",
      "path": "1"
    },
    "586": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4228
      ],
      "op": "DUP5",
      "path": "1"
    },
    "587": {
      "fn": "ERC20.approve",
      "offset": [
        4190,
        4198
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x41B"
    },
    "590": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4190,
        4229
      ],
      "op": "JUMP",
      "path": "1"
    },
    "591": {
      "fn": "ERC20.approve",
      "offset": [
        4190,
        4229
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "592": {
      "op": "POP"
    },
    "593": {
      "fn": "ERC20.approve",
      "offset": [
        4246,
        4250
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 6,
      "value": "0x1"
    },
    "595": {
      "fn": "ERC20.approve",
      "offset": [
        4091,
        4257
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "596": {
      "fn": "ERC20.approve",
      "offset": [
        4091,
        4257
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "597": {
      "fn": "ERC20.approve",
      "offset": [
        4091,
        4257
      ],
      "op": "POP",
      "path": "1"
    },
    "598": {
      "fn": "ERC20.approve",
      "offset": [
        4091,
        4257
      ],
      "op": "POP",
      "path": "1"
    },
    "599": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4091,
        4257
      ],
      "op": "JUMP",
      "path": "1"
    },
    "600": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4724,
        5138
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "601": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4830,
        4834
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "603": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4846,
        4882
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 7,
      "value": "0x265"
    },
    "606": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4856,
        4862
      ],
      "op": "DUP5",
      "path": "1"
    },
    "607": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4864,
        4873
      ],
      "op": "DUP5",
      "path": "1"
    },
    "608": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4875,
        4881
      ],
      "op": "DUP5",
      "path": "1"
    },
    "609": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4846,
        4855
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x53F"
    },
    "612": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4846,
        4882
      ],
      "op": "JUMP",
      "path": "1"
    },
    "613": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4846,
        4882
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "618": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "620": {
      "op": "SHL"
    },
    "621": {
      "op": "SUB"
    },
    "622": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4920,
        4939
      ],
      "op": "DUP5",
      "path": "1"
    },
    "623": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4920,
        4939
      ],
      "op": "AND",
      "path": "1"
    },
    "624": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4893,
        4917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "626": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4920,
        4939
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "627": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4920,
        4939
      ],
      "op": "DUP2",
      "path": "1"
    },
    "628": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4920,
        4939
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "629": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4920,
        4931
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "631": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4920,
        4939
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "633": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4920,
        4939
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "634": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4920,
        4939
      ],
      "op": "DUP2",
      "path": "1"
    },
    "635": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4920,
        4939
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "636": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4920,
        4939
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "638": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4920,
        4939
      ],
      "op": "DUP1",
      "path": "1"
    },
    "639": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4920,
        4939
      ],
      "op": "DUP4",
      "path": "1"
    },
    "640": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4920,
        4939
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "641": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "10"
    },
    "642": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4920,
        4953
      ],
      "op": "DUP5",
      "path": "1"
    },
    "643": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4920,
        4953
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "644": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4920,
        4953
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "645": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4920,
        4953
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "646": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4920,
        4953
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "647": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4920,
        4953
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "648": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4920,
        4953
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "649": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4920,
        4953
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "650": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4971,
        4997
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 8
    },
    "651": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4971,
        4997
      ],
      "op": "DUP2",
      "path": "1"
    },
    "652": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4971,
        4997
      ],
      "op": "LT",
      "path": "1"
    },
    "653": {
      "branch": 28,
      "fn": "ERC20.transferFrom",
      "offset": [
        4971,
        4997
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "654": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4963,
        5042
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2EF"
    },
    "657": {
      "branch": 28,
      "fn": "ERC20.transferFrom",
      "offset": [
        4963,
        5042
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "658": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4963,
        5042
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "660": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4963,
        5042
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "661": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "665": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "667": {
      "op": "SHL"
    },
    "668": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4963,
        5042
      ],
      "op": "DUP2",
      "path": "1"
    },
    "669": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4963,
        5042
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "670": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "672": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4963,
        5042
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "674": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4963,
        5042
      ],
      "op": "DUP3",
      "path": "1"
    },
    "675": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4963,
        5042
      ],
      "op": "ADD",
      "path": "1"
    },
    "676": {
      "op": "MSTORE"
    },
    "677": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "679": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "681": {
      "op": "DUP3"
    },
    "682": {
      "op": "ADD"
    },
    "683": {
      "op": "MSTORE"
    },
    "684": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732061"
    },
    "717": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "719": {
      "op": "DUP3"
    },
    "720": {
      "op": "ADD"
    },
    "721": {
      "op": "MSTORE"
    },
    "722": {
      "op": "PUSH8",
      "value": "0x6C6C6F77616E6365"
    },
    "731": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "733": {
      "op": "SHL"
    },
    "734": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "736": {
      "op": "DUP3"
    },
    "737": {
      "op": "ADD"
    },
    "738": {
      "op": "MSTORE"
    },
    "739": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "741": {
      "op": "ADD"
    },
    "742": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4963,
        5042
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "743": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4963,
        5042
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "745": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4963,
        5042
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "746": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4963,
        5042
      ],
      "op": "DUP1",
      "path": "1"
    },
    "747": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4963,
        5042
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "748": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4963,
        5042
      ],
      "op": "SUB",
      "path": "1"
    },
    "749": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4963,
        5042
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "750": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4963,
        5042
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "751": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4963,
        5042
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "752": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5052,
        5109
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 9,
      "value": "0x303"
    },
    "755": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5061,
        5067
      ],
      "op": "DUP6",
      "path": "1"
    },
    "756": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "10"
    },
    "757": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5108
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FE"
    },
    "760": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5102,
        5108
      ],
      "op": "DUP7",
      "path": "1"
    },
    "761": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5099
      ],
      "op": "DUP6",
      "path": "1"
    },
    "762": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5108
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x850"
    },
    "765": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5083,
        5108
      ],
      "op": "JUMP",
      "path": "1"
    },
    "766": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5083,
        5108
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "767": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5052,
        5060
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x41B"
    },
    "770": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5052,
        5109
      ],
      "op": "JUMP",
      "path": "1"
    },
    "771": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5052,
        5109
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "772": {
      "op": "POP"
    },
    "773": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5127,
        5131
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 10,
      "value": "0x1"
    },
    "775": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5127,
        5131
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "776": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4724,
        5138
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "777": {
      "op": "POP"
    },
    "778": {
      "op": "POP"
    },
    "779": {
      "op": "POP"
    },
    "780": {
      "op": "POP"
    },
    "781": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        4724,
        5138
      ],
      "op": "JUMP",
      "path": "1"
    },
    "782": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5533,
        5745
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "783": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "10"
    },
    "784": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5621,
        5625
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "786": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5669,
        5694
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 11
    },
    "787": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5669,
        5694
      ],
      "op": "DUP2",
      "path": "1"
    },
    "788": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5669,
        5694
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "789": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5669,
        5680
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "791": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5669,
        5694
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "793": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5669,
        5694
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "794": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5669,
        5694
      ],
      "op": "DUP2",
      "path": "1"
    },
    "795": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5669,
        5694
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "796": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5669,
        5694
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "798": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5669,
        5694
      ],
      "op": "DUP1",
      "path": "1"
    },
    "799": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5669,
        5694
      ],
      "op": "DUP4",
      "path": "1"
    },
    "800": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5669,
        5694
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "805": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "807": {
      "op": "SHL"
    },
    "808": {
      "op": "SUB"
    },
    "809": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5669,
        5703
      ],
      "op": "DUP8",
      "path": "1"
    },
    "810": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5669,
        5703
      ],
      "op": "AND",
      "path": "1"
    },
    "811": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5669,
        5703
      ],
      "op": "DUP5",
      "path": "1"
    },
    "812": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5669,
        5703
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "813": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5669,
        5703
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "814": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5669,
        5703
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "815": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5669,
        5703
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "816": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5669,
        5703
      ],
      "op": "DUP2",
      "path": "1"
    },
    "817": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5669,
        5703
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "818": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5669,
        5703
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "819": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5621,
        5625
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "820": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5621,
        5625
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "821": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5637,
        5717
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x24F"
    },
    "824": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5637,
        5717
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "825": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5660,
        5667
      ],
      "op": "DUP6",
      "path": "1"
    },
    "826": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5660,
        5667
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "827": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5669,
        5716
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FE"
    },
    "830": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5669,
        5716
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "831": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5706,
        5716
      ],
      "op": "DUP7",
      "path": "1"
    },
    "832": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5706,
        5716
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "833": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5669,
        5716
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x838"
    },
    "836": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5669,
        5716
      ],
      "op": "JUMP",
      "path": "1"
    },
    "837": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3246,
        3371
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "842": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "844": {
      "op": "SHL"
    },
    "845": {
      "op": "SUB"
    },
    "846": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3346,
        3364
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 12
    },
    "847": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3346,
        3364
      ],
      "op": "AND",
      "path": "1"
    },
    "848": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3320,
        3327
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "850": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3346,
        3364
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "851": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3346,
        3364
      ],
      "op": "DUP2",
      "path": "1"
    },
    "852": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3346,
        3364
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "853": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3346,
        3364
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "855": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3346,
        3364
      ],
      "op": "DUP2",
      "path": "1"
    },
    "856": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3346,
        3364
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "857": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3346,
        3364
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "858": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3346,
        3364
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "860": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3346,
        3364
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "861": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3346,
        3364
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "862": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3346,
        3364
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "863": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3246,
        3371
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "864": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3246,
        3371
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "865": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3246,
        3371
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "866": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3246,
        3371
      ],
      "op": "POP",
      "path": "1"
    },
    "867": {
      "fn": "ERC20.balanceOf",
      "jump": "o",
      "offset": [
        3246,
        3371
      ],
      "op": "JUMP",
      "path": "1"
    },
    "868": {
      "fn": "ERC20.symbol",
      "offset": [
        2223,
        2316
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "869": {
      "fn": "ERC20.symbol",
      "offset": [
        2270,
        2283
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "871": {
      "fn": "ERC20.symbol",
      "offset": [
        2302,
        2309
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 13,
      "value": "0x4"
    },
    "873": {
      "fn": "ERC20.symbol",
      "offset": [
        2295,
        2309
      ],
      "op": "DUP1",
      "path": "1"
    },
    "874": {
      "fn": "ERC20.symbol",
      "offset": [
        2295,
        2309
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "875": {
      "fn": "ERC20.symbol",
      "offset": [
        2295,
        2309
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1BF"
    },
    "878": {
      "fn": "ERC20.symbol",
      "offset": [
        2295,
        2309
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "879": {
      "fn": "ERC20.symbol",
      "offset": [
        2295,
        2309
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x867"
    },
    "882": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2295,
        2309
      ],
      "op": "JUMP",
      "path": "1"
    },
    "883": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6232,
        6603
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "884": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "10"
    },
    "885": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6325,
        6329
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "887": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6368,
        6393
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "888": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6368,
        6393
      ],
      "op": "DUP2",
      "path": "1"
    },
    "889": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6368,
        6393
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "890": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6368,
        6379
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "892": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6368,
        6393
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "894": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6368,
        6393
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "895": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6368,
        6393
      ],
      "op": "DUP2",
      "path": "1"
    },
    "896": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6368,
        6393
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "897": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6368,
        6393
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "899": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6368,
        6393
      ],
      "op": "DUP1",
      "path": "1"
    },
    "900": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6368,
        6393
      ],
      "op": "DUP4",
      "path": "1"
    },
    "901": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6368,
        6393
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "906": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "908": {
      "op": "SHL"
    },
    "909": {
      "op": "SUB"
    },
    "910": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6368,
        6402
      ],
      "op": "DUP7",
      "path": "1"
    },
    "911": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6368,
        6402
      ],
      "op": "AND",
      "path": "1"
    },
    "912": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6368,
        6402
      ],
      "op": "DUP5",
      "path": "1"
    },
    "913": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6368,
        6402
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "914": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6368,
        6402
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "915": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6368,
        6402
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "916": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6368,
        6402
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "917": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6368,
        6402
      ],
      "op": "DUP2",
      "path": "1"
    },
    "918": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6368,
        6402
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "919": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6368,
        6402
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "920": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6420,
        6455
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 14
    },
    "921": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6420,
        6455
      ],
      "op": "DUP2",
      "path": "1"
    },
    "922": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6420,
        6455
      ],
      "op": "LT",
      "path": "1"
    },
    "923": {
      "branch": 29,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6420,
        6455
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "924": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6412,
        6497
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F5"
    },
    "927": {
      "branch": 29,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6412,
        6497
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "928": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6412,
        6497
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "930": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6412,
        6497
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "931": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "935": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "937": {
      "op": "SHL"
    },
    "938": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6412,
        6497
      ],
      "op": "DUP2",
      "path": "1"
    },
    "939": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6412,
        6497
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "940": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "942": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6412,
        6497
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "944": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6412,
        6497
      ],
      "op": "DUP3",
      "path": "1"
    },
    "945": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6412,
        6497
      ],
      "op": "ADD",
      "path": "1"
    },
    "946": {
      "op": "MSTORE"
    },
    "947": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "949": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "951": {
      "op": "DUP3"
    },
    "952": {
      "op": "ADD"
    },
    "953": {
      "op": "MSTORE"
    },
    "954": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "987": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "989": {
      "op": "DUP3"
    },
    "990": {
      "op": "ADD"
    },
    "991": {
      "op": "MSTORE"
    },
    "992": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "998": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1000": {
      "op": "SHL"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1003": {
      "op": "DUP3"
    },
    "1004": {
      "op": "ADD"
    },
    "1005": {
      "op": "MSTORE"
    },
    "1006": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1008": {
      "op": "ADD"
    },
    "1009": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6412,
        6497
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2E6"
    },
    "1012": {
      "op": "JUMP"
    },
    "1013": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6412,
        6497
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1014": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6507,
        6574
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 15,
      "value": "0x404"
    },
    "1017": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1018": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6530,
        6537
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1019": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6539,
        6573
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FE"
    },
    "1022": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6558,
        6573
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1023": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6539,
        6555
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1024": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6539,
        6573
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x850"
    },
    "1027": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6539,
        6573
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1028": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6507,
        6574
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1029": {
      "op": "POP"
    },
    "1030": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        6596
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 16,
      "value": "0x1"
    },
    "1032": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6592,
        6596
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1033": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6232,
        6603
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1034": {
      "op": "POP"
    },
    "1035": {
      "op": "POP"
    },
    "1036": {
      "op": "POP"
    },
    "1037": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "o",
      "offset": [
        6232,
        6603
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1038": {
      "fn": "ERC20.transfer",
      "offset": [
        3574,
        3746
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1039": {
      "fn": "ERC20.transfer",
      "offset": [
        3660,
        3664
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1041": {
      "fn": "ERC20.transfer",
      "offset": [
        3676,
        3718
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 17,
      "value": "0x24F"
    },
    "1044": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "10"
    },
    "1045": {
      "fn": "ERC20.transfer",
      "offset": [
        3700,
        3709
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1046": {
      "fn": "ERC20.transfer",
      "offset": [
        3711,
        3717
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1047": {
      "fn": "ERC20.transfer",
      "offset": [
        3676,
        3685
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x53F"
    },
    "1050": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3676,
        3718
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1051": {
      "fn": "ERC20._approve",
      "offset": [
        9496,
        9836
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1056": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1058": {
      "op": "SHL"
    },
    "1059": {
      "op": "SUB"
    },
    "1060": {
      "fn": "ERC20._approve",
      "offset": [
        9597,
        9616
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 18
    },
    "1061": {
      "branch": 30,
      "fn": "ERC20._approve",
      "offset": [
        9597,
        9616
      ],
      "op": "AND",
      "path": "1"
    },
    "1062": {
      "fn": "ERC20._approve",
      "offset": [
        9589,
        9657
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x47D"
    },
    "1065": {
      "branch": 30,
      "fn": "ERC20._approve",
      "offset": [
        9589,
        9657
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1066": {
      "fn": "ERC20._approve",
      "offset": [
        9589,
        9657
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1068": {
      "fn": "ERC20._approve",
      "offset": [
        9589,
        9657
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1069": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1073": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1075": {
      "op": "SHL"
    },
    "1076": {
      "fn": "ERC20._approve",
      "offset": [
        9589,
        9657
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1077": {
      "fn": "ERC20._approve",
      "offset": [
        9589,
        9657
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1078": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1080": {
      "fn": "ERC20._approve",
      "offset": [
        9589,
        9657
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1082": {
      "fn": "ERC20._approve",
      "offset": [
        9589,
        9657
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1083": {
      "fn": "ERC20._approve",
      "offset": [
        9589,
        9657
      ],
      "op": "ADD",
      "path": "1"
    },
    "1084": {
      "op": "MSTORE"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1087": {
      "op": "DUP1"
    },
    "1088": {
      "op": "DUP3"
    },
    "1089": {
      "op": "ADD"
    },
    "1090": {
      "op": "MSTORE"
    },
    "1091": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "1124": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1126": {
      "op": "DUP3"
    },
    "1127": {
      "op": "ADD"
    },
    "1128": {
      "op": "MSTORE"
    },
    "1129": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "1134": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1136": {
      "op": "SHL"
    },
    "1137": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1139": {
      "op": "DUP3"
    },
    "1140": {
      "op": "ADD"
    },
    "1141": {
      "op": "MSTORE"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1144": {
      "op": "ADD"
    },
    "1145": {
      "fn": "ERC20._approve",
      "offset": [
        9589,
        9657
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2E6"
    },
    "1148": {
      "op": "JUMP"
    },
    "1149": {
      "fn": "ERC20._approve",
      "offset": [
        9589,
        9657
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1154": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1156": {
      "op": "SHL"
    },
    "1157": {
      "op": "SUB"
    },
    "1158": {
      "fn": "ERC20._approve",
      "offset": [
        9675,
        9696
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 19
    },
    "1159": {
      "branch": 31,
      "fn": "ERC20._approve",
      "offset": [
        9675,
        9696
      ],
      "op": "AND",
      "path": "1"
    },
    "1160": {
      "fn": "ERC20._approve",
      "offset": [
        9667,
        9735
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4DE"
    },
    "1163": {
      "branch": 31,
      "fn": "ERC20._approve",
      "offset": [
        9667,
        9735
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1164": {
      "fn": "ERC20._approve",
      "offset": [
        9667,
        9735
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1166": {
      "fn": "ERC20._approve",
      "offset": [
        9667,
        9735
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1167": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1171": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1173": {
      "op": "SHL"
    },
    "1174": {
      "fn": "ERC20._approve",
      "offset": [
        9667,
        9735
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1175": {
      "fn": "ERC20._approve",
      "offset": [
        9667,
        9735
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1178": {
      "fn": "ERC20._approve",
      "offset": [
        9667,
        9735
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1180": {
      "fn": "ERC20._approve",
      "offset": [
        9667,
        9735
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1181": {
      "fn": "ERC20._approve",
      "offset": [
        9667,
        9735
      ],
      "op": "ADD",
      "path": "1"
    },
    "1182": {
      "op": "MSTORE"
    },
    "1183": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1185": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1187": {
      "op": "DUP3"
    },
    "1188": {
      "op": "ADD"
    },
    "1189": {
      "op": "MSTORE"
    },
    "1190": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "1223": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1225": {
      "op": "DUP3"
    },
    "1226": {
      "op": "ADD"
    },
    "1227": {
      "op": "MSTORE"
    },
    "1228": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "1231": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1233": {
      "op": "SHL"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1236": {
      "op": "DUP3"
    },
    "1237": {
      "op": "ADD"
    },
    "1238": {
      "op": "MSTORE"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1241": {
      "op": "ADD"
    },
    "1242": {
      "fn": "ERC20._approve",
      "offset": [
        9667,
        9735
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2E6"
    },
    "1245": {
      "op": "JUMP"
    },
    "1246": {
      "fn": "ERC20._approve",
      "offset": [
        9667,
        9735
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1251": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1253": {
      "op": "SHL"
    },
    "1254": {
      "op": "SUB"
    },
    "1255": {
      "fn": "ERC20._approve",
      "offset": [
        9746,
        9764
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 20
    },
    "1256": {
      "fn": "ERC20._approve",
      "offset": [
        9746,
        9764
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1257": {
      "fn": "ERC20._approve",
      "offset": [
        9746,
        9764
      ],
      "op": "AND",
      "path": "1"
    },
    "1258": {
      "fn": "ERC20._approve",
      "offset": [
        9746,
        9764
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1260": {
      "fn": "ERC20._approve",
      "offset": [
        9746,
        9764
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1261": {
      "fn": "ERC20._approve",
      "offset": [
        9746,
        9764
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1262": {
      "fn": "ERC20._approve",
      "offset": [
        9746,
        9764
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1263": {
      "fn": "ERC20._approve",
      "offset": [
        9746,
        9757
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1265": {
      "fn": "ERC20._approve",
      "offset": [
        9746,
        9764
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1267": {
      "fn": "ERC20._approve",
      "offset": [
        9746,
        9764
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1268": {
      "fn": "ERC20._approve",
      "offset": [
        9746,
        9764
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1269": {
      "fn": "ERC20._approve",
      "offset": [
        9746,
        9764
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1270": {
      "fn": "ERC20._approve",
      "offset": [
        9746,
        9764
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1272": {
      "fn": "ERC20._approve",
      "offset": [
        9746,
        9764
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1273": {
      "fn": "ERC20._approve",
      "offset": [
        9746,
        9764
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1274": {
      "fn": "ERC20._approve",
      "offset": [
        9746,
        9764
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1275": {
      "fn": "ERC20._approve",
      "offset": [
        9746,
        9773
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1276": {
      "fn": "ERC20._approve",
      "offset": [
        9746,
        9773
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1277": {
      "fn": "ERC20._approve",
      "offset": [
        9746,
        9773
      ],
      "op": "AND",
      "path": "1"
    },
    "1278": {
      "fn": "ERC20._approve",
      "offset": [
        9746,
        9773
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1279": {
      "fn": "ERC20._approve",
      "offset": [
        9746,
        9773
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1280": {
      "fn": "ERC20._approve",
      "offset": [
        9746,
        9773
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1281": {
      "fn": "ERC20._approve",
      "offset": [
        9746,
        9773
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1282": {
      "fn": "ERC20._approve",
      "offset": [
        9746,
        9773
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1283": {
      "fn": "ERC20._approve",
      "offset": [
        9746,
        9773
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1284": {
      "fn": "ERC20._approve",
      "offset": [
        9746,
        9773
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1285": {
      "fn": "ERC20._approve",
      "offset": [
        9746,
        9773
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1286": {
      "fn": "ERC20._approve",
      "offset": [
        9746,
        9773
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1287": {
      "fn": "ERC20._approve",
      "offset": [
        9746,
        9773
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1288": {
      "fn": "ERC20._approve",
      "offset": [
        9746,
        9782
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1289": {
      "fn": "ERC20._approve",
      "offset": [
        9746,
        9782
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1290": {
      "fn": "ERC20._approve",
      "offset": [
        9746,
        9782
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1291": {
      "fn": "ERC20._approve",
      "offset": [
        9797,
        9829
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 21
    },
    "1292": {
      "fn": "ERC20._approve",
      "offset": [
        9797,
        9829
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1293": {
      "op": "DUP5"
    },
    "1294": {
      "op": "DUP2"
    },
    "1295": {
      "op": "MSTORE"
    },
    "1296": {
      "fn": "ERC20._approve",
      "offset": [
        9797,
        9829
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1329": {
      "fn": "ERC20._approve",
      "offset": [
        9797,
        9829
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1330": {
      "op": "ADD"
    },
    "1331": {
      "fn": "ERC20._approve",
      "offset": [
        9797,
        9829
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1333": {
      "fn": "ERC20._approve",
      "offset": [
        9797,
        9829
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1334": {
      "fn": "ERC20._approve",
      "offset": [
        9797,
        9829
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1335": {
      "fn": "ERC20._approve",
      "offset": [
        9797,
        9829
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1336": {
      "fn": "ERC20._approve",
      "offset": [
        9797,
        9829
      ],
      "op": "SUB",
      "path": "1"
    },
    "1337": {
      "fn": "ERC20._approve",
      "offset": [
        9797,
        9829
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1338": {
      "fn": "ERC20._approve",
      "offset": [
        9797,
        9829
      ],
      "op": "LOG3",
      "path": "1"
    },
    "1339": {
      "fn": "ERC20._approve",
      "offset": [
        9496,
        9836
      ],
      "op": "POP",
      "path": "1"
    },
    "1340": {
      "fn": "ERC20._approve",
      "offset": [
        9496,
        9836
      ],
      "op": "POP",
      "path": "1"
    },
    "1341": {
      "fn": "ERC20._approve",
      "offset": [
        9496,
        9836
      ],
      "op": "POP",
      "path": "1"
    },
    "1342": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        9496,
        9836
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1343": {
      "fn": "ERC20._transfer",
      "offset": [
        7077,
        7669
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1348": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1350": {
      "op": "SHL"
    },
    "1351": {
      "op": "SUB"
    },
    "1352": {
      "fn": "ERC20._transfer",
      "offset": [
        7182,
        7202
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 22
    },
    "1353": {
      "branch": 32,
      "fn": "ERC20._transfer",
      "offset": [
        7182,
        7202
      ],
      "op": "AND",
      "path": "1"
    },
    "1354": {
      "fn": "ERC20._transfer",
      "offset": [
        7174,
        7244
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5A3"
    },
    "1357": {
      "branch": 32,
      "fn": "ERC20._transfer",
      "offset": [
        7174,
        7244
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1358": {
      "fn": "ERC20._transfer",
      "offset": [
        7174,
        7244
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1360": {
      "fn": "ERC20._transfer",
      "offset": [
        7174,
        7244
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1361": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1365": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1367": {
      "op": "SHL"
    },
    "1368": {
      "fn": "ERC20._transfer",
      "offset": [
        7174,
        7244
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1369": {
      "fn": "ERC20._transfer",
      "offset": [
        7174,
        7244
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1372": {
      "fn": "ERC20._transfer",
      "offset": [
        7174,
        7244
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1374": {
      "fn": "ERC20._transfer",
      "offset": [
        7174,
        7244
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1375": {
      "fn": "ERC20._transfer",
      "offset": [
        7174,
        7244
      ],
      "op": "ADD",
      "path": "1"
    },
    "1376": {
      "op": "MSTORE"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "1379": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1381": {
      "op": "DUP3"
    },
    "1382": {
      "op": "ADD"
    },
    "1383": {
      "op": "MSTORE"
    },
    "1384": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1419": {
      "op": "DUP3"
    },
    "1420": {
      "op": "ADD"
    },
    "1421": {
      "op": "MSTORE"
    },
    "1422": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "1428": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1430": {
      "op": "SHL"
    },
    "1431": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1433": {
      "op": "DUP3"
    },
    "1434": {
      "op": "ADD"
    },
    "1435": {
      "op": "MSTORE"
    },
    "1436": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1438": {
      "op": "ADD"
    },
    "1439": {
      "fn": "ERC20._transfer",
      "offset": [
        7174,
        7244
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2E6"
    },
    "1442": {
      "op": "JUMP"
    },
    "1443": {
      "fn": "ERC20._transfer",
      "offset": [
        7174,
        7244
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1450": {
      "op": "SHL"
    },
    "1451": {
      "op": "SUB"
    },
    "1452": {
      "fn": "ERC20._transfer",
      "offset": [
        7262,
        7285
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 23
    },
    "1453": {
      "branch": 33,
      "fn": "ERC20._transfer",
      "offset": [
        7262,
        7285
      ],
      "op": "AND",
      "path": "1"
    },
    "1454": {
      "fn": "ERC20._transfer",
      "offset": [
        7254,
        7325
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x605"
    },
    "1457": {
      "branch": 33,
      "fn": "ERC20._transfer",
      "offset": [
        7254,
        7325
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1458": {
      "fn": "ERC20._transfer",
      "offset": [
        7254,
        7325
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1460": {
      "fn": "ERC20._transfer",
      "offset": [
        7254,
        7325
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1461": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1465": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1467": {
      "op": "SHL"
    },
    "1468": {
      "fn": "ERC20._transfer",
      "offset": [
        7254,
        7325
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1469": {
      "fn": "ERC20._transfer",
      "offset": [
        7254,
        7325
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1470": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1472": {
      "fn": "ERC20._transfer",
      "offset": [
        7254,
        7325
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1474": {
      "fn": "ERC20._transfer",
      "offset": [
        7254,
        7325
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1475": {
      "fn": "ERC20._transfer",
      "offset": [
        7254,
        7325
      ],
      "op": "ADD",
      "path": "1"
    },
    "1476": {
      "op": "MSTORE"
    },
    "1477": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "1479": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1481": {
      "op": "DUP3"
    },
    "1482": {
      "op": "ADD"
    },
    "1483": {
      "op": "MSTORE"
    },
    "1484": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "1517": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1519": {
      "op": "DUP3"
    },
    "1520": {
      "op": "ADD"
    },
    "1521": {
      "op": "MSTORE"
    },
    "1522": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "1526": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "1528": {
      "op": "SHL"
    },
    "1529": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1531": {
      "op": "DUP3"
    },
    "1532": {
      "op": "ADD"
    },
    "1533": {
      "op": "MSTORE"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1536": {
      "op": "ADD"
    },
    "1537": {
      "fn": "ERC20._transfer",
      "offset": [
        7254,
        7325
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2E6"
    },
    "1540": {
      "op": "JUMP"
    },
    "1541": {
      "fn": "ERC20._transfer",
      "offset": [
        7254,
        7325
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1546": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1548": {
      "op": "SHL"
    },
    "1549": {
      "op": "SUB"
    },
    "1550": {
      "fn": "ERC20._transfer",
      "offset": [
        7418,
        7435
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1551": {
      "fn": "ERC20._transfer",
      "offset": [
        7418,
        7435
      ],
      "op": "AND",
      "path": "1"
    },
    "1552": {
      "fn": "ERC20._transfer",
      "offset": [
        7394,
        7415
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1554": {
      "fn": "ERC20._transfer",
      "offset": [
        7418,
        7435
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1555": {
      "fn": "ERC20._transfer",
      "offset": [
        7418,
        7435
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1556": {
      "fn": "ERC20._transfer",
      "offset": [
        7418,
        7435
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1557": {
      "fn": "ERC20._transfer",
      "offset": [
        7418,
        7435
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1559": {
      "fn": "ERC20._transfer",
      "offset": [
        7418,
        7435
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1560": {
      "fn": "ERC20._transfer",
      "offset": [
        7418,
        7435
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1561": {
      "fn": "ERC20._transfer",
      "offset": [
        7418,
        7435
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1562": {
      "fn": "ERC20._transfer",
      "offset": [
        7418,
        7435
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1564": {
      "fn": "ERC20._transfer",
      "offset": [
        7418,
        7435
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1565": {
      "fn": "ERC20._transfer",
      "offset": [
        7418,
        7435
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1566": {
      "fn": "ERC20._transfer",
      "offset": [
        7418,
        7435
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1567": {
      "fn": "ERC20._transfer",
      "offset": [
        7453,
        7476
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 24
    },
    "1568": {
      "fn": "ERC20._transfer",
      "offset": [
        7453,
        7476
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1569": {
      "fn": "ERC20._transfer",
      "offset": [
        7453,
        7476
      ],
      "op": "LT",
      "path": "1"
    },
    "1570": {
      "branch": 34,
      "fn": "ERC20._transfer",
      "offset": [
        7453,
        7476
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1571": {
      "fn": "ERC20._transfer",
      "offset": [
        7445,
        7519
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x67D"
    },
    "1574": {
      "branch": 34,
      "fn": "ERC20._transfer",
      "offset": [
        7445,
        7519
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1575": {
      "fn": "ERC20._transfer",
      "offset": [
        7445,
        7519
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1577": {
      "fn": "ERC20._transfer",
      "offset": [
        7445,
        7519
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1578": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1582": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1584": {
      "op": "SHL"
    },
    "1585": {
      "fn": "ERC20._transfer",
      "offset": [
        7445,
        7519
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1586": {
      "fn": "ERC20._transfer",
      "offset": [
        7445,
        7519
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1587": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1589": {
      "fn": "ERC20._transfer",
      "offset": [
        7445,
        7519
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1591": {
      "fn": "ERC20._transfer",
      "offset": [
        7445,
        7519
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1592": {
      "fn": "ERC20._transfer",
      "offset": [
        7445,
        7519
      ],
      "op": "ADD",
      "path": "1"
    },
    "1593": {
      "op": "MSTORE"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1596": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1598": {
      "op": "DUP3"
    },
    "1599": {
      "op": "ADD"
    },
    "1600": {
      "op": "MSTORE"
    },
    "1601": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "1634": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1636": {
      "op": "DUP3"
    },
    "1637": {
      "op": "ADD"
    },
    "1638": {
      "op": "MSTORE"
    },
    "1639": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1648": {
      "op": "SHL"
    },
    "1649": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1651": {
      "op": "DUP3"
    },
    "1652": {
      "op": "ADD"
    },
    "1653": {
      "op": "MSTORE"
    },
    "1654": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1656": {
      "op": "ADD"
    },
    "1657": {
      "fn": "ERC20._transfer",
      "offset": [
        7445,
        7519
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2E6"
    },
    "1660": {
      "op": "JUMP"
    },
    "1661": {
      "fn": "ERC20._transfer",
      "offset": [
        7445,
        7519
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1662": {
      "fn": "ERC20._transfer",
      "offset": [
        7549,
        7571
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 25,
      "value": "0x687"
    },
    "1665": {
      "fn": "ERC20._transfer",
      "offset": [
        7565,
        7571
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1666": {
      "fn": "ERC20._transfer",
      "offset": [
        7549,
        7562
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1667": {
      "fn": "ERC20._transfer",
      "offset": [
        7549,
        7571
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x850"
    },
    "1670": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7549,
        7571
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1671": {
      "fn": "ERC20._transfer",
      "offset": [
        7549,
        7571
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1676": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1678": {
      "op": "SHL"
    },
    "1679": {
      "op": "SUB"
    },
    "1680": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7546
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1681": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7546
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1682": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7546
      ],
      "op": "AND",
      "path": "1"
    },
    "1683": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7538
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1685": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7546
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1686": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7546
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1687": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7546
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1688": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7546
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1690": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7546
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1691": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7546
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1692": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7546
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1693": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7546
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1695": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7546
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1696": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7546
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1697": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7546
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1698": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7571
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1699": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7571
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1700": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7571
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1701": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7571
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1702": {
      "fn": "ERC20._transfer",
      "offset": [
        7581,
        7601
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 26
    },
    "1703": {
      "fn": "ERC20._transfer",
      "offset": [
        7581,
        7601
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1704": {
      "fn": "ERC20._transfer",
      "offset": [
        7581,
        7601
      ],
      "op": "AND",
      "path": "1"
    },
    "1705": {
      "fn": "ERC20._transfer",
      "offset": [
        7581,
        7601
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1706": {
      "fn": "ERC20._transfer",
      "offset": [
        7581,
        7601
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1707": {
      "fn": "ERC20._transfer",
      "offset": [
        7581,
        7601
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1708": {
      "fn": "ERC20._transfer",
      "offset": [
        7581,
        7601
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1709": {
      "fn": "ERC20._transfer",
      "offset": [
        7581,
        7601
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1710": {
      "fn": "ERC20._transfer",
      "offset": [
        7581,
        7611
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1711": {
      "fn": "ERC20._transfer",
      "offset": [
        7581,
        7611
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1712": {
      "fn": "ERC20._transfer",
      "offset": [
        7605,
        7611
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1713": {
      "fn": "ERC20._transfer",
      "offset": [
        7605,
        7611
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1714": {
      "fn": "ERC20._transfer",
      "offset": [
        7529,
        7538
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1715": {
      "fn": "ERC20._transfer",
      "offset": [
        7581,
        7611
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6BD"
    },
    "1718": {
      "fn": "ERC20._transfer",
      "offset": [
        7581,
        7611
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1719": {
      "fn": "ERC20._transfer",
      "offset": [
        7605,
        7611
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1720": {
      "fn": "ERC20._transfer",
      "offset": [
        7605,
        7611
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1721": {
      "fn": "ERC20._transfer",
      "offset": [
        7581,
        7611
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x838"
    },
    "1724": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7581,
        7611
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1725": {
      "fn": "ERC20._transfer",
      "offset": [
        7581,
        7611
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1726": {
      "fn": "ERC20._transfer",
      "offset": [
        7581,
        7611
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1727": {
      "fn": "ERC20._transfer",
      "offset": [
        7581,
        7611
      ],
      "op": "POP",
      "path": "1"
    },
    "1728": {
      "fn": "ERC20._transfer",
      "offset": [
        7581,
        7611
      ],
      "op": "POP",
      "path": "1"
    },
    "1729": {
      "fn": "ERC20._transfer",
      "offset": [
        7581,
        7611
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1730": {
      "fn": "ERC20._transfer",
      "offset": [
        7581,
        7611
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1731": {
      "fn": "ERC20._transfer",
      "offset": [
        7581,
        7611
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1732": {
      "fn": "ERC20._transfer",
      "offset": [
        7581,
        7611
      ],
      "op": "POP",
      "path": "1"
    },
    "1733": {
      "fn": "ERC20._transfer",
      "offset": [
        7644,
        7653
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 27
    },
    "1734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1740": {
      "op": "SHL"
    },
    "1741": {
      "op": "SUB"
    },
    "1742": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7662
      ],
      "op": "AND",
      "path": "1"
    },
    "1743": {
      "fn": "ERC20._transfer",
      "offset": [
        7636,
        7642
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1748": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1750": {
      "op": "SHL"
    },
    "1751": {
      "op": "SUB"
    },
    "1752": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7662
      ],
      "op": "AND",
      "path": "1"
    },
    "1753": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7662
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1786": {
      "fn": "ERC20._transfer",
      "offset": [
        7655,
        7661
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1787": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7662
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1789": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7662
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1790": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7662
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x709"
    },
    "1793": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7662
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1794": {
      "op": "DUP2"
    },
    "1795": {
      "op": "MSTORE"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1798": {
      "op": "ADD"
    },
    "1799": {
      "op": "SWAP1"
    },
    "1800": {
      "op": "JUMP"
    },
    "1801": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7662
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1802": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7662
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1804": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7662
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1805": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7662
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1806": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7662
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1807": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7662
      ],
      "op": "SUB",
      "path": "1"
    },
    "1808": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7662
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1809": {
      "fn": "ERC20._transfer",
      "offset": [
        7627,
        7662
      ],
      "op": "LOG3",
      "path": "1"
    },
    "1810": {
      "fn": "ERC20._transfer",
      "offset": [
        7077,
        7669
      ],
      "op": "POP",
      "path": "1"
    },
    "1811": {
      "fn": "ERC20._transfer",
      "offset": [
        7077,
        7669
      ],
      "op": "POP",
      "path": "1"
    },
    "1812": {
      "fn": "ERC20._transfer",
      "offset": [
        7077,
        7669
      ],
      "op": "POP",
      "path": "1"
    },
    "1813": {
      "fn": "ERC20._transfer",
      "offset": [
        7077,
        7669
      ],
      "op": "POP",
      "path": "1"
    },
    "1814": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        7077,
        7669
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1815": {
      "op": "JUMPDEST"
    },
    "1816": {
      "op": "DUP1"
    },
    "1817": {
      "op": "CALLDATALOAD"
    },
    "1818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1824": {
      "op": "SHL"
    },
    "1825": {
      "op": "SUB"
    },
    "1826": {
      "op": "DUP2"
    },
    "1827": {
      "op": "AND"
    },
    "1828": {
      "op": "DUP2"
    },
    "1829": {
      "op": "EQ"
    },
    "1830": {
      "op": "PUSH2",
      "value": "0x35F"
    },
    "1833": {
      "op": "JUMPI"
    },
    "1834": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1836": {
      "op": "DUP1"
    },
    "1837": {
      "op": "REVERT"
    },
    "1838": {
      "op": "JUMPDEST"
    },
    "1839": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1841": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1843": {
      "op": "DUP3"
    },
    "1844": {
      "op": "DUP5"
    },
    "1845": {
      "op": "SUB"
    },
    "1846": {
      "op": "SLT"
    },
    "1847": {
      "op": "ISZERO"
    },
    "1848": {
      "op": "PUSH2",
      "value": "0x73F"
    },
    "1851": {
      "op": "JUMPI"
    },
    "1852": {
      "op": "DUP1"
    },
    "1853": {
      "op": "DUP2"
    },
    "1854": {
      "op": "REVERT"
    },
    "1855": {
      "op": "JUMPDEST"
    },
    "1856": {
      "op": "PUSH2",
      "value": "0x748"
    },
    "1859": {
      "op": "DUP3"
    },
    "1860": {
      "op": "PUSH2",
      "value": "0x717"
    },
    "1863": {
      "jump": "i",
      "op": "JUMP"
    },
    "1864": {
      "op": "JUMPDEST"
    },
    "1865": {
      "op": "SWAP4"
    },
    "1866": {
      "op": "SWAP3"
    },
    "1867": {
      "op": "POP"
    },
    "1868": {
      "op": "POP"
    },
    "1869": {
      "op": "POP"
    },
    "1870": {
      "jump": "o",
      "op": "JUMP"
    },
    "1871": {
      "op": "JUMPDEST"
    },
    "1872": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1874": {
      "op": "DUP1"
    },
    "1875": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1877": {
      "op": "DUP4"
    },
    "1878": {
      "op": "DUP6"
    },
    "1879": {
      "op": "SUB"
    },
    "1880": {
      "op": "SLT"
    },
    "1881": {
      "op": "ISZERO"
    },
    "1882": {
      "op": "PUSH2",
      "value": "0x761"
    },
    "1885": {
      "op": "JUMPI"
    },
    "1886": {
      "op": "DUP1"
    },
    "1887": {
      "op": "DUP2"
    },
    "1888": {
      "op": "REVERT"
    },
    "1889": {
      "op": "JUMPDEST"
    },
    "1890": {
      "op": "PUSH2",
      "value": "0x76A"
    },
    "1893": {
      "op": "DUP4"
    },
    "1894": {
      "op": "PUSH2",
      "value": "0x717"
    },
    "1897": {
      "jump": "i",
      "op": "JUMP"
    },
    "1898": {
      "op": "JUMPDEST"
    },
    "1899": {
      "op": "SWAP2"
    },
    "1900": {
      "op": "POP"
    },
    "1901": {
      "op": "PUSH2",
      "value": "0x778"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1906": {
      "op": "DUP5"
    },
    "1907": {
      "op": "ADD"
    },
    "1908": {
      "op": "PUSH2",
      "value": "0x717"
    },
    "1911": {
      "jump": "i",
      "op": "JUMP"
    },
    "1912": {
      "op": "JUMPDEST"
    },
    "1913": {
      "op": "SWAP1"
    },
    "1914": {
      "op": "POP"
    },
    "1915": {
      "op": "SWAP3"
    },
    "1916": {
      "op": "POP"
    },
    "1917": {
      "op": "SWAP3"
    },
    "1918": {
      "op": "SWAP1"
    },
    "1919": {
      "op": "POP"
    },
    "1920": {
      "jump": "o",
      "op": "JUMP"
    },
    "1921": {
      "op": "JUMPDEST"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1924": {
      "op": "DUP1"
    },
    "1925": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1927": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1929": {
      "op": "DUP5"
    },
    "1930": {
      "op": "DUP7"
    },
    "1931": {
      "op": "SUB"
    },
    "1932": {
      "op": "SLT"
    },
    "1933": {
      "op": "ISZERO"
    },
    "1934": {
      "op": "PUSH2",
      "value": "0x795"
    },
    "1937": {
      "op": "JUMPI"
    },
    "1938": {
      "op": "DUP1"
    },
    "1939": {
      "op": "DUP2"
    },
    "1940": {
      "op": "REVERT"
    },
    "1941": {
      "op": "JUMPDEST"
    },
    "1942": {
      "op": "PUSH2",
      "value": "0x79E"
    },
    "1945": {
      "op": "DUP5"
    },
    "1946": {
      "op": "PUSH2",
      "value": "0x717"
    },
    "1949": {
      "jump": "i",
      "op": "JUMP"
    },
    "1950": {
      "op": "JUMPDEST"
    },
    "1951": {
      "op": "SWAP3"
    },
    "1952": {
      "op": "POP"
    },
    "1953": {
      "op": "PUSH2",
      "value": "0x7AC"
    },
    "1956": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1958": {
      "op": "DUP6"
    },
    "1959": {
      "op": "ADD"
    },
    "1960": {
      "op": "PUSH2",
      "value": "0x717"
    },
    "1963": {
      "jump": "i",
      "op": "JUMP"
    },
    "1964": {
      "op": "JUMPDEST"
    },
    "1965": {
      "op": "SWAP2"
    },
    "1966": {
      "op": "POP"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1969": {
      "op": "DUP5"
    },
    "1970": {
      "op": "ADD"
    },
    "1971": {
      "op": "CALLDATALOAD"
    },
    "1972": {
      "op": "SWAP1"
    },
    "1973": {
      "op": "POP"
    },
    "1974": {
      "op": "SWAP3"
    },
    "1975": {
      "op": "POP"
    },
    "1976": {
      "op": "SWAP3"
    },
    "1977": {
      "op": "POP"
    },
    "1978": {
      "op": "SWAP3"
    },
    "1979": {
      "jump": "o",
      "op": "JUMP"
    },
    "1980": {
      "op": "JUMPDEST"
    },
    "1981": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1983": {
      "op": "DUP1"
    },
    "1984": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1986": {
      "op": "DUP4"
    },
    "1987": {
      "op": "DUP6"
    },
    "1988": {
      "op": "SUB"
    },
    "1989": {
      "op": "SLT"
    },
    "1990": {
      "op": "ISZERO"
    },
    "1991": {
      "op": "PUSH2",
      "value": "0x7CE"
    },
    "1994": {
      "op": "JUMPI"
    },
    "1995": {
      "op": "DUP2"
    },
    "1996": {
      "op": "DUP3"
    },
    "1997": {
      "op": "REVERT"
    },
    "1998": {
      "op": "JUMPDEST"
    },
    "1999": {
      "op": "PUSH2",
      "value": "0x7D7"
    },
    "2002": {
      "op": "DUP4"
    },
    "2003": {
      "op": "PUSH2",
      "value": "0x717"
    },
    "2006": {
      "jump": "i",
      "op": "JUMP"
    },
    "2007": {
      "op": "JUMPDEST"
    },
    "2008": {
      "op": "SWAP5"
    },
    "2009": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2011": {
      "op": "SWAP4"
    },
    "2012": {
      "op": "SWAP1"
    },
    "2013": {
      "op": "SWAP4"
    },
    "2014": {
      "op": "ADD"
    },
    "2015": {
      "op": "CALLDATALOAD"
    },
    "2016": {
      "op": "SWAP4"
    },
    "2017": {
      "op": "POP"
    },
    "2018": {
      "op": "POP"
    },
    "2019": {
      "op": "POP"
    },
    "2020": {
      "jump": "o",
      "op": "JUMP"
    },
    "2021": {
      "op": "JUMPDEST"
    },
    "2022": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2024": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2026": {
      "op": "DUP1"
    },
    "2027": {
      "op": "DUP4"
    },
    "2028": {
      "op": "MSTORE"
    },
    "2029": {
      "op": "DUP4"
    },
    "2030": {
      "op": "MLOAD"
    },
    "2031": {
      "op": "DUP1"
    },
    "2032": {
      "op": "DUP3"
    },
    "2033": {
      "op": "DUP6"
    },
    "2034": {
      "op": "ADD"
    },
    "2035": {
      "op": "MSTORE"
    },
    "2036": {
      "op": "DUP3"
    },
    "2037": {
      "op": "JUMPDEST"
    },
    "2038": {
      "op": "DUP2"
    },
    "2039": {
      "op": "DUP2"
    },
    "2040": {
      "op": "LT"
    },
    "2041": {
      "op": "ISZERO"
    },
    "2042": {
      "op": "PUSH2",
      "value": "0x811"
    },
    "2045": {
      "op": "JUMPI"
    },
    "2046": {
      "op": "DUP6"
    },
    "2047": {
      "op": "DUP2"
    },
    "2048": {
      "op": "ADD"
    },
    "2049": {
      "op": "DUP4"
    },
    "2050": {
      "op": "ADD"
    },
    "2051": {
      "op": "MLOAD"
    },
    "2052": {
      "op": "DUP6"
    },
    "2053": {
      "op": "DUP3"
    },
    "2054": {
      "op": "ADD"
    },
    "2055": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2057": {
      "op": "ADD"
    },
    "2058": {
      "op": "MSTORE"
    },
    "2059": {
      "op": "DUP3"
    },
    "2060": {
      "op": "ADD"
    },
    "2061": {
      "op": "PUSH2",
      "value": "0x7F5"
    },
    "2064": {
      "op": "JUMP"
    },
    "2065": {
      "op": "JUMPDEST"
    },
    "2066": {
      "op": "DUP2"
    },
    "2067": {
      "op": "DUP2"
    },
    "2068": {
      "op": "GT"
    },
    "2069": {
      "op": "ISZERO"
    },
    "2070": {
      "op": "PUSH2",
      "value": "0x822"
    },
    "2073": {
      "op": "JUMPI"
    },
    "2074": {
      "op": "DUP4"
    },
    "2075": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2077": {
      "op": "DUP4"
    },
    "2078": {
      "op": "DUP8"
    },
    "2079": {
      "op": "ADD"
    },
    "2080": {
      "op": "ADD"
    },
    "2081": {
      "op": "MSTORE"
    },
    "2082": {
      "op": "JUMPDEST"
    },
    "2083": {
      "op": "POP"
    },
    "2084": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2086": {
      "op": "ADD"
    },
    "2087": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2089": {
      "op": "NOT"
    },
    "2090": {
      "op": "AND"
    },
    "2091": {
      "op": "SWAP3"
    },
    "2092": {
      "op": "SWAP1"
    },
    "2093": {
      "op": "SWAP3"
    },
    "2094": {
      "op": "ADD"
    },
    "2095": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2097": {
      "op": "ADD"
    },
    "2098": {
      "op": "SWAP4"
    },
    "2099": {
      "op": "SWAP3"
    },
    "2100": {
      "op": "POP"
    },
    "2101": {
      "op": "POP"
    },
    "2102": {
      "op": "POP"
    },
    "2103": {
      "jump": "o",
      "op": "JUMP"
    },
    "2104": {
      "op": "JUMPDEST"
    },
    "2105": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2107": {
      "op": "DUP3"
    },
    "2108": {
      "op": "NOT"
    },
    "2109": {
      "op": "DUP3"
    },
    "2110": {
      "op": "GT"
    },
    "2111": {
      "op": "ISZERO"
    },
    "2112": {
      "op": "PUSH2",
      "value": "0x84B"
    },
    "2115": {
      "op": "JUMPI"
    },
    "2116": {
      "op": "PUSH2",
      "value": "0x84B"
    },
    "2119": {
      "op": "PUSH2",
      "value": "0x8A2"
    },
    "2122": {
      "jump": "i",
      "op": "JUMP"
    },
    "2123": {
      "op": "JUMPDEST"
    },
    "2124": {
      "op": "POP"
    },
    "2125": {
      "op": "ADD"
    },
    "2126": {
      "op": "SWAP1"
    },
    "2127": {
      "jump": "o",
      "op": "JUMP"
    },
    "2128": {
      "op": "JUMPDEST"
    },
    "2129": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2131": {
      "op": "DUP3"
    },
    "2132": {
      "op": "DUP3"
    },
    "2133": {
      "op": "LT"
    },
    "2134": {
      "op": "ISZERO"
    },
    "2135": {
      "op": "PUSH2",
      "value": "0x862"
    },
    "2138": {
      "op": "JUMPI"
    },
    "2139": {
      "op": "PUSH2",
      "value": "0x862"
    },
    "2142": {
      "op": "PUSH2",
      "value": "0x8A2"
    },
    "2145": {
      "jump": "i",
      "op": "JUMP"
    },
    "2146": {
      "op": "JUMPDEST"
    },
    "2147": {
      "op": "POP"
    },
    "2148": {
      "op": "SUB"
    },
    "2149": {
      "op": "SWAP1"
    },
    "2150": {
      "jump": "o",
      "op": "JUMP"
    },
    "2151": {
      "op": "JUMPDEST"
    },
    "2152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2154": {
      "op": "DUP2"
    },
    "2155": {
      "op": "DUP2"
    },
    "2156": {
      "op": "SHR"
    },
    "2157": {
      "op": "SWAP1"
    },
    "2158": {
      "op": "DUP3"
    },
    "2159": {
      "op": "AND"
    },
    "2160": {
      "op": "DUP1"
    },
    "2161": {
      "op": "PUSH2",
      "value": "0x87B"
    },
    "2164": {
      "op": "JUMPI"
    },
    "2165": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2167": {
      "op": "DUP3"
    },
    "2168": {
      "op": "AND"
    },
    "2169": {
      "op": "SWAP2"
    },
    "2170": {
      "op": "POP"
    },
    "2171": {
      "op": "JUMPDEST"
    },
    "2172": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2174": {
      "op": "DUP3"
    },
    "2175": {
      "op": "LT"
    },
    "2176": {
      "op": "DUP2"
    },
    "2177": {
      "op": "EQ"
    },
    "2178": {
      "op": "ISZERO"
    },
    "2179": {
      "op": "PUSH2",
      "value": "0x89C"
    },
    "2182": {
      "op": "JUMPI"
    },
    "2183": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2188": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2190": {
      "op": "SHL"
    },
    "2191": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2193": {
      "op": "MSTORE"
    },
    "2194": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2196": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2198": {
      "op": "MSTORE"
    },
    "2199": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2201": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2203": {
      "op": "REVERT"
    },
    "2204": {
      "op": "JUMPDEST"
    },
    "2205": {
      "op": "POP"
    },
    "2206": {
      "op": "SWAP2"
    },
    "2207": {
      "op": "SWAP1"
    },
    "2208": {
      "op": "POP"
    },
    "2209": {
      "jump": "o",
      "op": "JUMP"
    },
    "2210": {
      "op": "JUMPDEST"
    },
    "2211": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2216": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2218": {
      "op": "SHL"
    },
    "2219": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2221": {
      "op": "MSTORE"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2224": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2226": {
      "op": "MSTORE"
    },
    "2227": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2229": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2231": {
      "op": "REVERT"
    }
  },
  "sha1": "b156e38d21deab5f779a5cd4fbce705efe3f2a94",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20 {\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The defaut value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overloaded;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\n        _approve(sender, _msgSender(), currentAllowance - amount);\n\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        _approve(_msgSender(), spender, currentAllowance - subtractedValue);\n\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        uint256 senderBalance = _balances[sender];\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[sender] = senderBalance - amount;\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        _balances[account] = accountBalance - amount;\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n}\n",
  "sourceMap": "1279:9238:1:-:0;;;1842:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1909:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1932:17:1;;;;:7;;:17;;;;;:::i;:::-;;1842:114;;1279:9238;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1279:9238:1;;;-1:-1:-1;1279:9238:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:909:28;;121:3;114:4;106:6;102:17;98:27;88:2;;143:5;136;129:20;88:2;170:13;;-1:-1:-1;;;;;232:10:28;;;229:2;;;245:18;;:::i;:::-;320:2;314:9;288:2;374:13;;-1:-1:-1;;370:22:28;;;394:2;366:31;362:40;350:53;;;418:18;;;438:22;;;415:46;412:2;;;464:18;;:::i;:::-;504:10;500:2;493:22;539:2;531:6;524:18;561:4;551:14;;606:3;601:2;596;588:6;584:15;580:24;577:33;574:2;;;627:5;620;613:20;574:2;653:5;644:14;;667:133;681:2;678:1;675:9;667:133;;;769:14;;;765:23;;759:30;738:14;;;734:23;;727:63;692:10;;;;667:133;;;818:2;815:1;812:9;809:2;;;877:5;872:2;867;859:6;855:15;851:24;844:39;809:2;911:6;78:845;-1:-1:-1;;;;;;78:845:28:o;928:592::-;;;1088:2;1076:9;1067:7;1063:23;1059:32;1056:2;;;1109:6;1101;1094:22;1056:2;1141:16;;-1:-1:-1;;;;;1206:14:28;;;1203:2;;;1238:6;1230;1223:22;1203:2;1266:61;1319:7;1310:6;1299:9;1295:22;1266:61;:::i;:::-;1256:71;;1373:2;1362:9;1358:18;1352:25;1336:41;;1402:2;1392:8;1389:16;1386:2;;;1423:6;1415;1408:22;1386:2;;1451:63;1506:7;1495:8;1484:9;1480:24;1451:63;:::i;:::-;1441:73;;;1046:474;;;;;:::o;1525:380::-;1604:1;1600:12;;;;1647;;;1668:2;;1722:4;1714:6;1710:17;1700:27;;1668:2;1775;1767:6;1764:14;1744:18;1741:38;1738:2;;;1821:10;1816:3;1812:20;1809:1;1802:31;1856:4;1853:1;1846:15;1884:4;1881:1;1874:15;1738:2;;1580:325;;;:::o;1910:127::-;1971:10;1966:3;1962:20;1959:1;1952:31;2002:4;1999:1;1992:15;2026:4;2023:1;2016:15;1942:95;1279:9238:1;;;;;;",
  "sourcePath": "C:/Users/justa/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC20/ERC20.sol",
  "type": "contract"
}